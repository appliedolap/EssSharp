openapi: 3.0.1
info:
  description: The REST API for Oracle Essbase enables you to automate management
    of Essbase resources and operations. All requests and responses are communicated
    over secured HTTP.
  title: ""
  version: "1.0"
servers:
- url: /essbase/rest/v1
security:
- basicAuth: []
tags:
- name: Roles
- name: Files
- name: Application Configuration
- name: Application Connections
- name: Global Connections
- name: Application Datasources
- name: Global Datasources
- name: Drill Through Reports
- name: Email
- name: Workbook Utilities
- name: Filters
- name: Groups
- name: Jobs
- name: Location Aliases
- name: Locks
- name: Application Logs
- name: About Essbase
- name: Applications
- name: Audit Trail
- name: Batch Outline Editing
- name: Database Size Statistics
- name: Dimensions
- name: URLs
- name: File Scanner
- name: User Session
- name: Templates and Utilities
- name: ASO Load buffers
- name: Grid Preferences
- name: Grid
- name: Performance Analyzer
- name: Layouts
- name: Execute MDX
- name: Named Queries
- name: Database Settings and Statistics
- name: Application Settings and Statistics
- name: Outline Viewer
- name: Partitions
- name: Preferences
- name: Properties
- name: Group Provisioning Report
- name: Application Role Provisioning
- name: Service Role Provisioning
- name: User Provisioning Report
- name: Rules
- name: Sandbox Dimension
- name: Scenarios
- name: Scripts
- name: Sessions
- name: Streaming Data Load
- name: Streaming Dimension Build
- name: Users
- name: Server Variables
- name: Variables
- name: Platform Service Settings
paths:
  /roles:
    get:
      description: "<p>Returns the roles available in Essbase. Valid type values are\
        \ <code>application</code> and <code>server</code>. If type is empty, then\
        \ both <code>application</code> and <code>server</code> roles are returned.</p>\
        \ <p>If you are using EPM Shared Services security mode, this operation is\
        \ not available. Instead, manage users, groups, and permissions in the Shared\
        \ Services Console.</p>"
      operationId: Roles.getRoles
      parameters:
      - description: <p>Valid type values are <code>application</code> and <code>server</code>.</p>
        in: query
        name: type
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Roles'
            application/xml:
              schema:
                $ref: '#/components/schemas/Roles'
          description: <p><Strong>OK</strong><p>Returns roles for the specified type.</p>
      summary: Get Essbase Roles
      tags:
      - Roles
  /files/actions/copy:
    post:
      description: Copy a file from source to destination.
      operationId: Files.copyResource
      parameters:
      - description: <p>Overwrite existing file.</p>
        in: query
        name: overwrite
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilePathDetail'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilePathDetail'
        description: <p>File path details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>File copied successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Copy File
      tags:
      - Files
      x-codegen-request-body-name: body
  /files/abort/{path}:
    delete:
      description: "<p>Abort file upload api , abort the upload operation of a file\
        \ and delete all the uploaded parts.</p>"
      operationId: Files.abortUpload
      parameters:
      - description: <p>File Path to abort</p>
        in: path
        name: path
        required: true
        schema:
          pattern: .+
          type: string
      - description: <p>Upload Id of file to abort</p>
        in: query
        name: uploadId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The file upload operation
            abort successfully.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Abort File Upload
      tags:
      - Files
  /files/upload-create/{path}:
    post:
      description: "Initialize file upload in parts by registering the file, it returns\
        \ unique upload id , which must be included in any request related to this\
        \ file part upload."
      operationId: Files.createUpload
      parameters:
      - description: <p>Catalog path</p>
        in: path
        name: path
        required: true
        schema:
          pattern: .+
          type: string
      - description: <p>Overwrite the file</p>
        in: query
        name: overwrite
        required: true
        schema:
          default: false
          type: boolean
      - description: <p>Append</p>
        in: header
        name: append
        required: true
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFilePartUploadResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateFilePartUploadResponse'
          description: <p><strong>OK</strong></p><p>Registered file successfully.
            Returns unique id.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Logged in user may not\
            \ have appropriate permissions, or the file may already exist.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Upload
      tags:
      - Files
  /files/upload-part/{path}:
    put:
      description: Upload Part request for each object part upload. It should contain
        upload ID.
      operationId: Files.uploadPart
      parameters:
      - description: <p>Catalog Path </p>
        in: path
        name: path
        required: true
        schema:
          pattern: .+
          type: string
      - description: <p>Part Number</p>
        in: query
        name: partNum
        required: true
        schema:
          format: int32
          type: integer
      - description: <p>Upload Id</p>
        in: query
        name: uploadId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadFilePartResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UploadFilePartResponse'
          description: <p><strong>OK</strong></p><p>Returns a unique ETag(entity tag).
            Both the part number and corresponding ETag value for each part when commit
            the uploaded.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>If any issue while uploading\
            \ parts, it returns error and all parts get clean.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Upload the part
      tags:
      - Files
  /files/upload-commit/{path}:
    post:
      description: <p>Commit the upload. Include the part number and corresponding
        ETag value for each part.</p>
      operationId: Files.uploadCommit
      parameters:
      - in: path
        name: path
        required: true
        schema:
          pattern: .+
          type: string
      - in: query
        name: uploadId
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
          application/xml:
            schema:
              additionalProperties:
                type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitFilePartUploadResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CommitFilePartUploadResponse'
          description: '<p><strong>OK</strong></p><p>Returns ETag for the file.</p> '
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Error occurred while
            merging all the parts.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Upload Commit
      tags:
      - Files
      x-codegen-request-body-name: body
  /files/uploadconfig:
    get:
      operationId: getUploadConfig
      responses:
        default:
          content: {}
          description: successful operation
      tags:
      - Files
  /files:
    get:
      description: <p>List catalog root folders.</p>
      operationId: Files.listRootFolders
      parameters:
      - description: <p>Filter the list of files.</p>
        in: query
        name: filter
        schema:
          type: string
      - description: <p>Return search results recursively.</p>
        in: query
        name: recursive
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileCollectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/FileCollectionResponse'
          description: <p><strong>OK</strong></p><p>Folder list.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Invalid path.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Root Folders
      tags:
      - Files
  /files/homepath:
    get:
      description: <p>Get user home path.</p>
      operationId: Files.getUserHomePath
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: <p><strong>OK</strong></p><p>User home path.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Home Path
      tags:
      - Files
  /files/sharedpath:
    get:
      description: <p>Get user shared path.</p>
      operationId: Files.getSharedPath
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: <p><strong>OK</strong></p><p>The shared path was returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Shared Path
      tags:
      - Files
  /files/actions/move:
    post:
      description: "<p>Either moves a file from source to destination, or renames\
        \ a file or folder. Moving a folder is not supported. Renaming a folder is\
        \ supported only if the folder is not in the applications directory.</p>"
      operationId: Files.moveResource
      parameters:
      - description: <p>Overwrite existing file. Only applicable for moving or renaming
          a file.</p>
        in: query
        name: overwrite
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilePathDetail'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilePathDetail'
        description: <p>File path details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>The file operation completed successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Move or Rename File
      tags:
      - Files
      x-codegen-request-body-name: body
  /files/actions/extract:
    post:
      description: "<p>Extract a zip file on same location. Supported for applications,\
        \ users and shared folders.</p>"
      operationId: Files.extract
      parameters:
      - description: <p>Overwrite existing file. Not applicable for folder.</p>
        in: query
        name: overwrite
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZipFileDetails'
          application/xml:
            schema:
              $ref: '#/components/schemas/ZipFileDetails'
        description: <p>Zip file path details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>The file operation completed successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Contains an invalid special
            character.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Extract Zip File
      tags:
      - Files
      x-codegen-request-body-name: body
  /files/{path}:
    delete:
      description: <p>Delete the file or folder specified in the path.</p>
      operationId: Files.deleteFile
      parameters:
      - description: Path of file/folder to delete
        in: path
        name: path
        required: true
        schema:
          pattern: .+
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The file or folder was
            removed successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete File or Folder
      tags:
      - Files
    get:
      description: "<p>Returns a list of files, or downloads the specified file. To\
        \ list files, use <code>Accept='application/json'</code> for the Accept header.\
        \ To download, use <code>Accept='application/octet-stream'</code> for the\
        \ Accept header.</p>"
      operationId: Files.listFiles
      parameters:
      - description: "<p>Catalog path, starting with <code>applications</code>, <code>shared</code>,\
          \ or <code>users</code>. If listing files, this is the folder path. If downloading\
          \ files, this is the file path.</p><p>Examples:</p><ul><li><code>applications/sample</code></li><li><code>shared</code></li><li><code>users/ksmith</code></li></ul>"
        in: path
        name: path
        required: true
        schema:
          pattern: .+
          type: string
      - description: <p>Number of items to omit from the start of the result set.
          Default value is 0. Applicable only for listing files.</p>
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: <p>Maximum number of files to return. Applicable only for listing
          files.</p>
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: "<p>List files by type. If type is not specified, returns all\
          \ files. Applicable only for listing files.</p>"
        in: query
        name: type
        schema:
          type: string
      - description: "<p>If true, overwrite files. If false, any existing file is\
          \ validated but not overwritten. Applicable only with query parameters \
          \ <code>action=validateUpload</code> and <code>Accept='application/json'</code>\
          \ or <code>Accept='application/xml'</code> . Default value is false.</p>"
        in: query
        name: overwrite
        schema:
          default: false
          type: boolean
      - description: <p>Validates the upload. Supported action values are <code>validateUpload</code>
          and <code>'Accept=application/json'</code> or <code>'Accept=application/xml'</code>.</p>
        in: query
        name: action
        schema:
          type: string
      - description: <p>Validates whether enough free space is available. Applicable
          only with query parameters <code>action='validateUpload'</code> and <code>Accept='application/json'</code>
          or <code>Accept='application/xml'</code>.</p>
        in: query
        name: fileSize
        schema:
          format: int64
          type: integer
      - description: <p>Filter the list of files.</p>
        in: query
        name: filter
        schema:
          type: string
      - description: <p>Recursive param to get search result as recursive.</p>
        in: query
        name: recursive
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileCollectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/FileCollectionResponse'
          description: "<p><strong>OK</strong></p><p> Response type can be either\
            \ JSON/XML or stream, depending on the Accept header. If <code>Accept=application/json</code>\
            \ or <code>Accept=application/xml</code>, the response lists files and\
            \ current folder details. If <code>Accept=application/octet-stream</code>,\
            \ the response is returned as a stream. If query parameters include <code>action=validateUpload</code>\
            \ and <code>Accept='application/json'</code> or <code>Accept='application/xml'</code>,\
            \ the response is empty.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Logged in user may not\
            \ have appropriate permissions, or the file may already exist when query\
            \ parameters include <code>action=validateUpload</code> and <code>Accept='application/json'</code>\
            \ or <code>Accept='application/xml'</code>.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List or Download Files
      tags:
      - Files
    put:
      description: "<p>Uploads a file to Essbase.</p><p>Supported file types include\
        \ text files, rules files, calculation script files, and MaxL script files.</p>\
        \ <p>If there is no content type, and a folder name is specified in the URL,\
        \ a folder is created.</p>"
      operationId: Files.addFile
      parameters:
      - description: "<p>Catalog path. If <code>Content-Type=application/octet-stream</code>,\
          \ this is a file name. Otherwise, it is a folder name.</p>"
        in: path
        name: path
        required: true
        schema:
          pattern: .+
          type: string
      - description: <p>Applicable only for adding a file. Overwriting folders is
          not supported.</p>
        in: query
        name: overwrite
        required: true
        schema:
          default: false
          type: boolean
      - description: append
        in: header
        name: append
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        description: <p>Applicable only for adding a file. Provides the stream to
          upload.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericEntity'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenericEntity'
          description: "<p><strong>OK</strong></p><p>The file uploaded successfully\
            \ (if Content-Type is <code>application/octet-stream</code>), or the folder\
            \ was created successfully (if there is no Content-Type)."
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Logged in user may not\
            \ have appropriate permissions, or the file or folder may already exist.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Upload File or Create Folder
      tags:
      - Files
      x-codegen-request-body-name: stream
  /applications/{applicationName}/configurations/{configId}:
    delete:
      description: <p>Deletes the specified configuration property from the specified
        application.</p>
      operationId: ApplicationConfiguration.deleteConfiguration
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Configuration property name.</p>
        in: path
        name: configId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The configuration was
            deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete the
            configuration. The application name or configuration property is invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Application Configuration
      tags:
      - Application Configuration
    get:
      description: <p>Returns configuration (based on configuration property name)
        from the specified application.</p>
      operationId: ApplicationConfiguration.getConfiguration
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Configuration property name.</p>
        in: path
        name: configId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationConfigEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationConfigEntry'
          description: "<p><strong>OK</strong></p><p>The configuration was retrieved\
            \ successfully. Returns the configuration details and the links to get,\
            \ edit, or delete the configuration.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the configuration
            information. The application name or configuration property is invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Configuration Property
      tags:
      - Application Configuration
    put:
      description: <p>Updates the application configuration and returns the updated
        configuration details.</p>
      operationId: ApplicationConfiguration.setConfiguration
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Configuration property name.</p>
        in: path
        name: configId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationConfigEntry'
          application/xml:
            schema:
              $ref: '#/components/schemas/ApplicationConfigEntry'
        description: <p>Configuration property value entry.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationConfigEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationConfigEntry'
          description: "<p><strong>OK</strong></p><p>The configuration was updated\
            \ successfully. Returns the configuration details and the links to get,\
            \ edit, or delete the configuration.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to update the\
            \ configuration. The application name or configuration property is invalid,\
            \ or the specified configuration property has not been added to the application.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Application Configuration
      tags:
      - Application Configuration
      x-codegen-request-body-name: body
  /applications/{applicationName}/configurationkeys:
    get:
      description: "<p>Returns all the configuration properties currently set for\
        \ the specified application, with option to filter by configured value.</p>"
      operationId: ApplicationConfiguration.getConfigurationKeys
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Filter key to refine the configuration property results.</p>
        in: query
        name: key
        schema:
          default: '*'
          type: string
      - description: <p>Specify <code>all</code> to return all configured properties.
          Specify <code>true</code> to return enabled configuration properties. Specify
          <code>false</code> to return configuration properties that are turned off.</p>
        in: query
        name: configured
        schema:
          default: all
          enum:
          - all
          - "true"
          - "false"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationConfigList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationConfigList'
                type: array
          description: <p><strong>OK</strong></p><p>The configuration properties were
            retrieved successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the configuration
            properties. The application name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Configuration (Filtered)
      tags:
      - Application Configuration
  /applications/{applicationName}/configurations:
    get:
      description: <p>Returns all the configuration properties currently set for the
        specified application.</p>
      operationId: ApplicationConfiguration.getConfigurations
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationConfigList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationConfigList'
          description: "<p><strong>OK</strong></p><p>Configuration properties retrieved\
            \ successfully. Returns all the configuration properties which are set\
            \ for the application, and the links to get, edit, or delete each property.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the configuration
            properties. The application name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Configuration
      tags:
      - Application Configuration
    post:
      description: <p>Adds the configuration property to the application and returns
        the added configuration property name.</p>
      operationId: ApplicationConfiguration.addConfiguration
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationConfigEntry'
          application/xml:
            schema:
              $ref: '#/components/schemas/ApplicationConfigEntry'
        description: <p>Configuration property entry.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationConfigEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationConfigEntry'
          description: "<p><strong>OK</strong></p><p>Configuration property added\
            \ successfully. Returns the configuration details and the links to get,\
            \ edit, or delete the configuration.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to add the configuration\
            \ property. The application name or the configuration property JSON could\
            \ be incorrect, or the configuration property might already have been\
            \ added to the application.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add Application Configuration
      tags:
      - Application Configuration
      x-codegen-request-body-name: body
    put:
      description: <p>Updates the application configurations and returns the updated
        configuration details.</p>
      operationId: ApplicationConfiguration.setConfigurations
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ApplicationConfigEntry'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/ApplicationConfigEntry'
              type: array
        description: <p>Configuration property value entries.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationConfigList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationConfigList'
          description: "<p><strong>OK</strong></p><p>Configurations were updated successfully.\
            \ Returns the configuration details and the links to get, edit, or delete\
            \ the configurations.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to update the\
            \ configurations. The application name or configuration entries is invalid,\
            \ or the given configuration property has not been added to the application.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Updates Application Configurations
      tags:
      - Application Configuration
      x-codegen-request-body-name: body
  /applications/{applicationName}/connections/{connectionName}:
    delete:
      description: <p>Delete a saved application connection by name.</p>
      operationId: ApplicationConnections.deleteConnection
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The connection was deleted
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete connection.</p>
      summary: Delete Application Connection
      tags:
      - Application Connections
    get:
      description: <p>Returns details about the specified application-level connection.</p>
      operationId: ApplicationConnections.getConnectionDetails
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: "<p>If set to true, the encrypted password is returned in the\
          \ result.</p>"
        in: query
        name: password
        schema:
          type: boolean
      - description: <p>Connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
            application/xml:
              schema:
                $ref: '#/components/schemas/Connection'
          description: <p><strong>OK</strong></p><p>Connection details returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get connection
            details.</p>
      summary: Get Application Connection
      tags:
      - Application Connections
    put:
      description: "<p>Update the named application connection. If successful, returns\
        \ details of the updated connection. <code>type</code> is a required input\
        \ for all connections. Other required inputs differ, depending on the type\
        \ of the connection.</p>"
      operationId: ApplicationConnections.updateConnection
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
          application/xml:
            schema:
              $ref: '#/components/schemas/Connection'
        description: <p>Connection details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
            application/xml:
              schema:
                $ref: '#/components/schemas/Connection'
          description: <p><strong>OK</strong></p><p>Connection updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update connection.</p>
      summary: Update Application Connection
      tags:
      - Application Connections
      x-codegen-request-body-name: body
  /applications/{applicationName}/connections/{connectionName}/wallet:
    put:
      description: Upload a connection wallet file.
      operationId: ApplicationConnections.wallets
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletLocation'
            application/xml:
              schema:
                $ref: '#/components/schemas/WalletLocation'
          description: <p><strong>OK</strong></p><p>Return the wallet file location
            in catalog.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Unable to process wallet
            file.</p>
      summary: Upload a connection wallet file
      tags:
      - Application Connections
  /applications/{applicationName}/connections:
    get:
      description: "<p>Returns a list of connections for the application, including\
        \ details such as name, description, and type.</p>"
      operationId: ApplicationConnections.getConnections
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Number of connections to omit from the start of the result
          set.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: <p>Maximum number of connections to return. Default is 50.</p>
        in: query
        name: limit
        schema:
          default: 50
          format: int32
          type: integer
      - description: "<p>Type of connections to return, if provided</p>"
        in: query
        name: connType
        schema:
          type: string
      - description: "<p>Used in conjunction with connType param. If set to true,\
          \ returns repository-based Autonomous Data Warehouse connections. Default\
          \ is false</p>"
        in: query
        name: repoConn
        schema:
          default: false
          type: boolean
      - description: "<p>Used in conjunction with connType param. If set to true,\
          \ returns wallet-based Autonomous Data Warehouse connections. Default is\
          \ false</p>"
        in: query
        name: walletConn
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionsList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConnectionsList'
          description: <p><strong>OK</strong></p><p>List of connections returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to list connections.</p>
      summary: List Application Connections
      tags:
      - Application Connections
    post:
      description: <p>Creates an application-level connection based on specified inputs.
        <code>name</code> and <code>type</code> are required inputs for all types
        of connections. Other required inputs differ based on the type of the connection.</p>
      operationId: ApplicationConnections.createConnection
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
          application/xml:
            schema:
              $ref: '#/components/schemas/Connection'
        description: <p>Connection details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Connection created successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to create connection.</p>
      summary: Create Application Connection
      tags:
      - Application Connections
      x-codegen-request-body-name: body
  /applications/{applicationName}/connections/{connectionName}/actions/test:
    post:
      description: <p>Tests the saved application-level connection with the specified
        name.</p>
      operationId: ApplicationConnections.testConnectionExisting
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Saved connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>The connection tested successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Error occurred while
            testing connection.</p>
      summary: Test Saved Application Connection
      tags:
      - Application Connections
  /applications/{applicationName}/connections/actions/test:
    post:
      description: "<p>Tests a new or updated application connection, using specified\
        \ inputs, without saving it.</p>"
      operationId: ApplicationConnections.testConnection
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
          application/xml:
            schema:
              $ref: '#/components/schemas/Connection'
        description: <p>Connection details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>The connection tested successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Error occurred while
            testing connection.</p>
      summary: Test New Application Connection
      tags:
      - Application Connections
      x-codegen-request-body-name: body
  /connections/{connectionName}:
    delete:
      description: <p>Deletes a named global connection.</p>
      operationId: GlobalConnections.deleteConnection
      parameters:
      - description: <p>Connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The connection was deleted
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete the
            connection.</p>
      summary: Delete Connection
      tags:
      - Global Connections
    get:
      description: <p>Returns details about the specified global connection.</p>
      operationId: GlobalConnections.getConnectionDetails
      parameters:
      - description: "<p>If set to true, the encrypted password is returned in the\
          \ result.</p>"
        in: query
        name: password
        schema:
          type: boolean
      - description: <p>Connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
            application/xml:
              schema:
                $ref: '#/components/schemas/Connection'
          description: <p><strong>OK</strong></p><p>Connection details returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get connection
            details.</p>
      summary: Get Connection
      tags:
      - Global Connections
    put:
      description: "<p>Update the named global connection. If the update is successful,\
        \ returns details about the updated connection. <code>type</code> is a required\
        \ input for all types of connections. Other required inputs differ based on\
        \ the type of the connection.</p>"
      operationId: GlobalConnections.updateConnection
      parameters:
      - description: <p>Connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
          application/xml:
            schema:
              $ref: '#/components/schemas/Connection'
        description: <p>Connection details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
            application/xml:
              schema:
                $ref: '#/components/schemas/Connection'
          description: <p><strong>OK</strong></p><p>Connection updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update connection.</p>
      summary: Update Connection
      tags:
      - Global Connections
      x-codegen-request-body-name: body
  /connections/{connectionName}/wallet:
    put:
      description: "<p>Upload a connection wallet file for a global connection. Oracle\
        \ client credentials (wallet files) are downloaded from Autonomous Data Warehouse\
        \ by a service administrator. If you are not an Autonomous Data Warehouse\
        \ administrator, your administrator should provide you with the client credentials.</p>"
      operationId: GlobalConnections.wallets
      parameters:
      - description: <p>Connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletLocation'
            application/xml:
              schema:
                $ref: '#/components/schemas/WalletLocation'
          description: <p><strong>OK</strong></p><p>Return the wallet file location
            in catalog.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Unable to process wallet
            file.</p>
      summary: Upload Connection Wallet File
      tags:
      - Global Connections
  /connections:
    get:
      description: "<p>Returns global connections list, including details such as\
        \ name, description, and type.</p>"
      operationId: GlobalConnections.getConnections
      parameters:
      - description: <p>Number of connections to omit from the start of the result
          set.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: <p>Maximum number of connections to return. Default is 50.</p>
        in: query
        name: limit
        schema:
          default: 50
          format: int32
          type: integer
      - description: "<p>Type of connections to return, if provided</p>"
        in: query
        name: connType
        schema:
          type: string
      - description: "<p>Used in conjunction with connType param. If set to true,\
          \ returns repository-based Autonomous Data Warehouse connections. Default\
          \ is false</p>"
        in: query
        name: repoConn
        schema:
          default: false
          type: boolean
      - description: "<p>Used in conjunction with connType param. If set to true,\
          \ returns wallet-based Autonomous Data Warehouse connections. Default is\
          \ false</p>"
        in: query
        name: walletConn
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionsList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConnectionsList'
          description: <p><strong>OK</strong></p><p>List of connections returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to list connections.</p>
      summary: List Connections
      tags:
      - Global Connections
    post:
      description: <p>Creates a connection based on specified inputs. <code>name</code>
        and <code>type</code> are required inputs for all types of connections. Other
        required inputs differ based on the type of connection.</p>
      operationId: GlobalConnections.createConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
          application/xml:
            schema:
              $ref: '#/components/schemas/Connection'
        description: <p>Connection details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Connection created successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to create connection.</p>
      summary: Create Connection
      tags:
      - Global Connections
      x-codegen-request-body-name: body
  /connections/{connectionName}/actions/test:
    post:
      description: <p>Tests a saved global connection by name.</p>
      operationId: GlobalConnections.testConnectionExisting
      parameters:
      - description: <p>Connection name.</p>
        in: path
        name: connectionName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>The connection tested successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Error occurred while
            testing connection.</p>
      summary: Test Saved Connection
      tags:
      - Global Connections
  /connections/actions/test:
    post:
      description: "<p>Tests a new or updated global connection, using specified inputs,\
        \ without saving it.</p>"
      operationId: GlobalConnections.testConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
          application/xml:
            schema:
              $ref: '#/components/schemas/Connection'
        description: <p>Connection details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>The connection tested successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Error occurred while
            testing connection.</p>
      summary: Test New Connection
      tags:
      - Global Connections
      x-codegen-request-body-name: body
  /applications/{applicationName}/datasources:
    get:
      description: "<p>Returns a list of application-level Datasources, including\
        \ details such as name, description, connection, and type.</p>"
      operationId: ApplicationDatasources.getDatasources
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Number of Datasources to omit from the start of the result
          set.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: <p>Maximum number of Datasources to return. Default is 50.</p>
        in: query
        name: limit
        schema:
          default: 50
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourcesList'
            application/xml:
              schema:
                $ref: '#/components/schemas/DatasourcesList'
          description: <p><strong>OK</strong></p><p>List of Datasources returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get Datasources.</p>
      summary: Get Application Datasources
      tags:
      - Application Datasources
    post:
      description: "<p>Creates an application-level Datasource based on specified\
        \ inputs. <code>name</code>, <code>connection</code>, and <code>type</code>\
        \ are required inputs for all types of Datasource. Other required inputs differ\
        \ based on the type of Datasource.</p>"
      operationId: ApplicationDatasources.createDatasource
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datasource'
          application/xml:
            schema:
              $ref: '#/components/schemas/Datasource'
        description: <p>Datasource details.</p>
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Datasource created successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to create Datasource.</p>
      summary: Create Application Datasource
      tags:
      - Application Datasources
      x-codegen-request-body-name: body
  /applications/{applicationName}/datasources/{datasouceName}:
    get:
      description: <p>Returns details about the specified application-level Datasource.</p>
      operationId: ApplicationDatasources.getDatasourceDetails
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Datasource name</p>
        in: path
        name: datasouceName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datasource'
            application/xml:
              schema:
                $ref: '#/components/schemas/Datasource'
          description: <p><strong>OK</strong></p><p>Datasource details returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get Datasource
            details.</p>
      summary: Get Application Datasource
      tags:
      - Application Datasources
    put:
      description: "<p>Update the named application-level Datasource. If the update\
        \ is successful, returns details about the updated Datasource. <code>type</code>\
        \ and <code>connection</code> are required inputs for all types of Datasource.\
        \ Other required inputs differ based on the type of the Datasource.</p>"
      operationId: ApplicationDatasources.updateDatasource
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Datasource name.</p>
        in: path
        name: datasouceName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datasource'
          application/xml:
            schema:
              $ref: '#/components/schemas/Datasource'
        description: <p>Updated Datasource details.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datasource'
            application/xml:
              schema:
                $ref: '#/components/schemas/Datasource'
          description: <p><strong>OK</strong></p><p>Datasource was updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            Datasource.</p>
      summary: Update Application Datasource
      tags:
      - Application Datasources
      x-codegen-request-body-name: body
  /applications/{applicationName}/datasources/query/stream:
    post:
      description: <p>Returns results in stream from an application-level Datasource.</p>
      operationId: ApplicationDatasources.getDataStream
      parameters:
      - description: <p>Include headers.</p>
        in: query
        name: includeHeaders
        schema:
          default: false
          type: boolean
      - description: <p>Metadata Only.</p>
        in: query
        name: metaDataOnly
        schema:
          default: false
          type: boolean
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasourceQueryInfo'
        description: <p>Query information.</p>
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Results fetched successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p></p><p>Failed to stream
            results.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Streamed Datasource Results
      tags:
      - Application Datasources
      x-codegen-request-body-name: body
  /applications/{applicationName}/datasources/{datasourceName}:
    delete:
      description: <p>Deletes the named application-level Datasource.</p>
      operationId: ApplicationDatasources.deleteDatasource
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Datasource name.</p>
        in: path
        name: datasourceName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>Datasource was deleted
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete Datasource.</p>
      summary: Delete Application Datasource
      tags:
      - Application Datasources
  /datasources:
    get:
      description: "<p>Returns a list of global-level Datasources, including details\
        \ such as name, description, connection, and type.</p>"
      operationId: GlobalDatasources.getDatasources
      parameters:
      - description: <p>Number of Datasources to omit from the start of the result
          set.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: <p>Maximum number of Datasources to return. Default is 50.</p>
        in: query
        name: limit
        schema:
          default: 50
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourcesList'
            application/xml:
              schema:
                $ref: '#/components/schemas/DatasourcesList'
          description: <p><strong>OK</strong></p><p>List of Datasources returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get Datasources.</p>
      summary: Get Global Datasource
      tags:
      - Global Datasources
    post:
      description: "<p>Creates a global-level Datasource based on specified inputs.\
        \ <code>name</code>, <code>connection</code>, and <code>type</code> are required\
        \ inputs for all types of Datasources. Other required inputs differ based\
        \ on the type of Datasource.</p>"
      operationId: GlobalDatasources.createDatasource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datasource'
          application/xml:
            schema:
              $ref: '#/components/schemas/Datasource'
        description: <p>Datasource details.</p>
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Datasource created successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to create Datasource.</p>
      summary: Create Global Datasource
      tags:
      - Global Datasources
      x-codegen-request-body-name: body
  /datasources/{datasouceName}:
    get:
      description: <p>Returns details about the specified global Datasource.</p>
      operationId: GlobalDatasources.getDatasourceDetails
      parameters:
      - description: <p>Datasource name.</p>
        in: path
        name: datasouceName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datasource'
            application/xml:
              schema:
                $ref: '#/components/schemas/Datasource'
          description: <p><strong>OK</strong></p><p>Datasource details returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get Datasource
            details.</p>
      summary: Get Global Datasource
      tags:
      - Global Datasources
    put:
      description: "<p>Update the named global-level Datasource. If the update is\
        \ successful, returns details about the updated Datasource. <code>type</code>\
        \ and <code>connection</code> are required inputs for all types of Datasources.\
        \ Other required inputs differ based on the type of the Datasource.</p>"
      operationId: GlobalDatasources.updateDatasource
      parameters:
      - description: <p>Datasource name.</p>
        in: path
        name: datasouceName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datasource'
          application/xml:
            schema:
              $ref: '#/components/schemas/Datasource'
        description: <p>Updated Datasource details.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datasource'
            application/xml:
              schema:
                $ref: '#/components/schemas/Datasource'
          description: <p><strong>OK</strong></p><p>Datasource was updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            Datasource.</p>
      summary: Update Global Datasource
      tags:
      - Global Datasources
      x-codegen-request-body-name: body
  /datasources/query/stream:
    post:
      description: <p>Returns results in stream from a global-level Datasource.</p>
      operationId: GlobalDatasources.getDataStream
      parameters:
      - description: <p>Include headers.</p>
        in: query
        name: includeHeaders
        schema:
          default: false
          type: boolean
      - description: <p>Metadata Only.</p>
        in: query
        name: metaDataOnly
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasourceQueryInfo'
        description: <p>Query information.</p>
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Results fetched successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to stream results.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Streamed Datasource Results
      tags:
      - Global Datasources
      x-codegen-request-body-name: body
  /datasources/{datasourceName}:
    delete:
      description: <p>Deletes the named global-level Datasource.</p>
      operationId: GlobalDatasources.deleteDatasource
      parameters:
      - description: <p>Datasource name.</p>
        in: path
        name: datasourceName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>Datasource was deleted
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete Datasource.</p>
      summary: Delete Global Datasource
      tags:
      - Global Datasources
  /datasources/customdelimited/query/stream:
    post:
      description: <p>Returns results in stream from a global-level Datasource.</p>
      operationId: GlobalDatasources.getDelimitedDataStream
      parameters:
      - description: <p>Include headers.</p>
        in: query
        name: includeHeaders
        schema:
          default: false
          type: boolean
      - description: <p>Metadata Only.</p>
        in: query
        name: metaDataOnly
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DatasourceQueryInfo'
        description: <p>Query information.</p>
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Results fetched successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to stream results.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Streamed Datasource Results
      tags:
      - Global Datasources
      x-codegen-request-body-name: body
  /datasources/query/data/{streamId}:
    get:
      description: <p>Returns results from a global-level Datasource associated with
        the specified stream id.</p>
      operationId: GlobalDatasources.getData
      parameters:
      - description: <p>Stream id.</p>
        in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Results fetched successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to stream results.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Streamed Datasource Results
      tags:
      - Global Datasources
  /datasources/query:
    post:
      description: "<p>Returns column headers of the Datasource, and a link to fetch\
        \ the streamed results in CSV (comma-separated) or TSV (tab-separated) formats.</p>"
      operationId: GlobalDatasources.getResults
      parameters:
      - description: "<p>Number of records to return. If not passed, all records are\
          \ returned.</p>"
        in: query
        name: pageSize
        schema:
          default: -1
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasourceQueryInfo'
        description: <p>Query information.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/ResultBean'
          description: <p><strong>OK</strong></p><p>Streaming information returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get streaming
            information.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Stream Datasource Results
      tags:
      - Global Datasources
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/reports/{name}:
    delete:
      description: <p>Deletes the specified drill through report from the specified
        application and database.</p>
      operationId: DrillThroughReports.delete
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Drill through report name.</p>
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The drill through report
            was deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete the
            drill through report. The report name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Drill Through Report
      tags:
      - Drill Through Reports
    get:
      description: <p>Returns the specified drill through report from the specified
        application and database.<p>
      operationId: DrillThroughReports.getReport
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Drill through report name.</p>
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrillthroughBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/DrillthroughBean'
          description: "<p><strong>OK</strong></p><p>The drill through report was\
            \ retrieved successfully. Returns the links to get, edit, or delete the\
            \ report.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to get the report.\
            \ The application name, database name, or report name may be incorrect.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Drill Through Report
      tags:
      - Drill Through Reports
    post:
      description: "<p>Executes a drill through report in the specified application\
        \ and database, and returns records.</p>"
      operationId: DrillThroughReports.execute
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Drillthrough report name.</p>
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DrillthroughMetadataBean'
        description: "<p>Drillthrough metadata. In example request body, dtrContext\
          \ corresponds to the intersection of cells in smartview.</p>"
        required: true
      responses:
        "200":
          content: {}
          description: "<p><strong>OK</strong></p><p>The drillthrough report was executed\
            \ successfully. Result is a json array where first node is the datatype\
            \ of each column, second node is the column names and rest are the data\
            \ nodes corresponding to each record in the report.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to execute the
            drillthrough report.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Execute Drill Through Report
      tags:
      - Drill Through Reports
      x-codegen-request-body-name: body
    put:
      description: "<p>Updates the drill through report in the specified application\
        \ and database, and returns details of the updated report.</p>"
      operationId: DrillThroughReports.updateReport
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Drill through report name.</p>
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DrillthroughBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/DrillthroughBean'
        description: <p>Drill through report details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrillthroughBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/DrillthroughBean'
          description: <p><strong>OK</strong></p><p>The drill through report was updated
            successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to update the\
            \ report. The application name, database name, or report name may be incorrect,\
            \ or the specified report name may not exist.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Drill Through Reoprt
      tags:
      - Drill Through Reports
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/reports:
    get:
      description: <p>Returns all the drill through reports from the specified application
        and database.</p>
      operationId: DrillThroughReports.getReports
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ReportList'
          description: "<p><strong>OK</strong></p><p>The drill through reports were\
            \ retrieved successfully. Returns the links to get, edit, or delete the\
            \ reports.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the drill
            through reports. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Drill Through Reports
      tags:
      - Drill Through Reports
    post:
      description: "<p>Creates a drill through report in the specified application\
        \ and database, and returns details about the report.</p>"
      operationId: DrillThroughReports.create
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DrillthroughBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/DrillthroughBean'
        description: <p>Drill through report details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrillthroughBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/DrillthroughBean'
          description: <p><strong>OK</strong></p><p>The drill through report was created
            successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to create the\
            \ drill through report. The application or database name may be incorrect,\
            \ or the report may already exist.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Drill Through Report
      tags:
      - Drill Through Reports
      x-codegen-request-body-name: body
  /email/smtp:
    delete:
      description: <p>Deletes the SMTP server configuration details. SMTP is the protocol
        Essbase uses for receiving e-mails related to scenario management workflow
        and approval.</p>
      operationId: Email.deleteSMTPDetails
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The e-mail configuration
            was deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user must be
            a service administrator to execute this request.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete SMTP Configuration
      tags:
      - Email
    get:
      description: <p>Returns SMTP server configuration details. SMTP is the protocol
        Essbase uses for receiving e-mails related to scenario management workflow
        and approval.</p>
      operationId: Email.getSMTPServerDetail
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
          description: <p><strong>OK</strong></p><p>The e-mail configuration was retrieved
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user must be
            a service administrator to execute this request.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>The e-mail configuration
            is not present.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get SMTP Configuration
      tags:
      - Email
    put:
      description: <p>Configure SMTP e-mail server information. IMAP is the protocol
        used for receiving e-mails related to scenario management workflow and approval.</p>
      operationId: Email.addSMTPDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerConfiguration'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServerConfiguration'
        description: "<p>SMTP server configuration details. Provide the host name,\
          \ port, user e-mail address, and encoded password.</p>"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLinkResponseObject'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListLinkResponseObject'
          description: <p><strong>OK</strong></p><p>The e-mail configuration was updated
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user must be
            a service administrator to execute this request.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add SMTP Configuration
      tags:
      - Email
      x-codegen-request-body-name: body
  /email/imap:
    delete:
      description: <p>Deletes the IMAP server configuration details. IMAP is the protocol
        Essbase uses to send e-mails related to scenario management workflow and approval.</p>
      operationId: Email.deleteIMAPDetails
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The e-mail configuration
            was deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user must be
            a service administrator to execute this request.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete IMAP Configuration
      tags:
      - Email
    get:
      description: <p>Returns IMAP server configuration details. IMAP is the protocol
        Essbase uses for sending e-mails related to scenario management workflow and
        approval.</p>
      operationId: Email.getIMAPServerDetail
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
          description: <p><strong>OK</strong></p><p>The e-mail configuration was retrieved
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user must be
            a service administrator to execute this request.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>The e-mail configuration
            is not present.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get IMAP Configuration
      tags:
      - Email
    put:
      description: <p>Configure IMAP e-mail server information. IMAP is the protocol
        Essbase uses for sending e-mails related to scenario management workflow and
        approval.</p>
      operationId: Email.addIMAPDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerConfiguration'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServerConfiguration'
        description: "<p>IMAP server configuration details. Provide the host name,\
          \ port, user e-mail address, and encoded password.</p>"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLinkResponseObject'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListLinkResponseObject'
          description: <p><strong>OK</strong></p><p>The e-mail configuration was updated
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user must be
            a service administrator to execute this request.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add IMAP Configuration
      tags:
      - Email
      x-codegen-request-body-name: body
  /email:
    get:
      description: <p>Returns a URL to access the saved SMTP and IMAP server details.
        SMTP is the protocol Essbase uses for sending e-mails related to scenario
        management. IMAP is the protocol for receiving e-mails.</p>
      operationId: Email.getEmailLinks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLinkResponseObject'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListLinkResponseObject'
          description: <p><strong>OK</strong></p><p>The e-mail configuration was retrieved
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user must be
            a service administrator to execute this request.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get E-mail Configuration
      tags:
      - Email
  /excel/utils/dataformat:
    get:
      description: "<p>Returns details about the application workbook: application\
        \ name, cube name, and whether the workbook's format is structured or unstructured\
        \ (tabular).</p>"
      operationId: ExcelUtilities.analyzeDataFormat
      parameters:
      - description: <p>Catalog path of the workbook file.</p>
        in: query
        name: path
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>The workbook information was retrieved
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the workbook
            details. The file path may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Workbook Format
      tags:
      - Workbook Utilities
  /applications/{applicationName}/databases/{databaseName}/filters/filterops/rename:
    post:
      description: Renames the filter in the specified application and database and
        returns the created filter
      operationId: Filters.renameFilter
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterCopy'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilterCopy'
        description: <p>Filter rename details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilterBean'
          description: "<p><strong>OK</strong></p><p>Filter was renamed successfully.\
            \ Returns filter details and links to get, edit, or delete the filter,\
            \ and to get the filter rows.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to rename filter.\
            \ The application name or database name may be incorrect, or a filter\
            \ with that name may already exist.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Rename Filter
      tags:
      - Filters
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/filters/{filterName}/rows:
    get:
      description: <p>Returns the access definition rows from the specified filter.</p>
      operationId: Filters.getFilterRows
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Filter name.</p>
        in: path
        name: filterName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterRowList'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilterRowList'
          description: <p><strong>OK</strong></p><p>Filter rows were retrieved successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to get filter\
            \ rows. The application name, database name, or filter name may be incorrect.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Filter Rows
      tags:
      - Filters
  /applications/{applicationName}/databases/{databaseName}/filters/{filterName}:
    delete:
      description: <p>Deletes the named filter in the specified application and database.</p>
      operationId: Filters.deleteFilter
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Filter name.</p>
        in: path
        name: filterName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The filter was deleted
            successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to delete the\
            \ filter. The application name, database name, or filter name may be incorrect,\
            \ or the named filter may not exist.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Filter
      tags:
      - Filters
    get:
      description: <p>Returns the named filter from the specified application and
        database.<p>
      operationId: Filters.getFilter
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Filter name.</p>
        in: path
        name: filterName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilterBean'
          description: "<p><strong>OK</strong></p><p>The filter was retrieved successfully,\
            \ with links to get, edit, or delete the filter, and to get the filter\
            \ rows.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to get the filter.\
            \ The application name, database name, or filter name may be incorrect.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Filter
      tags:
      - Filters
    put:
      description: "<p>Updates the named filter in the specified application and database,\
        \ and returns the updated filter.</p>"
      operationId: Filters.editFilter
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Filter name.</p>
        in: path
        name: filterName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilterBean'
        description: <p>Filter details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilterBean'
          description: "<p><strong>OK</strong></p><p>The filter was updated successfully,\
            \ with links to get, edit, or delete the filter, and to get the filter\
            \ rows.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to update the\
            \ filter. The application name, database name, or filter name may be incorrect,\
            \ or the named filter may not exist.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Filter
      tags:
      - Filters
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/filters/{filterName}/permissions:
    get:
      description: <p>Retrieves permissions associated with the named filter.</p>
      operationId: Filters.getFilterPermissions
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Filter name.</p>
        in: path
        name: filterName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserGroupProvisionInfoList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/UserGroupProvisionInfoList'
                type: array
          description: <p><strong>OK</strong></p><p>The filter permissions were retrieved
            successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to get the filter\
            \ permissions. The application name, database name, or filter name may\
            \ be incorrect.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Permissions
      tags:
      - Filters
    post:
      description: "<p>Adds permissions, in the named filter, for the named user or\
        \ group.</p>"
      operationId: Filters.addFilterPermission
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Filter name.</p>
        in: path
        name: filterName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfo'
        description: <p>User or group details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
          description: <p><strong>OK</strong></p><p>The filter permissions were added
            successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to add the filter\
            \ permissions. The application name, database name, filter name, or user\
            \ or group name may be incorrect, or the specified user or group may not\
            \ have enough privileges.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add Permissions
      tags:
      - Filters
      x-codegen-request-body-name: body
    put:
      description: <p>Replaces all the users and groups assigned to the filter with
        a new list of users and groups.</p>
      operationId: Filters.replaceFilterPermission
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Filter name.</p>
        in: path
        name: filterName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfoList'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfoList'
        description: <p>User or group details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
          description: <p><strong>OK</strong></p><p>The filter permissions were edited
            successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to modify the\
            \ filter permissions. The application name, database name, filter name,\
            \ or user or group name may be incorrect, or the specified user or group\
            \ may not have enough privileges.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Edit Permissions
      tags:
      - Filters
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/filters/{filterName}/permissions/{userGroupId}:
    delete:
      description: <p>Removes permissions from a filter for the specified user or
        group.</p>
      operationId: Filters.removeFilterPermission
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Filter name.</p>
        in: path
        name: filterName
        required: true
        schema:
          type: string
      - description: <p>User or group ID.</p>
        in: path
        name: userGroupId
        required: true
        schema:
          type: string
      - description: <p>True if the userGroupId refers to a group; false if it refers
          to a user.</p>
        in: query
        name: group
        required: true
        schema:
          default: false
          type: boolean
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>The permission was removed
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to remove permission
            from the filter. An input parameter may have been specified incorrectly.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Permission
      tags:
      - Filters
  /applications/{applicationName}/databases/{databaseName}/filters/filterops/copy:
    post:
      description: <p>Copies a filter in the specified application and database and
        returns the new filter.</p>
      operationId: Filters.copyFilter
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterCopy'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilterCopy'
        description: Filter copy details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilterBean'
          description: "<p><strong>OK</strong></p><p>The filter was copied successfully.\
            \ Returns filter details and links to get, edit, or delete the filter,\
            \ and to get the filter rows.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to copy the filter.\
            \ The application name, database name, or filter name may be incorrect,\
            \ or a filter with the specified name already exists.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Copy Filter
      tags:
      - Filters
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/filters:
    get:
      description: <p>Returns all the filters from the specified application and database.</p>
      operationId: Filters.listFilters
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FilterList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/FilterList'
                type: array
          description: "<p><strong>OK</strong></p><p>Filters were retrieved successfully.\
            \ Returns filter details and links to get, edit, or delete the filters,\
            \ and to get the filter rows.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get filters.
            The application name or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Filters
      tags:
      - Filters
    post:
      description: <p>Creates the filter in the specified application and database
        and returns the created filter</p>
      operationId: Filters.createFilter
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilterBean'
        description: <p>Filter details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilterBean'
          description: "<p><strong>OK</strong></p><p>Filter was created successfully.\
            \ Returns filter details and links to get, edit, or delete the filter,\
            \ and to get the filter rows.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to create filter.\
            \ The application name or database name may be incorrect, or the filter\
            \ may already exist.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Filter
      tags:
      - Filters
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/filters/filterops/validate:
    post:
      description: <p>Validates the filter in the specified application and database.</p>
      operationId: Filters.validateFilter
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilterBean'
        description: <p>Filter details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>The filter was validated successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to validate the\
            \ filter. The application name or database name may be incorrect, or the\
            \ filter rows may be incomplete."
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Validate Filter
      tags:
      - Filters
      x-codegen-request-body-name: body
  /groups/actions/delete:
    post:
      description: "<p>Deletes the groups specified in the text file.</p> <p>If you\
        \ are using EPM Shared Services security mode, this operation is not available.\
        \ Instead, manage users, groups, and permissions in the Shared Services Console.</p>"
      operationId: Users.deleteGroups
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/InputStream'
          description: OK
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Groups in File
      tags:
      - Groups
  /groups/{id}/members/users:
    delete:
      description: Remove multiple user members from a group
      operationId: Groups.removeUserMembersFromGroup
      parameters:
      - description: <p>ID of group.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
          application/xml:
            schema:
              items:
                type: string
              type: array
        description: <p>Array of user IDs.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBean'
          description: <p><strong>OK</strong></p><p>Group updated successfully. Returns
            link to get user members of a group.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Remove Group Users
      tags:
      - Groups
      x-codegen-request-body-name: body
    get:
      description: "<p>Gets user members of a group.</p> <p>If you are using EPM Shared\
        \ Services security mode, this operation is not available. Instead, manage\
        \ users, groups, and permissions in the Shared Services Console.</p>"
      operationId: Groups.getUserMembersOfGroup
      parameters:
      - description: <p>ID of group.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
            application/xml:
              schema:
                $ref: '#/components/schemas/Users'
          description: <p><strong>OK</strong></p><p>Group member list returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Group Users
      tags:
      - Groups
    post:
      description: "<p>Adds multiple user members to a group.</p> <p>If you are using\
        \ EPM Shared Services security mode, this operation is not available. Instead,\
        \ manage users, groups, and permissions in the Shared Services Console.</p>"
      operationId: Groups.addUserMembersToGroup
      parameters:
      - description: <p>ID of group.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
          application/xml:
            schema:
              items:
                type: string
              type: array
        description: <p>Array of user IDs.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBean'
          description: <p><strong>OK</strong></p><p>Group updated successfully. Returns
            link to get user members of a group.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add Group Users
      tags:
      - Groups
      x-codegen-request-body-name: body
  /groups/{id}/members/groups:
    delete:
      description: "<p>Removes multiple group members from a group.</p> <p>If you\
        \ are using EPM Shared Services security mode, this operation is not available.\
        \ Instead, manage users, groups, and permissions in the Shared Services Console.</p>"
      operationId: Groups.removeGroupMembersFromGroup
      parameters:
      - description: <p>ID of group.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
          application/xml:
            schema:
              items:
                type: string
              type: array
        description: <p>Array of group IDs.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBean'
          description: <p><strong>OK</strong></p><p>Group updated successfully. Returns
            link to get group members of a group.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Remove Groups From Group
      tags:
      - Groups
      x-codegen-request-body-name: body
    get:
      description: "<p>Gets group members of a group.</p> <p>If you are using EPM\
        \ Shared Services security mode, this operation is not available. Instead,\
        \ manage users, groups, and permissions in the Shared Services Console.</p>"
      operationId: Groups.getGroupMembersOfGroup
      parameters:
      - description: <p>ID of group.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
            application/xml:
              schema:
                $ref: '#/components/schemas/Groups'
          description: <p><strong>OK</strong></p><p>Returns list of group members
            of a group.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Groups in Group
      tags:
      - Groups
    post:
      description: "<p>Adds multiple group members to a group.</p> <p>If you are using\
        \ EPM Shared Services security mode, this operation is not available. Instead,\
        \ manage users, groups, and permissions in the Shared Services Console.</p>"
      operationId: Groups.addGroupMembersToGroup
      parameters:
      - description: <p>ID of group.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
          application/xml:
            schema:
              items:
                type: string
              type: array
        description: <p>Array of group IDs.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBean'
          description: <p><strong>OK</strong></p><p>Group updated successfully. Returns
            link to get group members of a group.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add Groups to Group
      tags:
      - Groups
      x-codegen-request-body-name: body
  /groups/{id}:
    delete:
      description: "<p>Deletes a group.</p> <p>If you are using EPM Shared Services\
        \ security mode, this operation is not available. Instead, manage users, groups,\
        \ and permissions in the Shared Services Console.</p>"
      operationId: Groups.delete
      parameters:
      - description: <p>ID of group.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>No Content</strong></p><p>Group deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Group
      tags:
      - Groups
    get:
      description: "<p>Gets group details.</p> <p>If you are using EPM Shared Services\
        \ security mode, this operation is not available. Instead, manage users, groups,\
        \ and permissions in the Shared Services Console.</p>"
      operationId: Groups.get
      parameters:
      - description: <p>Group ID.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupBean'
          description: <p>Group details</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>The group with that ID
            does not exist.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Group
      tags:
      - Groups
    put:
      description: "<p>Updates a group.</p> <p>If you are using EPM Shared Services\
        \ security mode, this operation is not available. Instead, manage users, groups,\
        \ and permissions in the Shared Services Console.</p>"
      operationId: Groups.edit
      parameters:
      - description: <p>ID of group.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/GroupBean'
        description: <p>Group details to update.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupBean'
          description: <p><strong>OK</strong></p><p>Group updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Group
      tags:
      - Groups
      x-codegen-request-body-name: body
  /groups:
    get:
      description: "<p>Gets a list of groups based on search results, or exports groups\
        \ as CSV file.</p> <p>If you are using EPM Shared Services security mode,\
        \ this operation is not available. Instead, manage users, groups, and permissions\
        \ in the Shared Services Console.</p>"
      operationId: Groups.search
      parameters:
      - description: <p>Group ID wildcard pattern. Filter by name of groups if header
          <code>Accept='application/json'</code> or <code>Accept='application/xml'</code>.</p>
        in: query
        name: filter
        schema:
          type: string
      - description: "<p>Maximum number of groups to return, if header <code>Accept='application/json'</code>\
          \ or <code>Accept='application/xml'</code>.</p>"
        in: query
        name: limit
        schema:
          default: -1
          format: int32
          type: integer
      - description: "<p>Value can be <code>all</code> or <code>none</code>. Default\
          \ value is <code>all</code>, meaning service role and parent groups are\
          \ returned for each group. If <code>none</code> is specified, service role\
          \ and parent groups are not returned.</p>"
        in: query
        name: expand
        schema:
          default: all
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
            application/xml:
              schema:
                $ref: '#/components/schemas/Groups'
          description: "<p><strong>OK</strong></p><p>List of groups matching search\
            \ criteria. Response type can be either JSON, XML, or CSV stream, depending\
            \ on the Accept header. If <code>Accept='application/json'</code> or <code>Accept='application/xml'</code>,\
            \ the search result is returned in the response. If <code>Accept='application/octet-stream'</code>,\
            \ search result is returned as stream (not shown due to a Swagger limitation).</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Search or Export Groups
      tags:
      - Groups
    post:
      description: "<p>Adds or imports one or more groups.</p> <p>If you are using\
        \ EPM Shared Services security mode, this operation is not available. Instead,\
        \ manage users, groups, and permissions in the Shared Services Console.</p>"
      operationId: Groups.add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/GroupBean'
        description: "<p>Group details to add group if header <code>Content-Type='application/json'</code>\
          \ or <code>'application/xml'</code>;  otherwise, if header <code>Content-Type='application/octet-stream'</code>,\
          \ CSV file to import group(s).</p>"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupBean'
          description: "<p><strong>OK</strong></p><p>Group added successfully. For\
            \ <code>Content-Type='application/json'</code> or <code>'application/xml'</code>,\
            \ added group is returned; otherwise, for <code>Content-Type='application/octet-stream'</code>,\
            \ the group was imported successfully.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate permissions.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add or Import Group(s)
      tags:
      - Groups
      x-codegen-request-body-name: body
  /groups/{id}/members:
    get:
      description: "<p>Returns links to get user and group members of a group.</p>\
        \ <p>If you are using EPM Shared Services security mode, this operation is\
        \ not available. Instead, manage users, groups, and permissions in the Shared\
        \ Services Console.</p>"
      operationId: Groups.getMembers
      parameters:
      - description: <p>ID of group.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBean'
          description: <p><strong>OK</strong></p><p>User and group members of a group
            returned successfully.</p>
      summary: Get Group Members
      tags:
      - Groups
  /jobs/statistics/{userId}:
    get:
      description: "<p>Returns the job statistics for the currently logged in user,\
        \ including number of jobs that are successful, number of jobs containing\
        \ errors, number of jobs containing warnings, and the number of jobs running.</p>"
      operationId: Jobs.getJobStatistics
      parameters:
      - description: User Id of the logged in user
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatisticsBean'
          description: <p><strong>OK</strong></p><p>Job statistics returned successfully.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
        "503":
          content: {}
          description: <p>Naming Exception or Server Exception.</p>
      summary: Get Job Statistics
      tags:
      - Jobs
  /jobs/{id}:
    get:
      description: "<p>Returns job information for given job ID, including job status,\
        \ type, and input and output information.</p>"
      operationId: Jobs.getJobInfo
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRecordBean'
          description: <p><strong>OK</strong></p><p>Job information returned successfully.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
        "503":
          content: {}
          description: <p><strong>Service Unavailable</strong></p><p>Naming exception
            or server exception.</p>
      summary: Get Job
      tags:
      - Jobs
    post:
      description: "<p>Reruns the job, returning job information and new job ID.</p>"
      operationId: Jobs.executeByJobId
      parameters:
      - description: <p>Job ID.</p>
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRecordBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobRecordBean'
          description: <p><strong>OK</strong></p><p>Job information returned successfully
            for newly created job ID.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
        "503":
          content: {}
          description: <p><strong>Service Unavailable</strong></p><p>Naming exception
            or server exception. Job ID is incorrect or invalid.</p>
      summary: Rerun Job
      tags:
      - Jobs
  /jobs:
    get:
      description: "<p>Returns job list for the given query parameters, including\
        \ job status, type, and input and output information. If no query parameter\
        \ is specified, returns a list of all the jobs.</p>"
      operationId: Jobs.getAllJobRecords
      parameters:
      - description: "<p>Filter the job records using a keyword that may be part of\
          \ the job ID, application name, database name, job file name (script), or\
          \ user name. If this parameter and fullAppName are both specified, fullAppName\
          \ takes precedence.</p>"
        in: query
        name: keyword
        schema:
          type: string
      - description: <p>Application name for which to retrieve job records.</p>
        in: query
        name: fullAppName
        schema:
          type: string
      - description: "<p>Order By specification. By default, jobs records are returned\
          \ by job IDs in descending order.</p>"
        in: query
        name: orderBy
        schema:
          default: job_ID:desc
          type: string
      - description: <p>Number of jobs to omit from the start of the result set.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int64
          type: integer
      - description: <p>Maximum number of jobs to fetch. </p>
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: <p>Include backup jobs in jobs records.</p>
        in: query
        name: systemjobs
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRecordPaginatedResultWrapper'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobRecordPaginatedResultWrapper'
          description: <p><strong>OK</strong></p><p>Job records returned successfully.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
        "503":
          content: {}
          description: <p><strong>Service Unavailable</strong></p><p>Naming exception
            or server exception.</p>
      summary: Get Job List
      tags:
      - Jobs
    post:
      description: "<p>Executes the job and returns the record containing job information,\
        \ such as job ID, status, inputs, and output information for the current job.</p>"
      operationId: Jobs.executeJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobsInputBean'
        description: parameter provided as json string in the request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRecordBean'
          description: <p><strong>OK</strong></p><p>Job started successfully. Job
            information returned in response.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Application may not\
            \ exist, or application parameter may be incorrect. Or, database may not\
            \ exist, or database parameter may be incorrect. Or, a null argument may\
            \ have been passed.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
        "503":
          content: {}
          description: <p><strong>Service Unavailable</strong></p><p>Naming exception
            or server exception.</p>
      summary: Execute Job
      tags:
      - Jobs
      x-codegen-request-body-name: body
  /jobs/purge:
    delete:
      description: <p>Deletes jobs data older than the specified time.</p>
      operationId: Jobs.purge
      parameters:
      - description: <p>Time in milliseconds.</p>
        in: query
        name: olderthan
        schema:
          format: int64
          type: integer
      - description: <p>Start Time range in milliseconds.</p>
        in: query
        name: rangeStartTime
        schema:
          format: int64
          type: integer
      - description: <p>End Time range in milliseconds.</p>
        in: query
        name: rangeEndTime
        schema:
          format: int64
          type: integer
      - description: <p>Application name.</p>
        in: query
        name: application
        schema:
          type: string
      - description: <p>Database name.</p>
        in: query
        name: database
        schema:
          type: string
      - description: <p>Job Type.</p>
        in: query
        name: jobtype
        schema:
          type: string
      - description: <p>Job Status.</p>
        in: query
        name: jobstatus
        schema:
          format: int32
          type: integer
      responses:
        default:
          content: {}
          description: successful operation
      summary: Delete jobs
      tags:
      - Jobs
  /applications/{applicationName}/databases/{databaseName}/locationaliases:
    get:
      description: Get Location Alias
      operationId: LocationAliases.getLocationAliases
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Number of items to omit from the start of the result set.</p>
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: <p>Maximum number of location aliases to return.</p>
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: <p>Location alias target server name.</p>
        in: query
        name: serverName
        schema:
          type: string
      - description: <p>Location alias target application name.</p>
        in: query
        name: applicationName
        schema:
          type: string
      - description: <p>Location alias target database name.</p>
        in: query
        name: databaseName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationAliasList'
            application/xml:
              schema:
                $ref: '#/components/schemas/LocationAliasList'
          description: <p><strong>OK</strong></p><p>Location alias returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get location
            alias details.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Location Alias
      tags:
      - Location Aliases
    post:
      description: <p>Creates a new location alias in the given application and database.</p>
      operationId: LocationAliases.create
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationAliasBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/LocationAliasBean'
        description: <p>Location alias details.</p>
        required: true
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Location alias created successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to create location
            alias.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Location Alias
      tags:
      - Location Aliases
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/locationaliases/{aliasName}:
    delete:
      description: <p>Deletes the specified location alias from the application and
        database.</p>
      operationId: LocationAliases.delete
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Location alias name.</p>
        in: path
        name: aliasName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Location alias deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete location
            alias.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Location Alias
      tags:
      - Location Aliases
    get:
      description: <p>Returns details of the specified location alias.</p>
      operationId: LocationAliases.getLocationAlias
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Location alias name.</p>
        in: path
        name: aliasName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationAliasBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/LocationAliasBean'
          description: <p><strong>OK</strong></p><p>Location alias returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get location
            alias details.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Location Alias
      tags:
      - Location Aliases
    patch:
      description: <p>Updates location alias with new application and database. Not
        supported when location alias is defined across Essbase instances.</p>
      operationId: LocationAliases.update
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Location alias name.</p>
        in: path
        name: aliasName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationAliasBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/LocationAliasBean'
        description: <p>Location alias details.</p>
        required: true
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Location alias updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update location
            alias.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Location Alias
      tags:
      - Location Aliases
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/locks/objects:
    get:
      description: <p>Returns all the locked objects from the specified application
        and database.</p>
      operationId: Locks.getLockedObjects
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Number of items to omit from the start of the result set.
          Default value is 0.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: <p>Maximum number of objects to return. Default is 50.</p>
        in: query
        name: limit
        schema:
          default: 50
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockObjectList'
            application/xml:
              schema:
                $ref: '#/components/schemas/LockObjectList'
          description: <p><strong>OK</strong></p><p>Locked objects retrieved successfully.
            Gives the details of locked objects along with the links to lock/unlock
            the object.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the locked
            objects. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Locked Objects
      tags:
      - Locks
  /applications/{applicationName}/databases/{databaseName}/locks/objects/unlock:
    post:
      description: <p>Unlocks the object in the specified application and database.</p>
      operationId: Locks.unLockObject
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockObject'
        description: <p>Details about object to be unlocked.</p>
        required: true
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Object unlocked successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to unlock the\
            \ object. The application, database, or object name may be incorrect,\
            \ or the object type may be incorrect.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Unlock Object
      tags:
      - Locks
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/locks/blocks:
    get:
      description: <p>Returns all the locked blocks from the specified application
        and database.</p>
      operationId: Locks.getLockedBlocks
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Number of items to omit from the start of the result set.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: Maximum number of blocks to return. Default is 50.
        in: query
        name: limit
        schema:
          default: 50
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LockBlockList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/LockBlockList'
                type: array
          description: "<p><strong>OK</strong></p><p>Locked blocks returned successfully,\
            \ including details of locked blocks and links to unlock the objects.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the locked
            blocks. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Locked Blocks
      tags:
      - Locks
  /applications/{applicationName}/databases/{databaseName}/locks/blocks/unlock:
    post:
      description: <p>Unlocks the locked block in the specified application and database.</p>
      operationId: Locks.unLockBlock
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockBlock'
        description: <p>Block details to be unlocked.</p>
        required: true
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Block unlocked successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to get the settings.\
            \ The application or database name may be incorrect, or the JSON for the\
            \ username in the block details may be incorrect.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Unlock Block
      tags:
      - Locks
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/locks:
    get:
      description: <p>Returns links for locked objects and locked blocks from the
        specified application and database.</p>
      operationId: Locks.getLocks
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockObject'
            application/xml:
              schema:
                $ref: '#/components/schemas/LockObject'
          description: "<p><strong>OK</strong></p><p>Locks listed successfully, including\
            \ links to unlock.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Locks
      tags:
      - Locks
  /applications/{applicationName}/databases/{databaseName}/locks/objects/lock:
    post:
      description: <p>Locks the object in the specified application and database and
        returns the details of the locked object.</p>
      operationId: Locks.lockObject
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockObject'
        description: <p>Details of object to be locked.</p>
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LockObject'
          description: <p><strong>OK</strong></p><p>Object locked successfully. Gives
            the details of locked object along with the links to lock/unlock the object.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to lock the object.\
            \ The application, database, or object name may be incorrect, or the object\
            \ type may be incorrect.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Lock Object
      tags:
      - Locks
      x-codegen-request-body-name: body
  /applications/{applicationName}/logs/latest:
    get:
      description: <p>Downloads the latest application log file as a text file.</p>
      operationId: ApplicationLogs.downloadLatestLogFile
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            application/xml:
              schema:
                format: binary
                type: string
          description: <p><strong>OK</strong></p><p>Log file returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to return log
            file.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Download Latest Log
      tags:
      - Application Logs
  /applications/{applicationName}/logs:
    get:
      description: "<p>Returns links to download all log files as a zip file, and\
        \ to download the latest log file.</p>"
      operationId: ApplicationLogs.downloadAppLogFiles
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
            application/xml:
              schema:
                $ref: '#/components/schemas/Link'
          description: <p><strong>OK</strong></p><p>List of URI links returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to return downloadable
            log files.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Download Logs
      tags:
      - Application Logs
  /applications/{applicationName}/logs/all:
    get:
      description: Returns or download zip file which contains all log files for the
        specific application
      operationId: ApplicationLogs.downloadAllLogFiles
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/zip:
              schema:
                format: binary
                type: string
            application/octet-stream:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            application/xml:
              schema:
                format: binary
                type: string
          description: <p><strong>OK</strong></p><p>Logs returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to return logs.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Download All Logs
      tags:
      - Application Logs
  /about:
    get:
      description: "<p>Returns description, build, and version of Essbase.</p>"
      operationId: About.getAbout
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/About'
            application/xml:
              schema:
                $ref: '#/components/schemas/About'
          description: successful operation
      summary: About Essbase
      tags:
      - About Essbase
  /about/instance:
    get:
      description: <p>Returns instance details for Essbase.</p>
      operationId: About.getInstanceDetails
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutInstance'
            application/xml:
              schema:
                $ref: '#/components/schemas/AboutInstance'
          description: successful operation
      summary: About Essbase Instance
      tags:
      - About Essbase
  /applications/{applicationName}/databases/{databaseName}/aliases/setActiveAlias:
    put:
      description: Sets the active alias table associated with the specified application
        and database.
      operationId: setActiveAlias
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Alias table name.</p>
        in: query
        name: aliasTableName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringCollectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StringCollectionResponse'
          description: <p><strong>OK</strong></p><p>Alias tables returned successfully.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Set Active Alias
      tags:
      - Applications
  /applications/{applicationName}/databases/{databaseName}/aliases/getActiveAlias:
    get:
      description: <p>Returns alias tables associated with the specified application
        and database.</p>
      operationId: Applications.getActiveAlias
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: <p><strong>OK</strong></p><p>Alias tables returned successfully.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Active Aliases
      tags:
      - Applications
  /applications/actions/shadowDelete/{shadowAppName}:
    delete:
      description: "<p>Forcefully deletes the specified shadow application.</p> <p>Although\
        \ shadow applications can also be deleted using the regular <a href='./op-applications-applicationname-delete.html'>Delete\
        \ Application</a>, if the shadow application is corrupted or has any locks,\
        \ then it the regular delete application fails.</p> <p>Therefore, this API\
        \ guarantees a forceful deletion of the shadow application.</p> <p>This API\
        \ is similar to the MaxL statement <b>drop application <i>APP-NAME</i> cascade\
        \ force</b></p>"
      operationId: Applications.dropShadowApplication
      parameters:
      - description: "<p>shadowAppName: Name of the shadow application to remove.</p>"
        in: path
        name: shadowAppName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Shadow application deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete shadow
            application.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
        "503":
          content: {}
          description: <p><strong>Service Unavailable</strong></p><p>Naming exception
            or server exception.</p>
      summary: Delete Shadow Application
      tags:
      - Applications
  /applications/actions/rename:
    post:
      description: <p>Renames an application. You must provide the source and destination
        application names.</p>
      operationId: Applications.renameApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyRenameBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/CopyRenameBean'
        description: <p>Source and destination application information.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Application renamed successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to rename application.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Rename Application
      tags:
      - Applications
      x-codegen-request-body-name: body
  /applications/actions/copy:
    post:
      description: <p>Copies an application. You must provide the source and destination
        application names.</p>
      operationId: Applications.copyApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyRenameBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/CopyRenameBean'
        description: <p>Source and destination application information.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Application copied successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to copy application.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Copy Application
      tags:
      - Applications
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/actions/copy:
    post:
      description: <p>Copies a database. You must provide the source and destination
        application and database names.</p>
      operationId: Applications.copyDatabase
      parameters:
      - description: <p>Source application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CubeCopy'
          application/xml:
            schema:
              $ref: '#/components/schemas/CubeCopy'
        description: <p>Source and destination database information.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Database copied successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to copy database.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Copy Database
      tags:
      - Applications
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/actions/rename:
    post:
      description: "<p>Renames a database. You must provide the source application\
        \ name, and the source and destination database names. Destination application\
        \ name is not required.</p>"
      operationId: Applications.renameDatabase
      parameters:
      - description: <p>Source application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyRenameBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/CopyRenameBean'
        description: <p>Source and destination database information.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Database renamed successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to rename database.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Rename Database
      tags:
      - Applications
      x-codegen-request-body-name: body
  /applications/actions/shadowCopy:
    post:
      description: "<p>Puts the specified primary application in read-only mode and\
        \ creates a shadow application (a complete copy) out of the primary application.</p>\
        \ <p>A shadow application enables you to perform cube modifications and outline\
        \ restructure on the shadow application, while the primary application serves\
        \ read-only operations such as queries.</p> <p>Permission required: power\
        \ user.</p> <p>Shadow applications are useful because an outline restructure\
        \ can take a very long time, depending on the size of the application.</p>\
        \ <p>Instead of reporting users being blocked by the downtime due to restructure,\
        \ a shadow solution helps them continue their queries against the primary\
        \ application, while the restructure is occurring on the shadow application.</p>\
        \ <p>Note that a shadow application can be made as hidden copy of the primary\
        \ application.</p> <p>This means if you invoke <a href='./op-applications-get.html'>List\
        \ Applications</a>, you will not see the shadow application in that list.</p>\
        \ <p>The parameter <i>waitForOngoingUpdatesInSecs</i> allows you to control\
        \ how long the copying process can wait, if there are any ongoing write-operations\
        \ on the cubes(s) of this application at the time you are attempting to make\
        \ a shadow copy.</p> <p>For example, if there is a data load in progress,\
        \ the cloning process fails.</p> <p>If you specified waitForOngoingUpdatesInSecs\
        \ as 60, Essbase waits up to one minute for the data load to complete before\
        \ initiating a cloning process.</p> <p>If the data load doesn't complete within\
        \ this specified wait-interval, Essbase does not create the copy, the cloning\
        \ process fails with an error, and the data load continues.</p><p><b>See Also</b></p><ul><li><a\
        \ href='./op-applications-actions-name-appvisiblity-get.html'>List Application\
        \ Names</a></li><li><a href='./op-applications-actions-shadowpromote-post.html'>Promote\
        \ Shadow Application</a></li><li><a href='./op-applications-actions-shadowdelete-shadowappname-delete.html'>Delete\
        \ Shadow Application</a></li></ul>"
      operationId: Applications.createShadowApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShadowCopyBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/ShadowCopyBean'
        description: "<p>primaryAppName: Source application name which you intend\
          \ to clone.</p> <p>shadowAppName : Unique Destination or secondary application\
          \ name which will be a copy of the source.</p> <p>hideShadow: Specify <b>true</b>\
          \ to hide the application; otherwise, specify <b>false</b>.</p> <p>waitForOngoingUpdatesInSecs:\
          \ Waiting period (in seconds) for any active write-operations to complete.</p>\
          \ <p>runInBackground: Specify <b>true</b> to schedule 'Shadow Copy' as a\
          \ Job; otherwise, specify <b>false</b>.</p> "
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Shadow application created successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to create shadow
            application.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
        "503":
          content: {}
          description: <p><strong>Service Unavailable</strong></p><p>Naming exception
            or server exception.</p>
      summary: Create Shadow Application
      tags:
      - Applications
      x-codegen-request-body-name: body
  /applications/actions/shadowPromote:
    post:
      description: "<p>Promotes the shadow application as the base application. Conceptually,\
        \ the promote operation is equivalent to moving the Essbase application directory\
        \ from a source to destination location, at the file system level.</p> <p>Essbase\
        \ must stop (unload) both applications, if they are running, before promoting.\
        \ At the time of unloading, if the destination application is serving any\
        \ ongoing operations, such as queries, Essbase terminates those operations\
        \ and attempts to unload the application.</p> <p>If a graceful unload process\
        \ fails or takes longer than permitted by the input argument <i>timeoutToForceUnloadApp</i>\
        \ (unit=seconds), Essbase forcefully terminates the application.</p> <p>Example:\
        \ if you specify 60 seconds for the timeout, but the termination of ongoing\
        \ requests and graceful unloading of the application does not complete within\
        \ one minute, Essbase triggers a forceful termination.  After termination,\
        \ Essbase promotes the shadow application.</p> <p>The promote operation is\
        \ supported on all applications, including aggregate storage, block storage,\
        \ and Hybrid mode.</p> <p>Note: when moving an existing application, only\
        \ the application and cube artifacts (such as metadata and data) are replaced\
        \ from the source to destination.</p> <p>During a promotion, all security\
        \ layer associations on the destination application, such as  users, groups,\
        \ and security filters, are retained, while that of shadow/source are lost.\
        \ The same rule applies for partition definitions.</p> <p>Example: If users\
        \ X and Y had read-access to App1, and an admin promotes a shadow App2 to\
        \ replace App1, both X and Y will be able to access App1.</p> <p>If user Z\
        \ had access to App2, then after promotion, Z is not be able to access App1.</p>\
        \ <p>Promotion from shadowed application to base is honored only if there\
        \ are no changes to the number of cubes and cube names. In other words, if\
        \ a cube gets renamed or if there is any addition or deletion of an application\
        \ after it was shadowed, then promotion of such an application fails with\
        \ an error, leaving both applications as they were.</p> <p>Example:  ASOAppNew.cubeNew\
        \ <i>cannot</i> be replaced as ASO.cube. ASOAppNew.cube <i>can</i> be replaced\
        \ as ASO.cube.</p> <p>Tips: You need not unload or stop the application prior\
        \ to calling this promotion API. Essbase loads the application to gather information,\
        \ and unloads it prior to moving the applications.</p>"
      operationId: Applications.promoteShadowApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShadowPromoteBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/ShadowPromoteBean'
        description: "<p>shadowAppName: Name of the hidden shadow application that\
          \ needs to be promoted to base.</p> <p>primaryAppName: Name of the primary\
          \ application.</p> <p>timeoutToForceUnloadApp: Time interval (in seconds)\
          \ to force unload in the event of applications performing an ongoing requests\
          \ even after time interval.</p> <p>runInBackground: Specify <b>true</b>\
          \ to schedule 'Shadow Promote' as a Job; otherwise, specify <b>false</b>.</p> "
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Promote shadow application completed
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to promote shadow
            application.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
        "503":
          content: {}
          description: <p><strong>Service Unavailable</strong></p><p>Naming exception
            or server exception.</p>
      summary: Promote Shadow Application
      tags:
      - Applications
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases:
    get:
      description: "<p>Returns list of databases. Providing the connection name for\
        \ which to list databases is optional. If a connection name is provided, connections\
        \ created at the specified application is used to fetch the database list.</p>"
      operationId: Applications.getCubes
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Connection name.</p>
        in: query
        name: connectionName
        schema:
          type: string
      - description: <p>Application name from which to list databases.</p>
        in: query
        name: applicationNameForConnection
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CubeList'
            application/xml:
              schema:
                $ref: '#/components/schemas/CubeList'
          description: <p><strong>OK</strong></p><p>Database list returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get databases.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Databases
      tags:
      - Applications
  /applications/{applicationName}/databases/{databaseName}/calculationFunctions:
    get:
      description: <p>Returns list of common and database-specific calculation functions.</p>
      operationId: Databases.getCalculationFunctions
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: <p><strong>OK</strong></p><p>XML or JSON string containing
            list of calculation functions returned successfully.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Calculation Functions
      tags:
      - Applications
  /applications/{applicationName}/databases/{databaseName}/mdxFunctions:
    get:
      description: Returns list of MDX functions
      operationId: Databases.getMdxFunctions
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Application name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: <p><strong>OK</strong></p><p>XML or JSON string containing
            list of MDX functions returned successfully.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get MDX Functions
      tags:
      - Applications
  /applications/{applicationName}/databases/{databaseName}/executeReport:
    get:
      description: <p>Returns output generated by  executing a report script specification
        file.</p>
      operationId: Applications.executeReportScript
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Report script file name.</p>
        in: query
        name: filename
        required: true
        schema:
          type: string
      - description: <p>All blocks which are accessed by the report specification
          are locked.</p>
        in: query
        name: lockForUpdate
        schema:
          default: "false"
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Report generated successfully.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Execute Report Script
      tags:
      - Applications
  /applications/{applicationName}/databases/{databaseName}:
    delete:
      description: <p>Deletes specified database.</p>
      operationId: Applications.deleteDatabase
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Database deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete database.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Database
      tags:
      - Applications
    get:
      description: <p>Returns details of database with specified database name and
        application name.</p>
      operationId: Applications.getCube
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cube'
            application/xml:
              schema:
                $ref: '#/components/schemas/Cube'
          description: <p><strong>OK</strong></p><p>Database details returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get database.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Database
      tags:
      - Applications
    put:
      description: <p>Performs specified action on the application and database. Valid
        actions are <b>Start</b> and <b>Stop</b>.
      operationId: Applications.performDbOperation
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Action - start or stop.</p>
        in: query
        name: action
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Action performed successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to perform action.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Start or Stop Database
      tags:
      - Applications
  /applications/{applicationName}:
    delete:
      description: <p>Deletes specified application.</p>
      operationId: Applications.deleteApplication
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Application deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete application.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Application
      tags:
      - Applications
    get:
      description: <p>Returns details of application with specified name.</p>
      operationId: Applications.getApplication
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Role.</p>
        in: query
        name: role
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application'
          description: <p><strong>OK</strong></p><p>Application details returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get application.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application
      tags:
      - Applications
    put:
      description: <p>Performs specified action on the application. Valid actions
        are <b>Start</b> and <b>Stop</b>.</p>
      operationId: Applications.performOperation
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Action
        in: query
        name: action
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Action performed successfully.</p>.
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to perform action.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Start or Stop Application
      tags:
      - Applications
  /applications/{applicationName}/databases/{databaseName}/currencySettings:
    get:
      description: <p>Returns the currency settings for the database.</p>
      operationId: Databases.getCurrencySettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: <p><strong>OK</strong></p><p>Currency settings returned successfully.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Currency Settings
      tags:
      - Applications
    post:
      description: <p>Updates the currency settings for the database.</p>
      operationId: Databases.setCurrencySettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CurrencySettings'
        description: <p>Currency settings.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: <p><strong>OK</strong></p><p>Currency settings updated successfully.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Set Currency Settings
      tags:
      - Applications
      x-codegen-request-body-name: body
  /applications/{applicationName}/provisionReport:
    get:
      description: "<p>Gets provisioning report of specified application for all the\
        \ users and groups having at least one application role (directly or inherited\
        \ through groups). To invoke this API, logged in user should have at least\
        \ <b>Database Manager</b> role for the specified application. Application\
        \ roles are included only when logged in user has <b>Application Manager</b>\
        \ role for the specified application.</p> <p>If you are using EPM Shared Services\
        \ security mode, this operation is not available. Instead, manage users, groups,\
        \ and permissions in the Shared Services Console.</p>"
      operationId: Applications.getApplicationProvisionReport
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: "<p><strong>OK</strong></p><p>Provisioning report returned\
            \ successfully, as Excel stream.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Logged in user may not
            have appropriate application role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Provisioning Report
      tags:
      - Applications
  /applications:
    get:
      description: "<p>Returns the list of Essbase applications. Connection name and\
        \ application name for connection are optional parameters.</p> <p>If you provide\
        \ only a connection name with no application name, this API fetches all applications\
        \ using that named connection.</p> <p>If you provide a connection name and\
        \ application name, this API fetches the specified applications using the\
        \ specified connection.</p> <p>Use the <code>fields</code> parameter to return\
        \ only required fields.</p> <p>Limitation: If the application status is required\
        \ in response, the limit must be less than or equal to 100.</p>"
      operationId: Applications.getApplications
      parameters:
      - in: query
        name: filter
        schema:
          default: '*'
          type: string
      - description: <p>Number of applications to omit from the start of the result
          set. Default value is 0.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: <p>Maximum number of applications to return. Default is 50.</p>
        in: query
        name: limit
        schema:
          default: 50
          format: int32
          type: integer
      - description: <p>Connection name.</p>
        in: query
        name: connectionName
        schema:
          type: string
      - description: <p>Application name for connection.</p>
        in: query
        name: applicationNameForConnection
        schema:
          type: string
      - description: "<p>Comma-separated list of fields to be returned in response\
          \ fields. If omitted, all fields are returned.</p>"
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: <p><strong>OK</strong></p><p>Application list returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get applications.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Applications
      tags:
      - Applications
    post:
      description: <p>Creates an application with the specified details.</p>
      operationId: Applications.createApplications
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateApplication'
        description: <p>Application details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Application created successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to create application.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Application
      tags:
      - Applications
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/formulaFunctions:
    get:
      description: "<p>Returns a list of functions for defining formulas. For an aggregate\
        \ storage cube, the list contains MDX functions. For a block storage cube,\
        \ the list contains Essbase calculation functions.</p>"
      operationId: Databases.formulaFunctions
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: "<p><strong>OK</strong></p><p>List of functions, as XML or\
            \ JSON string, returned successfully.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Formula Functions
      tags:
      - Applications
  /applications/actions/tree:
    get:
      description: <p>Gets the list of applications and databases as a tree view.</p>
      operationId: Applications.getApplicationsTree
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: <p><strong>OK</strong></p><p>Tree view listing of applications
            and databases returned successfully.</p>
        "500":
          content: {}
          description: Internal Server Error
      summary: Get Application Tree View
      tags:
      - Applications
  /applications/{applicationName}/databases/{databaseName}/aliases:
    get:
      description: <p>Returns alias tables associated with the specified application
        and database.</p>
      operationId: Applications.getAliases
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringCollectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StringCollectionResponse'
          description: <p><strong>OK</strong></p><p>Alias tables returned successfully.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Aliases
      tags:
      - Applications
  /applications/actions/name/{appVisiblity}:
    get:
      description: "<p>Returns the list of application names, based on the type of\
        \ visibility requested. For example, you can fetch the list of hidden (shadow)\
        \ applications only, or you can fetch the visible applications list only,\
        \ or both sets of applications.</p>"
      operationId: Applications.getApplicationNames
      parameters:
      - description: "<p>appVisiblity : Visibility level of application names. Valid\
          \ options: ALL, HIDDEN, REGULAR</p>"
        in: path
        name: appVisiblity
        required: true
        schema:
          enum:
          - ALL
          - HIDDEN
          - REGULAR
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arrays'
            application/xml:
              schema:
                $ref: '#/components/schemas/Arrays'
          description: <p><strong>OK</strong></p><p>Application names returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get application
            names.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
        "503":
          content: {}
          description: <p><strong>Service Unavailable</strong></p><p>Naming exception
            or server exception.</p>
      summary: List Application Names
      tags:
      - Applications
  /applications/{application}/databases/{database}/audittrail/data:
    delete:
      description: <p>Deletes audit trail data older than the specified time.</p>
      operationId: AuditTrail.purge
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: <p>Time in milliseconds.</p>
        in: query
        name: olderthan
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Audit data deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete audit
            data.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Audit Data
      tags:
      - Audit Trail
    get:
      description: "<p>Returns audit trail data in CSV string format if <code>Accept='text/csv'</code>\
        \ or <code>Accept='text/plain'</code>. If <code>Accept='application/octet-stream'</code>,\
        \ returns audit data as a CSV stream to download. If <code>Accept='application/json'</code>,\
        \ returns the audit data list in JSON format.<p>"
      operationId: AuditTrail.getDataAudit
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: <p>Number of records to be fetched.</p>
        in: query
        name: fetchCount
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            text/csv:
              schema:
                type: string
          description: <p><strong>OK</strong></p><p>Audit trail data returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to return audit
            data.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Audit Data
      tags:
      - Audit Trail
  /applications/{application}/databases/{database}/boe:
    post:
      description: "<p>Executes batch outline editing process. Based on the XML or\
        \ JSON body, adds or removes members from the outline in the active cube.</p>"
      operationId: BatchOutlineEditing.execute
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OtlEditMain'
          application/xml:
            schema:
              $ref: '#/components/schemas/OtlEditMain'
        description: Batch outline JSON/XML
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BOEOutput'
            application/xml:
              schema:
                $ref: '#/components/schemas/BOEOutput'
          description: <p><strong>OK</strong></p><p>The batch outline edit completed
            successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to complete batch\
            \ outline editing. The output may be invalid, the sequence of metadata\
            \ operations may be incorrect, or saving the outline may have failed.</p>"
      summary: Run Batch Outline Edit
      tags:
      - Batch Outline Editing
      x-codegen-request-body-name: body
  /databasesizestatistics:
    get:
      description: <p>Returns a list of databases and their page and index sizes.</p>
      operationId: DatabaseSizeStatistics.getDBSizes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DBSizeList'
            application/xml:
              schema:
                $ref: '#/components/schemas/DBSizeList'
          description: <p><strong>OK</strong></p><p>Database size statistics returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get database
            size statistics.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Database Size Statistics
      tags:
      - Database Size Statistics
  /applications/{applicationName}/databases/{databaseName}/dimensions:
    get:
      description: <p>Returns all the dimensions from the specified application and
        database.</p>
      operationId: Dimensions.listDimensions
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DimensionList'
            application/xml:
              schema:
                $ref: '#/components/schemas/DimensionList'
          description: "<p><strong>OK</strong></p><p>Dimensions retrieved successfully,\
            \ including details about the dimensions, and links to get the generations\
            \ and levels of each dimension.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the dimensions.
            The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Dimensions
      tags:
      - Dimensions
  /applications/{applicationName}/databases/{databaseName}/dimensions/{dimensionName}/generations:
    get:
      description: <p>Returns all the generations of a dimension from the specified
        application and database.</p>
      operationId: Dimensions.listDimGenerations
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Dimension name.</p>
        in: path
        name: dimensionName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationLevelList'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenerationLevelList'
          description: "<p><strong>OK</strong></p><p>Generations retrieved successfully,\
            \ including links to get or edit each generation.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to get the generations.\
            \ The application, database, or dimension name may be incorrect.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Generations
      tags:
      - Dimensions
  /applications/{applicationName}/databases/{databaseName}/dimensions/{dimensionName}/generations/{generationNumber}:
    get:
      description: "<p>Returns generation details of a dimension, based on the specified\
        \ generation number, application, and database.</p>"
      operationId: Dimensions.getDimGenerations
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Dimension name.</p>
        in: path
        name: dimensionName
        required: true
        schema:
          type: string
      - description: <p>Generation number.</p>
        in: path
        name: generationNumber
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenerationLevel'
          description: "<p><strong>OK</strong></p><p>Generation details returned successfully,\
            \ including links to get or edit the generation.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to get generation.\
            \ The application name, database name, dimension name, or generation number\
            \ may be incorrect.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Generation
      tags:
      - Dimensions
    put:
      description: "<p>Updates and returns generation details of a dimension, based\
        \ on the specified generation number, application, and database.</p>"
      operationId: Dimensions.editDimGenerations
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Dimension name.</p>
        in: path
        name: dimensionName
        required: true
        schema:
          type: string
      - description: <p>Generation number.</p>
        in: path
        name: generationNumber
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GenerationLevel'
        description: <p>Generation details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenerationLevel'
          description: "<p><strong>OK</strong></p><p>Generation details updated successfully,\
            \ including links to get or edit the generation.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to update the\
            \ generation. The application name, database name, dimension name, or\
            \ generation number may be incorrect.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Generation
      tags:
      - Dimensions
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/dimensions/{dimensionName}/levels/{levelNumber}:
    get:
      description: "<p>Returns level details of a dimension, based on the specified\
        \ level number, application, and database.</p>"
      operationId: Dimensions.getDimLevels
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Dimension name.</p>
        in: path
        name: dimensionName
        required: true
        schema:
          type: string
      - description: <p>Level number.</p>
        in: path
        name: levelNumber
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenerationLevel'
          description: "<p><strong>OK</strong></p><p>Level details returned successfully,\
            \ including links to get or edit the level.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to get level.\
            \ The application name, database name, dimension name, or level number\
            \ may be incorrect.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Level
      tags:
      - Dimensions
    put:
      description: "<p>Updates and returns level details of a dimension, based on\
        \ the specified level number, application, and database.</p>"
      operationId: Dimensions.editDimLevels
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Dimension name.</p>
        in: path
        name: dimensionName
        required: true
        schema:
          type: string
      - description: <p>Level number.</p>
        in: path
        name: levelNumber
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GenerationLevel'
        description: <p>Level details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenerationLevel'
          description: "<p><strong>OK</strong></p><p>Level details updated successfully,\
            \ including links to get or edit the level.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to update the\
            \ level. The application name, database name, dimension name, or level\
            \  number may be incorrect.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Level
      tags:
      - Dimensions
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/dimensions/{dimensionName}/levels:
    get:
      description: <p>Returns all the levels of a dimension from the specified application
        and database.</p>
      operationId: Dimensions.listDimLevels
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Dimension name.</p>
        in: path
        name: dimensionName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationLevelList'
            application/xml:
              schema:
                $ref: '#/components/schemas/GenerationLevelList'
          description: "<p><strong>OK</strong></p><p>Levels retrieved successfully,\
            \ including links to get or edit each level.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to get the levels.\
            \ The application, database, or dimension name may be incorrect.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Levels
      tags:
      - Dimensions
  /urls:
    get:
      description: <p>Returns the list of available Essbase URLs.</p>
      operationId: URLs.get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EssbaseURLList'
            application/xml:
              schema:
                $ref: '#/components/schemas/EssbaseURLList'
          description: successful operation
      summary: Get Essbase URLs
      tags:
      - URLs
  /filescanner/actions/validate:
    post:
      description: <p>Validates the antivirus details. Virus scanning is available
        to ensure that files loaded into Essbase are virus-free. Antivirus software
        should have ICAP support.</p>
      operationId: FileScanner.validate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AVClientInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/AVClientInfo'
        description: <p>Antivirus details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>The operation completed successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to validate the
            antivirus details.</p>
      summary: Validate Antivirus
      tags:
      - File Scanner
      x-codegen-request-body-name: body
  /filescanner:
    delete:
      description: <p>Removes the antivirus details for scanning files.</p>
      operationId: FileScanner.delete
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AVClientInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/AVClientInfo'
          description: <p><strong>OK</strong></p><p>The operation completed successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete the
            antivirus details.</p>
      summary: Delete Antivirus
      tags:
      - File Scanner
    get:
      description: <p>Returns the current antivirus details. Virus scanning is available
        to ensure that files loaded into Essbase are virus-free. Antivirus software
        should have ICAP support.</p>
      operationId: FileScanner.get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AVClientInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/AVClientInfo'
          description: <p><strong>OK</strong></p><p>The operation completed successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the antivirus
            details.</p>
      summary: Get Antivirus
      tags:
      - File Scanner
    put:
      description: <p>Sets the antivirus details for scanning files. Virus scanning
        is available to ensure that files loaded into Essbase are virus-free. Antivirus
        software should have ICAP support.</p>
      operationId: FileScanner.set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AVClientInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/AVClientInfo'
        description: <p>Antivirus details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AVClientInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/AVClientInfo'
          description: <p><strong>OK</strong></p><p>The operation completed successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to set the antivirus
            details.</p>
      summary: Set Antivirus
      tags:
      - File Scanner
      x-codegen-request-body-name: body
  /session:
    delete:
      description: <p>Deactivates the current session.</p>
      operationId: UserSession.signoff
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Session deactivated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to deactivate
            session.</p>
      summary: Logout Session
      tags:
      - User Session
    get:
      description: <p>Returns logged in user information.</p>
      operationId: UserSession.getSession
      parameters:
      - in: query
        name: token
        schema:
          type: boolean
      - description: <p>Specify whether to include groups in response. Default is
          true.</p>
        in: query
        name: includeGroups
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBean'
          description: <p><strong>OK</strong></p><p>The logged in user information
            was returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get user information.</p>
      summary: Get Session
      tags:
      - User Session
  /session/password:
    put:
      description: "<p>Reset the password.</p> <p>If you are using EPM Shared Services\
        \ security mode, this operation is not available. Instead, manage users, groups,\
        \ and permissions in the Shared Services Console.</p>"
      operationId: UserSession.resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/ResetPasswordBean'
        description: <p>Password reset details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>The password was reset successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to reset the password.</p>
      summary: Reset Password
      tags:
      - User Session
      x-codegen-request-body-name: body
  /utilities:
    get:
      description: "<p>Returns available utilities. For example: Export Utility, Smart\
        \ View for Essbase.</p>"
      operationId: Resources.getUtilities
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ResourceList'
          description: <p><strong>OK</strong></p><p>Utilities returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get utilities.</p>
      summary: List Utilities
      tags:
      - Templates and Utilities
  /utilities/{id}:
    get:
      description: <p>Returns utility with specified ID as stream.</p>
      operationId: Resources.downloadUtility
      parameters:
      - description: "<p>ID of the utility.</p> <ul><li><code>exportutility</code>:\
          \ Command-line cube export utility.</li><li><code>smartview</code>: Smart\
          \ View for Essbase</li><li><code>lcm</code>: Life Cycle Management (LCM)\
          \ utility for backup/restore/migration. </li><li><code>cli</code>: Essbase\
          \ Command-Line Interface</li><li><code>migrationTool</code>: Command-line\
          \ migration utility </li><li><code>EssbaseMaxlClient</code>: MaxL Client\
          \ for Windows</li><li><code>EssbaseLinuxMaxlClient</code>:  MaxL Client\
          \ for Linux</li><li><code>EssbaseClientLinux</code>: Essbase client libraries\
          \ for C developers on Linux</li><li><code>EssbaseClientWindows</code>: Essbase\
          \ client libraries for C developers on  Windows</li><li><code>EssbaseClientMacosx</code>:\
          \ Essbase client libraries for C developers on Mac OS</li><li><code>japi</code>:\
          \ Essbase tools and libraries for Java API</li><li><code>esscdext</code>:\
          \ Cube Designer extension and add-in to Smart View</li></ul>"
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/zip:
              schema:
                format: binary
                type: string
            application/octet-stream:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            application/xml:
              schema:
                format: binary
                type: string
          description: <p><strong>OK</strong></p><p>Utility with specified ID found.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to download utility
            with specified ID.</p>
      summary: Download Utility
      tags:
      - Templates and Utilities
  /applications/{applicationName}/databases/{databaseName}/asodataload/buffers:
    delete:
      description: <p>Destroys data load buffer with the specified ids.</p>
      operationId: ASOLoadBuffers.destroyBuffers
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestroyBuffer'
          application/xml:
            schema:
              $ref: '#/components/schemas/DestroyBuffer'
        description: Buffer Ids
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Load buffers destroyed successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to destroy load
            buffers.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Destroy Dataload Buffer
      tags:
      - ASO Load buffers
      x-codegen-request-body-name: body
    get:
      description: <p>Lists existing aggregate storage data load buffers. An error
        is returned if called on a block storage database.</p>
      operationId: ASOLoadBuffers.listBuffers
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBuffersList'
            application/xml:
              schema:
                $ref: '#/components/schemas/LoadBuffersList'
          description: <p><strong>OK</strong></p><p>Load buffers list returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get load buffers.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Buffers
      tags:
      - ASO Load buffers
    post:
      description: <p>Creates an aggregate storage data load buffer with the specified
        options.</p>
      operationId: ASOLoadBuffers.createBuffer
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataLoadBuffer'
          application/xml:
            schema:
              $ref: '#/components/schemas/DataLoadBuffer'
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Load buffer created successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to create load
            buffer.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Buffer
      tags:
      - ASO Load buffers
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/asodataload/actions/merge:
    post:
      description: <p>Merges aggregate storage incremental data slices.</p>
      operationId: ASOLoadBuffers.merge
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeSilceOption'
          application/xml:
            schema:
              $ref: '#/components/schemas/MergeSilceOption'
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Data merged successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to merge data.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Merge Data
      tags:
      - ASO Load buffers
      x-codegen-request-body-name: body
  /preferences/grid:
    get:
      description: <p>Returns the grid preferences from the session.</p>
      operationId: GridPreferences.get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'
            application/xml:
              schema:
                $ref: '#/components/schemas/Preferences'
          description: <p><strong>OK</strong></p><p>Grid preferences retrieved successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get grid preferences.
            The session may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Grid Preferences
      tags:
      - Grid Preferences
    put:
      description: <p>Sets the grid preferences for the current session.</p>
      operationId: GridPreferences.set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preferences'
        description: <p>Grid preferences to be stored in the session.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Grid preferences set successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to set grid preferences.
            The session may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Set Grid Preferences
      tags:
      - Grid Preferences
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/grid/mdx:
    post:
      description: <p>Returns an output grid from the specified MDX report.</p>
      operationId: Grid.executeMDX
      parameters:
      - description: <p>Application name for grid.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database/Cube name for grid.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/MDXOperation'
        description: <p>MDX report for grid.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
            application/xml:
              schema:
                $ref: '#/components/schemas/Grid'
          description: <p><strong>OK</strong></p><p>Grid returned successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Validation failed. The\
            \ application, database, or MDX report name may be missing or incorrect.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Execute MDX Report
      tags:
      - Grid
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/grid/layout/{layout}:
    get:
      description: <p>Renders the grid for the specified layout.</p>
      operationId: Grid.executeLayout
      parameters:
      - description: <p>Application name for grid layout.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database/Cube name for grid layout.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Layout name to be executed.</p>
        in: path
        name: layout
        required: true
        schema:
          type: string
      - description: <p>Owner of the layout.</p>
        in: query
        name: user
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
            application/xml:
              schema:
                $ref: '#/components/schemas/Grid'
          description: <p><strong>OK</strong></p><p>Grid layout rendered successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Validation failed. The\
            \ application, database, or layout name may be missing or  incorrect.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Execute Grid Layout
      tags:
      - Grid
  /applications/{applicationName}/databases/{databaseName}/grid/layout:
    post:
      description: <p>Returns the layout grid for the current grid to be saved as
        layout for the specified cube.</p>
      operationId: Grid.getLayoutGrid
      parameters:
      - description: <p>Application name for default grid.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database/Cube name for default grid.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Grid'
        description: <p>The current grid displayed.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
            application/xml:
              schema:
                $ref: '#/components/schemas/Grid'
          description: <p><strong>OK</strong></p><p>Layout grid returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Validation failed. The
            application or database name may be missing or  incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Layout Grid
      tags:
      - Grid
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/grid:
    get:
      description: <p>Returns the default grid layout for the specified cube.</p>
      operationId: Grid.getDefault
      parameters:
      - description: <p>Application name for default grid.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database/Cube name for default grid.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Reset flag to avoid saved grid layout.</p>
        in: query
        name: reset
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
            application/xml:
              schema:
                $ref: '#/components/schemas/Grid'
          description: <p><strong>OK</strong></p><p>Grid returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Validation failed. The
            application or database name may be missing or incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Default Grid
      tags:
      - Grid
    post:
      description: "<p>Returns the grid for specified operation. Supported grid operations\
        \ are Zoom In (zoomin), Zoom Out (zoomout), Refresh (refresh), Keep Only (keeponly),\
        \ Remove Only (removeonly), Submit (submit), Pivot (pivot), and Pivot To POV\
        \ (pivotToPOV).</p>"
      operationId: Grid.execute
      parameters:
      - description: <p>Application name for grid operation.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database/Cube name for grid operation.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GridOperation'
        description: <p>Grid Operation to be performed.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
            application/xml:
              schema:
                $ref: '#/components/schemas/Grid'
          description: <p><strong>OK</strong></p><p>Grid operation completed successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to execute grid
            operation. The application name or database name may be incorrect or missing.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Execute Grid Operation
      tags:
      - Grid
      x-codegen-request-body-name: body
  /performance/files/actions/download:
    get:
      description: <p>Get all the performance analyzer files as a compressed file.</p>
      operationId: Performance.downloadall
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/InputStream'
            text/html:
              schema:
                $ref: '#/components/schemas/InputStream'
          description: <p><strong>OK</strong></p><p>File downloaded successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get Performance
            Analyzer file.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Performance Analyzer File
      tags:
      - Performance Analyzer
  /performance/files:
    delete:
      description: <p>Deletes all of the Performance Analyzer activity data files.
        Requires Service Administrator role.</p>
      operationId: Performance.deleteall
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InputStream'
            application/xml:
              schema:
                $ref: '#/components/schemas/InputStream'
          description: <p><strong>OK</strong></p><p>Files deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete Performance
            Analyzer files.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Performance Analyzer Files
      tags:
      - Performance Analyzer
    get:
      description: <p>Gets compressed Performance Analyzer activity data files. Performance
        Analyzer helps you monitor usage and performance statistics of your Essbase
        service. Requires Service Administrator role.</p>
      operationId: Performance.getFiles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceFiles'
            application/xml:
              schema:
                $ref: '#/components/schemas/PerformanceFiles'
          description: <p><strong>OK</strong></p><p>Files returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get Performance
            Analyzer files.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Performance Analyzer Files
      tags:
      - Performance Analyzer
  /performance/settings:
    get:
      description: "<p>Gets the Performance Analyzer settings. You can see whether\
        \ Performance Analyzer is enabled, and view the time interval setting for\
        \ creation of new data files. Requires Service Administrator role.</p>"
      operationId: Performance.getConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HPA'
            application/xml:
              schema:
                $ref: '#/components/schemas/HPA'
          description: <p><strong>OK</strong></p><p>Performance Analyzer settings
            returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get Performance
            Analyzer settings.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Performance Analyzer Settings
      tags:
      - Performance Analyzer
    put:
      description: "<p>Changes the Performance Analyzer settings: you can enable or\
        \ disable it, or change the time interval for creation of new data files.\
        \ Requires Service Administrator role.</p>"
      operationId: Performance.setConfig
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/HPA'
        description: <p>Performance Analyzer configuration input.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HPA'
            application/xml:
              schema:
                $ref: '#/components/schemas/HPA'
          description: <p><strong>OK</strong></p><p>Performance Analyzer settings
            configured successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to store Performance
            Analyzer settings.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Set Performance Analyzer Settings
      tags:
      - Performance Analyzer
      x-codegen-request-body-name: body
  /performance/files/{file}:
    get:
      description: <p>Gets the specified Performance Analyzer activity data file.
        Requires Service Administrator role.</p>
      operationId: Performance.download
      parameters:
      - description: File
        in: path
        name: file
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/InputStream'
            text/html:
              schema:
                $ref: '#/components/schemas/InputStream'
          description: <p><strong>OK</strong></p><p>File downloaded successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get Performance
            Analyzer file.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Performance Analyzer File
      tags:
      - Performance Analyzer
  /applications/{application}/databases/{database}/layouts/{layout}/actions/markDefault:
    post:
      description: "<p>Marks a saved grid layout as the default grid view for this\
        \ user or this cube. Requires Database Access permission to set the user default\
        \ layout, and Database Manager permission to set the cube default layout.</p>"
      operationId: Layouts.markDefaultLayout
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: <p>Saved grid layout name.</p>
        in: path
        name: layout
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultLayoutBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/DefaultLayoutBean'
        description: <p>User default or database default details.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layout'
            application/xml:
              schema:
                $ref: '#/components/schemas/Layout'
          description: <p><strong>OK</strong></p><p>Layout successfully marked as
            default.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to mark layout
            as user default or database default.</p>
      summary: Mark Layout as Default
      tags:
      - Layouts
      x-codegen-request-body-name: body
  /applications/{application}/databases/{database}/layouts:
    get:
      description: "<p>Lists the available saved grid layouts. If you are a service\
        \ administrator, all saved layouts are listed, including those created by\
        \ other users.</p>"
      operationId: Layouts.getLayouts
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layouts'
            application/xml:
              schema:
                $ref: '#/components/schemas/Layouts'
          description: <p><strong>OK</strong></p><p>List of layouts returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get layouts.</p>
      summary: List Layouts
      tags:
      - Layouts
    post:
      description: <p>Saves a grid layout for the specified cube.</p>
      operationId: Layouts.saveLayout
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Layout'
          application/xml:
            schema:
              $ref: '#/components/schemas/Layout'
        description: <p>Grid to be saved as a layout.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layout'
            application/xml:
              schema:
                $ref: '#/components/schemas/Layout'
          description: <p><strong>OK</strong></p><p>Layout saved successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to save layout.</p>
      summary: Save Layout
      tags:
      - Layouts
      x-codegen-request-body-name: body
  /applications/{application}/databases/{database}/layouts/{layout}:
    delete:
      description: <p>Deletes the layout in the specified cube.</p>
      operationId: Layouts.deleteLayout
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: <p>Layout name.</p>
        in: path
        name: layout
        required: true
        schema:
          type: string
      - description: <p>User name.</p>
        in: query
        name: user
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Layout deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete layout.</p>
      summary: Delete Layout
      tags:
      - Layouts
    get:
      description: <p>Gets the details for the specified layout.</p>
      operationId: Layouts.getLayoutDetails
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: <p>Layout name.</p>
        in: path
        name: layout
        required: true
        schema:
          type: string
      - description: <p>User name.</p>
        in: query
        name: user
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layout'
            application/xml:
              schema:
                $ref: '#/components/schemas/Layout'
          description: <p><strong>OK</strong></p><p>Layout details returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get layout
            details.</p>
      summary: Get Layout Details
      tags:
      - Layouts
    put:
      description: <p>Updates the layout with the provided details in the specified
        cube.</p>
      operationId: Layouts.editLayout
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: <p>Layout name.</p>
        in: path
        name: layout
        required: true
        schema:
          type: string
      - description: <p>User name.</p>
        in: query
        name: user
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Layout'
          application/xml:
            schema:
              $ref: '#/components/schemas/Layout'
        description: <p>Layout details to be updated.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layout'
            application/xml:
              schema:
                $ref: '#/components/schemas/Layout'
          description: <p><strong>OK</strong></p><p>Layout updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update layout.</p>
      summary: Update Layout
      tags:
      - Layouts
      x-codegen-request-body-name: body
  /applications/{application}/databases/{database}/mdx:
    post:
      description: "<p>Runs an MDX query, returning the results in the selected format\
        \ (JSON, HTML, Excel, or CSV).</p> <p>Results are an MDX output set in the\
        \ requested format (the default is JSON). The output set contains metadata\
        \ (including page, column, and row tuples) followed by data (a tuple for each\
        \ row).</p>"
      operationId: MDX.executeMDX
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: <p>Result format.</p>
        in: query
        name: format
        schema:
          default: JSON
          enum:
          - XLSX
          - CSV
          - HTML
          - JSON
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MDXInput'
        description: <p>MDX query and preferences.</p>
        required: false
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/InputStream'
            text/html:
              schema:
                $ref: '#/components/schemas/InputStream'
          description: "<p><strong>Mostly OK</strong></p><p>As this is a streaming\
            \ API, it can fail even with status 200. Check for an <code>errorMessage</code>\
            \ tag in the response to identify any errors.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the data
            in the required format.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Run MDX Query
      tags:
      - Execute MDX
      x-codegen-request-body-name: body
  /applications/{application}/databases/{database}/mdx/{name}:
    get:
      description: "<p>Runs an MDX report, returning the results in the selected format\
        \ (JSON, HTML, Excel, or CSV). An MDX report is saved in the cube context.</p>"
      operationId: MDX.executenq
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: <p>MDX report name.</p>
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: <p>Result format.</p>
        in: query
        name: format
        schema:
          default: JSON
          enum:
          - XLSX
          - CSV
          - HTML
          - JSON
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/InputStream'
          description: "<p><strong>Mostly OK</strong></p><p>As this is a streaming\
            \ API, it can fail even with status 200. Check for an <code>errorMessage</code>\
            \ tag in the response to identify any errors.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the data
            in the required format.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Run MDX Report
      tags:
      - Execute MDX
  /applications/{application}/databases/{database}/queries:
    get:
      description: <p>List all the saved MDX reports for the specified cube.</p>
      operationId: namedqueries.getNamedQueries
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Queries'
            application/xml:
              schema:
                $ref: '#/components/schemas/Queries'
          description: <p><strong>OK</strong></p><p>List of MDX reports returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get MDX reports.</p>
      summary: List MDX Reports
      tags:
      - Named Queries
    post:
      description: <p>Saves an MDX report for the specified cube.</p>
      operationId: namedqueries.saveNamedQuery
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamedQuery'
          application/xml:
            schema:
              $ref: '#/components/schemas/NamedQuery'
        description: <p>Details of query to be saved.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedQuery'
            application/xml:
              schema:
                $ref: '#/components/schemas/NamedQuery'
          description: <p><strong>OK</strong></p><p>MDX report saved successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to save MDX report.</p>
      summary: Save MDX Report
      tags:
      - Named Queries
      x-codegen-request-body-name: body
  /applications/{application}/databases/{database}/queries/{query}:
    delete:
      description: <p>Delete the MDX report for specified cube.</p>
      operationId: namedqueries.deleteNamedQuery
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: <p>MDX report name.</p>
        in: path
        name: query
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>MDX report deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete MDX
            report.</p>
      summary: Delete MDX Report
      tags:
      - Named Queries
    get:
      description: <p>Get the details for the specified MDX report.</p>
      operationId: namedqueries.getNamedQueryDetails
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: <p>MDX report name.</p>
        in: path
        name: query
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedQuery'
            application/xml:
              schema:
                $ref: '#/components/schemas/NamedQuery'
          description: <p><strong>OK</strong></p><p>MDX report details returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get MDX report
            details.</p>
      summary: Get MDX Report Details
      tags:
      - Named Queries
    put:
      description: <p>Update the MDX report for the specified cube.</p>
      operationId: namedqueries.editNamedQuery
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: database
        required: true
        schema:
          type: string
      - description: <p>MDX report name.</p>
        in: path
        name: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
          application/xml:
            schema:
              $ref: '#/components/schemas/Query'
        description: <p>Details of MDX report to be updated.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedQuery'
            application/xml:
              schema:
                $ref: '#/components/schemas/NamedQuery'
          description: <p><strong>OK</strong></p><p>MDX report updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update MDX
            report.</p>
      summary: Update MDX Report
      tags:
      - Named Queries
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/settings/outline:
    get:
      description: <p>Returns outline settings of the specified database. Additional
        settings can be retrieved using the <code>expand</code> parameter.</p>
      operationId: DatabaseSettingsStatistics.getOutlineSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Essbase connection name.</p>
        in: query
        name: connectionName
        schema:
          type: string
      - description: <p>Application name for connection.</p>
        in: query
        name: applicationNameForConnection
        schema:
          type: string
      - description: <p>Use <code>none</code> to show only general outline settings
          (this is the default). Other options available are <code>attribute</code>
          and <code>all</code>.
        in: query
        name: expand
        schema:
          default: none
          enum:
          - none
          - attributes
          - all
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlineSettingsList'
            application/xml:
              schema:
                $ref: '#/components/schemas/OutlineSettingsList'
          description: "<p><strong>OK</strong></p><p>Database outline settings returned\
            \ successfully, with links to get expanded settings.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the settings.
            The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Outline Settings
      tags:
      - Database Settings and Statistics
    patch:
      description: <p>Updates the outline settings of the specified database.</p>
      operationId: DatabaseSettingsStatistics.updateOutlineSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchElement'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/PatchElement'
              type: array
        description: <p>Outline settings patch list.</p>
        required: true
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Outline settings updated successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to update the\
            \ settings. The application or database name may be incorrect, or the\
            \ JSON for the settings may be incorrect.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Outline Settings
      tags:
      - Database Settings and Statistics
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/settings/startup:
    get:
      description: <p>Returns startup settings of the specified database.</p>
      operationId: DatabaseSettingsStatistics.getStartupSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartupSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/StartupSettings'
          description: <p><strong>OK</strong></p><p>Startup settings returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong><p>Failed to return the startup
            settings. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Startup Settings
      tags:
      - Database Settings and Statistics
  /applications/{applicationName}/databases/{databaseName}/settings/compression:
    get:
      description: <p>Returns compression settings of the specified database.</p>
      operationId: DatabaseSettingsStatistics.getCompressSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompressionSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompressionSettings'
          description: <p><strong>OK</strong></p><p>Compression settings retrieved
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the compression
            settings. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Compression Settings
      tags:
      - Database Settings and Statistics
  /applications/{applicationName}/databases/{databaseName}/settings/transactions:
    get:
      description: <p>Returns transaction settings of the specified database.</p>
      operationId: DatabaseSettingsStatistics.getTransSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/TransactionSettings'
          description: <p><strong>OK</strong></p><p>Transaction settings returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the transaction
            settings. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Transaction Settings
      tags:
      - Database Settings and Statistics
  /applications/{applicationName}/databases/{databaseName}/settings:
    get:
      description: "<p>Returns general settings of the specified database. Additional\
        \ groups of settings can be expanded using the <code>expand</code> parameter.\
        \ If <code>expand</code> is none, links are returned for the additional groups\
        \ of settings.</p>"
      operationId: DatabaseSettingsStatistics.getSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: "<p>Use <code>none</code> to show only general settings, with\
          \ links for other grouped settings. Other expansion options available: <ul><li><code>startup</code>\
          \ (block storage cubes only)</li><li><code>calculation</code> (block storage\
          \ only)</li><li><code>buffers</code></li><li><code>caches</code> (block\
          \ storage only)</li><li><code>transactions</code> (block storage only)</li><li><code>compression</code>\
          \ (aggregate storage only)</li><li><code>all</code></li></ul></p>"
        in: query
        name: expand
        schema:
          default: none
          enum:
          - none
          - startup
          - calculation
          - buffers
          - caches
          - transactions
          - compression
          - all
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsList'
            application/xml:
              schema:
                $ref: '#/components/schemas/SettingsList'
          description: "<p><strong>OK</strong></p><p>General database settings returned\
            \ successfully, with links to get expanded settings.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get database
            settings. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get General Settings
      tags:
      - Database Settings and Statistics
    patch:
      description: <p>Updates the settings of the specified database.</p>
      operationId: DatabaseSettingsStatistics.updateSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchElement'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/PatchElement'
              type: array
        description: <p>Database settings patch list.</p>
        required: true
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Settings updated successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to update the\
            \ settings. The application or database name may be incorrect, or the\
            \ JSON for the settings may be incorrect.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Settings
      tags:
      - Database Settings and Statistics
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/settings/outline/attributes:
    get:
      description: <p>Returns attribute settings of the outline from the specified
        database.</p>
      operationId: DatabaseSettingsStatistics.getOutlineAttributesSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Essbase connection name.</p>
        in: query
        name: connectionName
        schema:
          type: string
      - description: <p>Application name for connection.</p>
        in: query
        name: applicationNameForConnection
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeOutlineSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/AttributeOutlineSettings'
          description: <p><strong>OK</strong></p><p>Attribute settings returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the attribute
            settings. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Attribute Settings
      tags:
      - Database Settings and Statistics
  /applications/{applicationName}/databases/{databaseName}/statistics/storage:
    get:
      description: <p>Returns storage statistics of the specified database.</p>
      operationId: DatabaseSettingsStatistics.getStorageStats
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageStatistics'
            application/xml:
              schema:
                $ref: '#/components/schemas/StorageStatistics'
          description: <p><strong>OK</strong></p><p>Database storage statistics returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get storage
            statistics. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Storage Statistics
      tags:
      - Database Settings and Statistics
  /applications/{applicationName}/databases/{databaseName}/statistics/runtime:
    get:
      description: <p>Returns runtime statistics of the specified database.</p>
      operationId: DatabaseSettingsStatistics.getRuntimeStats
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuntimeStatistics'
            application/xml:
              schema:
                $ref: '#/components/schemas/RuntimeStatistics'
          description: <p><strong>OK</strong></p><p>Database runtime statistics returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get database
            runtime statistics. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Runtime Statistics
      tags:
      - Database Settings and Statistics
  /applications/{applicationName}/databases/{databaseName}/settings/calculation:
    get:
      description: <p>Returns calculation settings of the specified database.</p>
      operationId: DatabaseSettingsStatistics.getCalculationSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculationSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/CalculationSettings'
          description: <p><strong>OK</strong></p><p>Calculation settings retrieved
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the calculation
            settings. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Calculation Settings
      tags:
      - Database Settings and Statistics
  /applications/{applicationName}/databases/{databaseName}/settings/buffers:
    get:
      description: <p>Returns buffer settings of the specified database.</p>
      operationId: DatabaseSettingsStatistics.getBuffersSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BufferSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/BufferSettings'
          description: <p><strong>OK</strong></p><p>Buffer settings retrieved successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the buffer
            settings. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Buffer Settings
      tags:
      - Database Settings and Statistics
  /applications/{applicationName}/databases/{databaseName}/settings/caches:
    get:
      description: <p>Returns cache settings of the specified database.</p>
      operationId: DatabaseSettingsStatistics.getCachesSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/CacheSettings'
          description: <p><strong>OK</strong></p><p>Cache settings returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the cache
            settings. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Cache Settings
      tags:
      - Database Settings and Statistics
  /applications/{applicationName}/databases/{databaseName}/settings/querytracking/export:
    post:
      description: Export query data from an aggregate storage database to a text
        file. To do this operation query tracking must be enabled for given aggregate
        storage database.
      operationId: DatabaseSettingsStatistics.exportQueryData
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/QueryTrackingInputs'
        description: File Name
        required: true
      responses:
        "200":
          content: {}
          description: Query data exported successfully.
        "400":
          content: {}
          description: Fails to export query data.
        "500":
          content: {}
          description: Internal server error.
      summary: Export Query Tracking
      tags:
      - Database Settings and Statistics
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/settings/outline/dateformats:
    get:
      description: <p>Returns date formats of the outline from the specified database.</p>
      operationId: DatabaseSettingsStatistics.getOutlineSettingsDateFormats
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlineDateFormat'
            application/xml:
              schema:
                $ref: '#/components/schemas/OutlineDateFormat'
          description: <p><strong>OK</strong></p><p>Date formats retrieved successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the date
            formats. The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Date Formats
      tags:
      - Database Settings and Statistics
  /applications/{applicationName}/databases/{databaseName}/settings/querytracking/import:
    post:
      description: "Import query data, which was previously exported from an aggregate\
        \ storage database to a text file, to an aggregate storage database. To do\
        \ this operation query tracking must be enabled for given aggregate storage\
        \ database."
      operationId: DatabaseSettingsStatistics.importQueryData
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: Database name
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/QueryTrackingInputs'
        description: File Name
        required: true
      responses:
        "200":
          content: {}
          description: Query data imported successfully.
        "400":
          content: {}
          description: Fails to import query data.
        "500":
          content: {}
          description: Internal server error.
      summary: Import Query Tracking
      tags:
      - Database Settings and Statistics
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/statistics:
    get:
      description: <p>Returns general statistics of the specified database. Additional
        statistics can be retrieved using the <code>expand</code> parameter.</p>
      operationId: DatabaseSettingsStatistics.getStatistics
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: "<p>Use <code>none</code> to show only general statistics (this\
          \ is the default). Other options available: <code>storage</code>, <code>runtime</code>,\
          \ and <code>all</code>.</p>"
        in: query
        name: expand
        schema:
          default: none
          enum:
          - none
          - storage
          - runtime
          - all
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsList'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatisticsList'
          description: "<p><strong>OK</strong></p><p>General database statistics returned\
            \ successfully, with links to get expanded statistics.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the statistics.
            The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get General Statistics
      tags:
      - Database Settings and Statistics
  /applications/{applicationName}/settings/startup:
    get:
      description: <p>Returns the startup settings of the specified application.</p>
      operationId: ApplicationSettingsStatistics.getStartupSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppStartupSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/AppStartupSettings'
          description: <p><strong>OK</strong></p><p>Startup settings retrieved successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the startup
            settings. The application name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Startup Settings
      tags:
      - Application Settings and Statistics
  /applications/{applicationName}/settings:
    get:
      description: <p>Returns general settings of the specified application. Additional
        settings can be retrieved using the <code>expand</code> parameter.</p>
      operationId: ApplicationSettingsStatistics.getSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: "<p>Use <code>none</code> to show only general settings (this\
          \ is the default). Other options available: <code>startup</code>, <code>security</code>,\
          \ and <code>all</code>.</p>"
        in: query
        name: expand
        schema:
          default: none
          enum:
          - none
          - startup
          - security
          - all
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppSettingsList'
            application/xml:
              schema:
                $ref: '#/components/schemas/AppSettingsList'
          description: "<p><strong>OK</strong></p><p>General application settings\
            \ returned successfully, with links to get expanded settings and to edit\
            \ settings.</p>"
        "400":
          content: {}
          description: <p>Failed to get the settings. The application name may be
            incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application General Settings
      tags:
      - Application Settings and Statistics
    patch:
      description: <p>Updates the settings of the specified application.</p>
      operationId: ApplicationSettingsStatistics.updateSettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatchElement'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/PatchElement'
              type: array
        description: <p>Application settings patch list.</p>
        required: true
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Settings updated successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to update the\
            \ settings. The application name may be incorrect, or the JSON for the\
            \ settings may be incorrect.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Application Settings
      tags:
      - Application Settings and Statistics
      x-codegen-request-body-name: body
  /applications/{applicationName}/settings/security:
    get:
      description: <p>Returns the security settings of the specified application.</p>
      operationId: ApplicationSettingsStatistics.getSecuritySettings
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppSecuritySettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/AppSecuritySettings'
          description: <p><strong>OK</strong></p><p>Security settings returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the security
            settings. The application name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Security Settings
      tags:
      - Application Settings and Statistics
  /applications/{applicationName}/statistics:
    get:
      description: <p>Returns the statistics of the specified application.</p>
      operationId: ApplicationSettingsStatistics.getStatistics
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationStatistics'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationStatistics'
          description: <p><strong>OK</strong></p><p>Statistics retrieved successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the statistics.
            The application name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Statistics
      tags:
      - Application Settings and Statistics
  /outline/{app}/{cube}/descendantsCount/{memberUniqueName}:
    get:
      description: <p>Returns descendants count for the requested member.</p>
      operationId: Outline.getDescendantsCount
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: app
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: cube
        required: true
        schema:
          type: string
      - description: <p>Unique member name (fully qualified name).</p>
        in: path
        name: memberUniqueName
        required: true
        schema:
          type: string
      - description: <p>Essbase connection name.</p>
        in: query
        name: connection
        schema:
          type: string
      - description: <p>Application name for connection.</p>
        in: query
        name: applicationNameForConnection
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: int32
                type: integer
          description: <p><strong>OK</strong></p><p>Descendants count returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get descendants
            count.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Descendants Count
      tags:
      - Outline Viewer
  /outline/{app}/{cube}/{memberUniqueName}:
    get:
      description: "<p>Returns either all member properties, or requested member properties.</p>"
      operationId: Outline.getMemberInfo
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: app
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: cube
        required: true
        schema:
          type: string
      - description: <p>Unique member name (fully qualified name).</p>
        in: path
        name: memberUniqueName
        required: true
        schema:
          type: string
      - description: <p>Essbase connection name.</p>
        in: query
        name: connection
        schema:
          type: string
      - description: <p>Application name for connection.</p>
        in: query
        name: applicationNameForConnection
        schema:
          type: string
      - description: <p>Comma-separated list of member properties to fetch.</p>
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/MemberBean'
          description: <p><strong>OK</strong></p><p>Member information retrieved successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get member
            information.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Member Info
      tags:
      - Outline Viewer
  /outline/{app}/{cube}/ancestors/{memberUniqueName}:
    get:
      description: <p>Returns all ancestors of the requested member.</p>
      operationId: Outline.getAncestorsMemberInfo
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: app
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: cube
        required: true
        schema:
          type: string
      - description: <p>Unique member name (fully qualified name).</p>
        in: path
        name: memberUniqueName
        required: true
        schema:
          type: string
      - description: <p>Essbase connection name.</p>
        in: query
        name: connection
        schema:
          type: string
      - description: <p>Application name for connection.</p>
        in: query
        name: applicationNameForConnection
        schema:
          type: string
      - description: <p>Comma-separated list of member properties to fetch.</p>
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/MemberBean'
          description: <p><strong>OK</strong></p><p>List of ancestors returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get ancestors.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Member Ancestors
      tags:
      - Outline Viewer
  /outline/{app}/{cube}/settings/smartlist:
    get:
      description: <p>Returns all text lists associated with the database outline.</p>
      operationId: Outline.getAllSmartList
      parameters:
      - in: path
        name: app
        required: true
        schema:
          type: string
      - in: path
        name: cube
        required: true
        schema:
          type: string
      - in: query
        name: connection
        schema:
          type: string
      - in: query
        name: applicationNameForConnection
        schema:
          type: string
      - in: header
        name: accept
        schema:
          default: application/json
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      summary: Get Text Lists
      tags:
      - Outline Viewer
  /outline/{app}/{cube}/xml:
    post:
      description: "<p>Exports the outline to XML. If tree is true, then aliasTable\
        \ will be ignored. Tree mode exports only member names. If aliasTable is provided,\
        \ then only alias values of the members for the specified alias table will\
        \ be exported.</p>"
      operationId: Outline.getOutlineXML
      parameters:
      - description: Application name.
        in: path
        name: app
        required: true
        schema:
          type: string
      - description: Database name.
        in: path
        name: cube
        required: true
        schema:
          type: string
      - description: Essbase connection name.
        in: query
        name: connection
        schema:
          type: string
      - description: Application name for connection.
        in: query
        name: applicationNameForConnection
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ExportOptions'
        required: false
      responses:
        default:
          content: {}
          description: successful operation
      summary: Export Outline to XML
      tags:
      - Outline Viewer
      x-codegen-request-body-name: body
  /outline/{app}/{cube}:
    get:
      description: <p>Returns a list of dimensions when no parameters are provided.
        Returns a list of child members when <i>parent</i> or <i>parentUniqueName</i>
        parameters are provided. Returns search results when a search keyword parameter
        is used.</p>
      operationId: Outline.getMembers
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: app
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: cube
        required: true
        schema:
          type: string
      - description: <p>Essbase connection name.</p>
        in: query
        name: connection
        schema:
          type: string
      - description: <p>Application name for connection.</p>
        in: query
        name: applicationNameForConnection
        schema:
          type: string
      - description: <p>Keyword to search for member.</p>
        in: query
        name: keyword
        schema:
          type: string
      - description: <p>Match member name with keyword.</p>
        in: query
        name: matchWholeWord
        schema:
          default: false
          type: boolean
      - description: <p>Parent name.</p>
        in: query
        name: parent
        schema:
          type: string
      - description: <p>Parent unique name (fully qualified).</p>
        in: query
        name: parentUniqueName
        schema:
          type: string
      - description: <p>Parent ID.</p>
        in: query
        name: isMbrId
        schema:
          type: string
      - description: <p>Comma-separated list of member properties to fetch.</p>
        in: query
        name: fields
        schema:
          type: string
      - description: <p>Number of members to omit from the start of the result set.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: <p>Maximum number of members to return.</p>
        in: query
        name: limit
        schema:
          default: 50
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestCollectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/RestCollectionResponse'
          description: "<p><strong>OK</strong></p><p>Dimensions, children, or search\
            \ results returned successfully.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get members
            or search results.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: "Get Dimensions, Children, or Search"
      tags:
      - Outline Viewer
  /applications/{applicationName}/databases/{databaseName}/partitions/lock:
    post:
      description: "<p>Locks partition object. For non-federated partitions, both\
        \ the source and target partition objects are  locked.</p> <p>For federated\
        \ partitions, the partition type, Datasource name, measures dimension name,\
        \ and optional application level Datasource are required.</p><p>For transparent\
        \ or replicated partitions, the source server, source application, and source\
        \ database are required.</p>"
      operationId: Partition.lockPartition
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Partition type.</p>
        in: query
        name: type
        required: true
        schema:
          enum:
          - TRANSPARENT
          - REPLICATED
          - FEDERATED
          - LAZY_TRANSPARENT
          type: string
      - description: <p>Partition source server name.</p>
        in: query
        name: serverName
        schema:
          type: string
      - description: <p>Partition source application name.</p>
        in: query
        name: applicationName
        schema:
          type: string
      - description: <p>Partition source database name.</p>
        in: query
        name: databaseName
        schema:
          type: string
      - description: <p>Datasource name.</p>
        in: query
        name: datasourceName
        schema:
          type: string
      - description: <p>Measures dimension name.</p>
        in: query
        name: measuresDimensionName
        schema:
          type: string
      - description: <p>Specify whether the Datasource is defined at the application
          level.</p>
        in: query
        name: applicationLevelDatasource
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Partition locked successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to lock partition.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Lock Partition
      tags:
      - Partitions
  /applications/{applicationName}/databases/{databaseName}/partitions/unlock:
    post:
      description: "<p>Unlocks the partition object. For non-federated partitions,\
        \ both the source and target partition objects are  unlocked.</p> <p>For federated\
        \ partitions, the Datasource name, measures dimension name, and optional application\
        \ level Datasource are required.</p><p>For transparent and replicated partitions,\
        \ the source server, source application, and source database are required.</p>"
      operationId: Partition.unlockPartition
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Partition type.</p>
        in: query
        name: type
        required: true
        schema:
          enum:
          - TRANSPARENT
          - REPLICATED
          - FEDERATED
          - LAZY_TRANSPARENT
          type: string
      - description: <p>Partition source server name.</p>
        in: query
        name: serverName
        schema:
          type: string
      - description: <p>Partition source application name.</p>
        in: query
        name: applicationName
        schema:
          type: string
      - description: <p>Partition source database name.</p>
        in: query
        name: databaseName
        schema:
          type: string
      - description: <p>Datasource name.</p>
        in: query
        name: datasourceName
        schema:
          type: string
      - description: <p>Measures dimension name.</p>
        in: query
        name: measuresDimensionName
        schema:
          type: string
      - description: <p>Specify whether the Datasource is defined at the application
          level.</p>
        in: query
        name: applicationLevelDatasource
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Partition unlocked successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to unlock partition.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Unlock Partition
      tags:
      - Partitions
  /applications/{applicationName}/databases/{databaseName}/partitions/replicatedata:
    post:
      description: <p>Replicates data from source to target for a replicated partition.</p>
      operationId: Partition.replicateDataFromSource
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Partition source server name.</p>
        in: query
        name: serverName
        schema:
          type: string
      - description: <p>Partition source application name.</p>
        in: query
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Partition source database name.</p>
        in: query
        name: databaseName
        required: true
        schema:
          type: string
      - allowEmptyValue: true
        description: <p>Replicate data options.</p>
        in: query
        name: replicateOption
        schema:
          default: UPDATED_CELLS
          enum:
          - UPDATED_CELLS
          - ALL_CELLS
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Partition data replicated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to replicate partition
            data from the source. The partition type may be incorrect (must be a replicated
            partition).</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Replicate Data
      tags:
      - Partitions
  /applications/{applicationName}/databases/{databaseName}/partitions:
    delete:
      description: "<p>Deletes a partition based on the query parameters.</p> <ol><li>To\
        \ delete a transparent or replicated partition, the partition type, source\
        \ server, source application, and source database are required.</li><li>To\
        \ delete a federated partition, the partition type, Datasource name, and measures\
        \ dimension name are required.</li>"
      operationId: Partition.deletePartition
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Partition type.</p>
        in: query
        name: type
        required: true
        schema:
          enum:
          - TRANSPARENT
          - REPLICATED
          - FEDERATED
          - LAZY_TRANSPARENT
          type: string
      - description: <p>Partition source server name.</p>
        in: query
        name: serverName
        schema:
          type: string
      - description: <p>Partition source application name.</p>
        in: query
        name: applicationName
        schema:
          type: string
      - description: <p>Partition source database name.</p>
        in: query
        name: databaseName
        schema:
          type: string
      - description: <p>Datasource name.</p>
        in: query
        name: datasourceName
        schema:
          type: string
      - description: <p>Measures dimension name.</p>
        in: query
        name: measuresDimensionName
        schema:
          type: string
      - description: <p>Specify whether the Datasource is defined at the application
          level.</p>
        in: query
        name: applicationLevelDatasource
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Partition deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete partition.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Partition
      tags:
      - Partitions
    get:
      description: "<p>Returns a list of partitions defined on the database, or a\
        \ specific partition.</p> <ul><li>With no parameters: Returns all available\
        \ partitions.</li><li>With <i>type</i> parameter: Returns filtered partitions\
        \ list.</li><li>With partition type, source server, source application, and\
        \ source database parameters: Returns the specified partition details.</li></ul>"
      operationId: Partition.getPartitions
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - allowEmptyValue: true
        description: <p>Partition type. Multiple types can be added with a comma separator.</p>
        explode: true
        in: query
        name: type
        schema:
          items:
            enum:
            - TRANSPARENT
            - REPLICATED
            - FEDERATED
            - LAZY_TRANSPARENT
            type: string
          type: array
        style: form
      - description: <p>Number of partitions to omit from the start of the result
          set.</p>
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: <p>Maximum number of partitions to return.</p>
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: <p>Partition source server name.</p>
        in: query
        name: serverName
        schema:
          type: string
      - description: <p>Partition source application name.</p>
        in: query
        name: applicationName
        schema:
          type: string
      - description: <p>Partition source database name.</p>
        in: query
        name: databaseName
        schema:
          type: string
      - description: <p>Datasource name.</p>
        in: query
        name: datasourceName
        schema:
          type: string
      - description: <p>Measures dimension name.</p>
        in: query
        name: measuresDimensionName
        schema:
          type: string
      - description: <p>Specify whether the Datasource is defined at application level.</p>
        in: query
        name: applicationLevelDatasource
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PartitionList'
          description: <p><strong>OK</strong></p><p>Partition list or partition details
            returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get partition
            results.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Partitions
      tags:
      - Partitions
    patch:
      description: Updates an existing partition
      operationId: Partition.updatePartition
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Execute Analytic View federated partition in background</p>
        in: query
        name: executeInBackground
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartitionBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/PartitionBean'
        description: <p>Partition information.</p>
        required: true
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Partition updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update partition.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Partition
      tags:
      - Partitions
      x-codegen-request-body-name: body
    post:
      description: "<p>Creates a new partition. For partitions across instances, <i>connectionName</i>\
        \ must be provided.</p><p>If the connection is defined at the application\
        \ level, the property <i>applicationLevelConnection</i> must be specified\
        \ as true.</p><p>If the Datasource is defined at the application level, the\
        \ property <i>applicationLevelDatasource</i>  must be specified as true.</p><p>Examples\
        \ (with minimum required properties)</p><p><b>TRANSPARENT/REPLICATED</b> (change\
        \ type appropriately)</p><p><code>{'type':'TRANSPARENT','isNew':true,'sourceInfo':{'applicationName':'Sample_2','databaseName':'Basic'},'areas':[{'sourceArea':'Jan','targetArea':'Jan','slices':[]}],'mappings':[]}</code></p><p><b>FEDERATED</b>\
        \ </p><p><code>{'type':'FEDERATED','isNew':true,'sourceInfo':{'datasourceName':'federatedDatasourceExcel1','measuresDimensionName':'Measures','essbaseToColumnMap':{'arr':[{'essbaseName':'Caffeinated','columnName':''},{'essbaseName':'Ounces','columnName':''},{'essbaseName':'Pkg\
        \ Type','columnName':''},{'essbaseName':'Population','columnName':''},{'essbaseName':'Intro\
        \ Date','columnName':''}]}},'areas':[{'sourceArea':'Jan','targetArea':'Jan','slices':[]}]}</code></p>"
      operationId: Partition.createPartition
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Execute Analytic View federated partition in background</p>
        in: query
        name: executeInBackground
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartitionBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/PartitionBean'
        description: <p>Partition information.</p>
        required: true
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Partition created successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to create partition.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Partition
      tags:
      - Partitions
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/partitions/supportedfederatedtypes:
    get:
      description: <p>Returns supported partition types.</p>
      operationId: Partition.getSupportedFederatedTypes
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Returned supported partition types
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get supported
            types.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Supported Partition Types
      tags:
      - Partitions
  /applications/{applicationName}/databases/{databaseName}/partitions/cellcount:
    post:
      description: <p>Gets source and target cell counts for the partition area definitions.
        A partition area must have the same number of cells in the source and target.</p>
      operationId: Partition.getPartitionCellCount
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartitionBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/PartitionBean'
        description: <p>Partition information.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/PartitionBean'
          description: <p><strong>OK</strong></p><p>Partition area cell count returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get partition
            area cell count.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Partition Cell Count
      tags:
      - Partitions
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/partitions/validate:
    post:
      description: <p>Validates a new or existing partition.</p>
      operationId: Partition.validatePartition
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartitionBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/PartitionBean'
        description: <p>Partition information.</p>
        required: true
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Partition validated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to validate partition.</p>
        "422":
          content: {}
          description: <p><strong>Unprocessable Entity</strong></p><p>Partition validated
            with warnings.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Validate Partition
      tags:
      - Partitions
      x-codegen-request-body-name: body
  /preferences:
    get:
      description: <p>Gets user preferences. This operation returns links to various
        preferences available in this release.</p>
      operationId: Preferences.get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preference'
            application/xml:
              schema:
                $ref: '#/components/schemas/Preference'
          description: successful operation
      summary: Get User Preferences
      tags:
      - Preferences
  /properties/{propertyName}:
    delete:
      description: <p>Deletes a property from the server.</p>
      operationId: Properties.deleteProperty
      parameters:
      - description: <p>Property name.</p>
        in: path
        name: propertyName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
          description: successful operation
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
          description: <strong>OK</strong></p><p>Property is deleted successfully.
            Returns the property details and the links to get/edit the property.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to delete the\
            \ property. The JSON for the property may be incorrect, or the specified\
            \ property may have already been deleted.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Server Property
      tags:
      - Properties
    get:
      description: <p>Returns the named property from the server.</p>
      operationId: Properties.getProperty
      parameters:
      - description: <p>Property name.</p>
        in: path
        name: propertyName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
          description: "<p><strong>OK</strong></p><p>Property name and value returned\
            \ successfully, with links to get or edit the property.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the property.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Server Property
      tags:
      - Properties
    put:
      description: "<p>Updates the property in the server, and returns the updated\
        \ property.</p>"
      operationId: Properties.setProperty
      parameters:
      - description: <p>Property name.</p>
        in: path
        name: propertyName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyEntry'
          application/xml:
            schema:
              $ref: '#/components/schemas/PropertyEntry'
        description: <p>Property entry.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
          description: "<p><strong>OK</strong></p><p>Property updated successfully,\
            \ with links to get or edit the property.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to update the\
            \ property. The JSON for the property may be incorrect, or the specified\
            \ property name may not have been added to the server.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Server Property
      tags:
      - Properties
      x-codegen-request-body-name: body
  /properties:
    get:
      description: <p>Returns all the properties from the server.</p>
      operationId: Properties.getProperties
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PropertyList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/PropertyList'
                type: array
          description: "<p><strong>OK</strong></p><p>Properties returned successfully,\
            \ with links to get or edit the properties.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get properties.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Server Properties
      tags:
      - Properties
    post:
      description: <p>Adds the property in the server and returns the property.</p>
      operationId: Properties.addProperty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyEntry'
          application/xml:
            schema:
              $ref: '#/components/schemas/PropertyEntry'
        description: Property entry
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
          description: "<p><strong>OK</strong></p><p>Property added successfully,\
            \ with links to get or edit the property.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to add property.\
            \ The JSON may be incorrect, or the given property name may already be\
            \ added to the server.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Server Property
      tags:
      - Properties
      x-codegen-request-body-name: body
    put:
      description: "<p>Updates the properties in the server, and returns the list\
        \ of updated properties.</p>"
      operationId: Properties.setProperties
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PropertyEntry'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/PropertyEntry'
              type: array
        description: <p>List of property entries.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/PropertyEntry'
          description: "<p><strong>OK</strong></p><p>Properties updated successfully,\
            \ returning details and links to get or edit the properties.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to update properties.\
            \ The property JSON may be incorrect, or the given property names may\
            \ already be added to the server.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Property Values
      tags:
      - Properties
      x-codegen-request-body-name: body
  /groups/{groupId}/provisionReport/applications/{application}/scripts:
    get:
      description: "<p>Gets a provisioning report about scripts for the specified\
        \ application. The logged in user must have at least Database Manager role\
        \ for the application.</p> <p>If you are using EPM Shared Services security\
        \ mode, this operation is not available. Instead, manage users, groups, and\
        \ permissions in the Shared Services Console.</p>"
      operationId: GroupProvisioningReport.getScripts
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Group ID.</p>
        in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseProvisionReportItemList'
            application/xml:
              schema:
                $ref: '#/components/schemas/DatabaseProvisionReportItemList'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get provisioning
            report. The logged in user may not have the appropriate application role.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>The group with that ID
            does not exist.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Scripts Provisioning Report
      tags:
      - Group Provisioning Report
  /groups/{groupId}/provisionReport/applications:
    get:
      description: "<p>Gets a provisioning report for all applications. The logged\
        \ in user must have at least Database Manager role for the application. Application\
        \ roles are included in the report only if the logged in user has at least\
        \ Application Manager role for the application.</p> <p>If you are using EPM\
        \ Shared Services security mode, this operation is not available. Instead,\
        \ manage users, groups, and permissions in the Shared Services Console.</p>"
      operationId: GroupProvisioningReport.getReportForAllApplications
      parameters:
      - description: <p>Group ID.</p>
        in: path
        name: groupId
        required: true
        schema:
          type: string
      - description: <p>Use <code>all</code> to get provisioning information for all
          applications.</p>
        in: query
        name: expand
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationProvisionReportItemList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationProvisionReportItemList'
          description: <p><strong>OK</strong></p><p>Provisioning report for applications
            returned successfully.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>The group with that ID
            does not exist.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get All Applications Provisioning Report
      tags:
      - Group Provisioning Report
  /groups/{groupId}/provisionReport/applications/{application}:
    get:
      description: "<p>Gets provisioning report for the specified application. The\
        \ logged in user must have at least Database Manager role for the application.\
        \ Application roles are included in the report only if the logged in user\
        \ has at least Application Manager role for the application.</p> <p>If you\
        \ are using EPM Shared Services security mode, this operation is not available.\
        \ Instead, manage users, groups, and permissions in the Shared Services Console.</p>"
      operationId: GroupProvisioningReport.getReportForApplication
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Group ID.</p>
        in: path
        name: groupId
        required: true
        schema:
          type: string
      - description: "<p>Value can be <code>all</code> or <code>none</code>. Default\
          \ value is <code>none</code>. When value is <code>none</code>, only links\
          \ to roles, filters and scripts will be returned. When value is <code>all</code>,\
          \ provisioning information for roles, filters, and scripts are returned.</p>"
        in: query
        name: expand
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationProvisionReportItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationProvisionReportItem'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>The group with that ID
            does not exist.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Provisioning Report
      tags:
      - Group Provisioning Report
  /groups/{groupId}/provisionReport:
    get:
      description: "<p>Gets a full provisioning report for the service and all applications.\
        \ Service roles are included in the response only if the logged in user has\
        \ Service Administrator role. The logged in user must have at least Database\
        \ Manager role for applications to get application provisioning reports. Application\
        \ roles are included in the report only if the logged in user has at least\
        \ Application Manager role for the application.</p> <p>If you are using EPM\
        \ Shared Services security mode, this operation is not available. Instead,\
        \ manage users, groups, and permissions in the Shared Services Console.</p>"
      operationId: GroupProvisioningReport.getFullReport
      parameters:
      - description: <p>Group ID.</p>
        in: path
        name: groupId
        required: true
        schema:
          type: string
      - description: <p>Use <code>all</code> to get provisioning information for all
          applications.</p>
        in: query
        name: expand
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProvisionReport'
            application/xml:
              schema:
                $ref: '#/components/schemas/MainProvisionReport'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>The group with that ID
            does not exist.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Full Provisioning Report
      tags:
      - Group Provisioning Report
  /groups/{groupId}/provisionReport/applications/{application}/filters:
    get:
      description: "<p>Gets a provisioning report about filters for the specified\
        \ application. The logged in user must have at least Database Manager role\
        \ for the application.</p> <p>If you are using EPM Shared Services security\
        \ mode, this operation is not available. Instead, manage users, groups, and\
        \ permissions in the Shared Services Console.</p>"
      operationId: GroupProvisioningReport.getFilters
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Group ID.</p>
        in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseProvisionReportItemList'
            application/xml:
              schema:
                $ref: '#/components/schemas/DatabaseProvisionReportItemList'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get provisioning
            report. The logged in user may not have the appropriate application role.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>The group with that ID
            does not exist.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Filters Provisioning Report
      tags:
      - Group Provisioning Report
  /groups/{groupId}/provisionReport/applications/{application}/roles:
    get:
      description: "<p>Gets a roles provisioning report for the specified application.</p>\
        \ <p>If you are using EPM Shared Services security mode, this operation is\
        \ not available. Instead, manage users, groups, and permissions in the Shared\
        \ Services Console.</p>"
      operationId: GroupProvisioningReport.getRoles
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>Group ID.</p>
        in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionReportItemList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProvisionReportItemList'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get provisioning
            report. The logged in user may not have the appropriate application role.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>The group with that ID
            does not exist.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Roles Provisioning Report
      tags:
      - Group Provisioning Report
  /applications/{app}/permissions/{id}:
    delete:
      description: "<p>Deprovisions a single user or group on the specified application.</p>\
        \ <p>If you are using EPM Shared Services security mode, this operation is\
        \ not available. Instead, manage users, groups, and permissions in the Shared\
        \ Services Console.</p>"
      operationId: ApplicationRoleProvisioning.deprovision
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: app
        required: true
        schema:
          type: string
      - description: <p>User or group ID.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "<p>If true, ID is for a group. If false, ID is for a user. Default\
          \ is false (ID is considered to be for a user.)</p>"
        in: query
        name: group
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Deprovisioned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Deprovision User or Group
      tags:
      - Application Role Provisioning
    get:
      description: "<p>Gets provisioning information on the specified application.</p>\
        \ <p>If you are using EPM Shared Services security mode, this operation is\
        \ not available. Instead, manage users, groups, and permissions in the Shared\
        \ Services Console.</p>"
      operationId: ApplicationRoleProvisioning.getProvision
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: app
        required: true
        schema:
          type: string
      - description: <p>User or group ID.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "<p>If true, ID is for a group. If false, ID is for a user. Default\
          \ is false (ID is considered to be for a user.)</p>"
        in: query
        name: group
        schema:
          default: false
          type: boolean
      - description: "<p>If true, consider roles derived through parent groups. Default\
          \ is false.</p>"
        in: query
        name: inherited
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
          description: <p><strong>OK</strong></p><p>Provisioning information returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Provision
      tags:
      - Application Role Provisioning
    put:
      description: "<p>Provisions a single user or group on the specified application.</p>\
        \ <p>If you are using EPM Shared Services security mode, this operation is\
        \ not available. Instead, manage users, groups, and permissions in the Shared\
        \ Services Console.</p>"
      operationId: ApplicationRoleProvisioning.provision
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: app
        required: true
        schema:
          type: string
      - description: <p>User or group ID.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfo'
        description: <p>User or group provisioning information.</p>
        required: false
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Provisioned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "409":
          content: {}
          description: <p><strong>Conflict</strong></p><p>The user/group being provisioned
            is stale and it has been removed from identity store</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Provision User or Group
      tags:
      - Application Role Provisioning
      x-codegen-request-body-name: body
  /applications/{app}/permissions:
    get:
      description: "<p>Search for provisioning information on the specified application.</p>\
        \ <p>If you are using EPM Shared Services security mode, this operation is\
        \ not available. Instead, manage users, groups, and permissions in the Shared\
        \ Services Console.</p>"
      operationId: ApplicationRoleProvisioning.searchProvision
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: app
        required: true
        schema:
          type: string
      - description: "<p>User or group ID wildcard pattern. if specified, returns\
          \ users and groups matching the pattern. If not specified, returns all users\
          \ and groups having some role. Users or groups having no role are not returned.</p>"
        in: query
        name: id
        schema:
          default: '*'
          type: string
      - description: "<p>Input may include <code>all</code>, <code>none</code>, or\
          \ a comma-separated list of roles (for example, <code>app_manager</code>,\
          \ <code>db_manager</code>, <code>db_update</code>,or <code>db_access</code>).\
          \ Default value is <code>all</code>, so if this query parameter is not specified,\
          \ all users and groups having some role are returned. If <code>none</code>\
          \ is specified, only users and groups having no role will be returned. If\
          \ named roles are specified, then only users and groups having any of the\
          \ named roles are returned.</p>"
        in: query
        name: role
        schema:
          default: all
          type: string
      - description: "<p>Input may include <code>all</code>, <code>group</code>, or\
          \ <code>user</code>. Default value is <code>all</code>, so if this query\
          \ parameter is not specified, all users and groups are returned.</p>"
        in: query
        name: filter
        schema:
          default: all
          type: string
      - description: "<p>If true, consider roles derived through parent groups. Default\
          \ is false.</p>"
        in: query
        name: inherited
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfoList'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfoList'
          description: "<p><strong>OK</strong></p><p>Successfully returned provisioning\
            \ information for users or groups matching search criteria.  Response\
            \ type can be either JSON, XML, or CSV stream, depending on the Accept\
            \ header. If <code>Accept='application/json'</code> or <code>Accept='application/xml'</code>,\
            \ the search result will be returned in the response body. If <code>Accept='application/octet-stream'</code>,\
            \ the search result will be returned as a stream.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Search Application Provisioning
      tags:
      - Application Role Provisioning
    post:
      description: "<p>Imports provisioning information for multiple users or groups\
        \ on the specified application.</p> <p>If you are using EPM Shared Services\
        \ security mode, this operation is not available. Instead, manage users, groups,\
        \ and permissions in the Shared Services Console.</p>"
      operationId: ApplicationRoleProvisioning.importProvision
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: app
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Provisioning imported successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Import Provision
      tags:
      - Application Role Provisioning
  /permissions/{id}:
    delete:
      description: "<p>Deprovisions a single user or group from a service role.</p>\
        \ <p>If you are using EPM Shared Services security mode, this operation is\
        \ not available. Instead, manage users, groups, and permissions in the Shared\
        \ Services Console.</p>"
      operationId: ServiceRoleProvisioning.deprovision
      parameters:
      - description: <p>User or group ID.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "<p>If true, ID is for a group. If false, ID is for a user. Default\
          \ is false (ID is considered to be for a user.)</p>"
        in: query
        name: group
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>User or group deprovisioned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the required service administrator role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Deprovision
      tags:
      - Service Role Provisioning
    get:
      description: "<p>Gets service role provisioning information.</p> <p>If you are\
        \ using EPM Shared Services security mode, this operation is not available.\
        \ Instead, manage users, groups, and permissions in the Shared Services Console.</p>"
      operationId: ServiceRoleProvisioning.getProvision
      parameters:
      - description: <p>User or group ID.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "<p>If true, ID is for a group. If false, ID is for a user. Default\
          \ is false (ID is considered to be for a user.)</p>"
        in: query
        name: group
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
          description: <p><strong>OK</strong></p><p>Provisioning information returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the required service administrator role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Provision
      tags:
      - Service Role Provisioning
    put:
      description: "<p>Provisions a single user or group for a service role.</p> <p>If\
        \ you are using EPM Shared Services security mode, this operation is not available.\
        \ Instead, manage users, groups, and permissions in the Shared Services Console.</p>"
      operationId: ServiceRoleProvisioning.provision
      parameters:
      - description: <p>User or group ID.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfo'
        description: <p>User or group provisioning information.</p>
        required: false
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>User or group provisioned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the required service administrator role.</p>
        "409":
          content: {}
          description: <p><strong>Conflict</strong></p><p>The user/group being provisioned
            is stale and it has been removed from identity store</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Provision User or Group
      tags:
      - Service Role Provisioning
      x-codegen-request-body-name: body
  /permissions:
    get:
      description: "<p>Search for provisioning information.</p> <p>If you are using\
        \ EPM Shared Services security mode, this operation is not available. Instead,\
        \ manage users, groups, and permissions in the Shared Services Console.</p>"
      operationId: ServiceRoleProvisioning.searchProvision
      parameters:
      - description: "<p>User or group ID wildcard pattern. if specified, returns\
          \ users and groups matching the pattern, if not specified, returns all the\
          \ users and groups having some role. Users or groups having no role are\
          \ not returned.</p>"
        in: query
        name: id
        schema:
          default: '*'
          type: string
      - description: "<p>Input may include <code>all</code>, <code>none</code>, or\
          \ a comma-separated list of roles (for example, <code>service_administrator</code>,\
          \ <code>power_user</code>, or <code>user</code>). Default value is <code>all</code>,\
          \ so if this query parameter is not specified, all users and groups having\
          \ some role are returned. If <code>none</code> is specified, only users\
          \ and groups having no role will be returned. If named roles are specified,\
          \ then only users and groups having any of the named roles are returned.</p>"
        in: query
        name: role
        schema:
          default: all
          type: string
      - description: "<p>Search filter. Values available: <code>all/group/user</code>.\
          \ Default value is <code>all</code>, so if this query parameter is not specified,\
          \ then all users and groups having some role will be returned.</p>"
        in: query
        name: filter
        schema:
          default: all
          type: string
      - description: <p>This is used to get the list of users/groups having no service
          roles in paginated manner. Page number starts with 0</p>
        in: query
        name: page
        schema:
          default: -1
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfoList'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfoList'
          description: <p><strong>OK</strong></p><p>User and group provisioning results
            returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the required service administrator role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Search Provision
      tags:
      - Service Role Provisioning
  /users/{userId}/provisionReport/applications/{application}/scripts:
    get:
      description: "<p>Get a scripts provisioning report for the specified application.\
        \ The logged in user must have at least Database Manager role for the application\
        \ to get a provisioning report.</p> <p>If you are using EPM Shared Services\
        \ security mode, this operation is not available. Instead, manage users, groups,\
        \ and permissions in the Shared Services Console.</p>"
      operationId: UserProvisioningReport.getScripts
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>User ID.</p>
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseProvisionReportItemList'
            application/xml:
              schema:
                $ref: '#/components/schemas/DatabaseProvisionReportItemList'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the application service role.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>User not found.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Scripts Provisioning Report
      tags:
      - User Provisioning Report
  /users/{userId}/provisionReport/applications:
    get:
      description: "<p>Gets a provisioning report for all the applications. The logged\
        \ in user must have at least Database Manager role for the application. Application\
        \ roles are included in the report only if the logged in user has at least\
        \ Application Manager role for the application.</p> <p>If you are using EPM\
        \ Shared Services security mode, this operation is not available. Instead,\
        \ manage users, groups, and permissions in the Shared Services Console.</p>"
      operationId: UserProvisioningReport.getReportForAllApplications
      parameters:
      - description: <p>User ID.</p>
        in: path
        name: userId
        required: true
        schema:
          type: string
      - description: "<p>Value can be <code>all</code> or <code>none</code>. Default\
          \ value is <code>none</code>, meaning only links to applications are returned.\
          \ If <code>all</code> is specified, provisioning information for all applications\
          \ is returned.</p>"
        in: query
        name: expand
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationProvisionReportItemList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationProvisionReportItemList'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>User not found.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Applications Provisioning Reports
      tags:
      - User Provisioning Report
  /users/{userId}/provisionReport/applications/{application}:
    get:
      description: "<p>Gets a provisioning report for the specified application. The\
        \ logged in user must have at least Database Manager role for the application.\
        \ Application roles are included in the report only if the logged in user\
        \ has at least Application Manager role for the application.</p> <p>If you\
        \ are using EPM Shared Services security mode, this operation is not available.\
        \ Instead, manage users, groups, and permissions in the Shared Services Console.</p>"
      operationId: UserProvisioningReport.getReportForApplication
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>User ID.</p>
        in: path
        name: userId
        required: true
        schema:
          type: string
      - description: "<p>Value can be <code>all</code> or <code>none</code>. Default\
          \ value is <code>none</code>, meaning only links to roles, filters, and\
          \ scripts are returned. If <code>all</code> is specified, provisioning information\
          \ for all roles, filters, and scripts in the application is returned.</p>"
        in: query
        name: expand
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationProvisionReportItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationProvisionReportItem'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>User not found.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Provisioning Report
      tags:
      - User Provisioning Report
  /users/{userId}/provisionReport:
    get:
      description: "<p>Gets a full provisioning report. Service roles are included\
        \ in the response only if the logged in user has Service Administrator role.\
        \ The logged in user must have at least Database Manager role for an application\
        \ to get its provisioning report. Application roles are included in the report\
        \ only if the logged in user has at least Application Manager role for the\
        \ application.</p> <p>If you are using EPM Shared Services security mode,\
        \ this operation is not available. Instead, manage users, groups, and permissions\
        \ in the Shared Services Console.</p>"
      operationId: UserProvisioningReport.getFullReport
      parameters:
      - description: <p>User ID.</p>
        in: path
        name: userId
        required: true
        schema:
          type: string
      - description: "<p>Value can be <code>all</code> or <code>none</code>. Default\
          \ value is <code>none</code>, meaning only links to applications are returned.\
          \ If <code>all</code> is specified, provisioning information for all applications\
          \ is returned.</p>"
        in: query
        name: expand
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProvisionReport'
            application/xml:
              schema:
                $ref: '#/components/schemas/MainProvisionReport'
          description: <p><strong>OK</strong></p><p>Full provisioning report including
            service and all the applications.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>User not found.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Full Provisioning Report
      tags:
      - User Provisioning Report
  /users/{userId}/provisionReport/applications/{application}/filters:
    get:
      description: "<p>Gets a filters provisioning report for the specified application.\
        \ The logged in user must have at least Database Manager role for the application.</p>\
        \ <p>If you are using EPM Shared Services security mode, this operation is\
        \ not available. Instead, manage users, groups, and permissions in the Shared\
        \ Services Console.</p>"
      operationId: UserProvisioningReport.getFilters
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>User ID.</p>
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseProvisionReportItemList'
            application/xml:
              schema:
                $ref: '#/components/schemas/DatabaseProvisionReportItemList'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>User not found.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Filters Provisioning Report
      tags:
      - User Provisioning Report
  /users/{userId}/provisionReport/applications/{application}/roles:
    get:
      description: "<p>Get a roles provisioning report for the specified application.\
        \ The logged in user must have at least Application Manager role for the application.</p>\
        \ <p>If you are using EPM Shared Services security mode, this operation is\
        \ not available. Instead, manage users, groups, and permissions in the Shared\
        \ Services Console.</p>"
      operationId: UserProvisioningReport.getRoles
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: application
        required: true
        schema:
          type: string
      - description: <p>User ID.</p>
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionReportItemList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ProvisionReportItemList'
          description: <p><strong>OK</strong></p><p>Provisioning report returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>User not found.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Roles Provisioning Report
      tags:
      - User Provisioning Report
  /utils/rules/actions/import:
    post:
      description: <p>Imports a rules file.</p>
      operationId: Rules.importRule
      parameters:
      - description: "<p>Optional overwrite specification. Default value is false,\
          \ meaning if the rules file already exists, an error is returned. When set\
          \ to true, if the rule file already exists, it will be overwritten.</p>"
        in: query
        name: overwrite
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilePathDetail'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilePathDetail'
        description: "<p>File path information: source and destination catalog paths.</p>"
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Rules file imported successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to import rules
            file. The file path information may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Import Rules
      tags:
      - Rules
      x-codegen-request-body-name: body
  /utils/rules/preview:
    post:
      description: "<p>Applies a rules file to a two-dimensional array of data, and\
        \ returns a previewed data load as two-dimensional array.</p>"
      operationId: Rules.getPreviewData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RulePreviewInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/RulePreviewInput'
        description: <p>Rules file details and input two dimensional array.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulePreviewOutput'
            application/xml:
              schema:
                $ref: '#/components/schemas/RulePreviewOutput'
          description: <p><strong>OK</strong></p><p>Data through rules file was previewed
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to preview this
            data through this rules file.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Preview Rules Data
      tags:
      - Rules
      x-codegen-request-body-name: body
  /utils/rules/verifyRule:
    post:
      description: <p>Verifies a rules file.</p>
      operationId: Rules.verifyRule
      parameters:
      - description: <p>Application name.</p>
        in: query
        name: application
        schema:
          type: string
      - description: <p>Database name.</p>
        in: query
        name: database
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rules'
          application/xml:
            schema:
              $ref: '#/components/schemas/Rules'
        description: <p>Rules file details.</p>
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Rules file verified successfully.</p>
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleErrorList'
            application/xml:
              schema:
                $ref: '#/components/schemas/RuleErrorList'
          description: <p><strong>Bad Request</strong></p><p>Rules verification failed.
            Response contains a list of verification errors.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Verify Rules
      tags:
      - Rules
      x-codegen-request-body-name: body
  /utils/rules:
    get:
      description: <p>Gets rules file from file catalog path.</p>
      operationId: Rules.get
      parameters:
      - description: <p>Catalog path.</p>
        in: query
        name: path
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rules'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rules'
          description: "<p><strong>OK</strong></p><p>Successfully returned rules file.\
            \  Response type can be either JSON, XML, or JSON stream, depending on\
            \ the Accept header. If <code>Accept='application/json'</code> or <code>Accept='application/xml'</code>,\
            \ the rules are returned in the response body. If <code>Accept='application/octet-stream'</code>,\
            \ the rules are returned as a JSON stream.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to import rules
            file. The catalog path information may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Rules
      tags:
      - Rules
    post:
      description: <p>Creates a rules file.</p>
      operationId: Rules.save
      parameters:
      - description: <p>Optional file catalog path.</p>
        in: query
        name: path
        schema:
          type: string
      - description: "<p>Optional overwrite specification. Default value is false,\
          \ meaning if the rules file already exists, an error is returned. When set\
          \ to true, if the rule file already exists, it will be overwritten.</p>"
        in: query
        name: overwrite
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rules'
          application/xml:
            schema:
              $ref: '#/components/schemas/Rules'
        description: <p>Rules file details.</p>
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Rules file created successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to create rules
            file. The catalog path information may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Rules
      tags:
      - Rules
      x-codegen-request-body-name: body
  /utils/rules/verify:
    post:
      description: <p>Verifies a rules file.</p>
      operationId: Rules.verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rules'
          application/xml:
            schema:
              $ref: '#/components/schemas/Rules'
        description: <p>Rules file details.</p>
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Rules file verified successfully.</p>
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringCollectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StringCollectionResponse'
          description: <p><strong>Bad Request</strong></p><p>Rules verification failed.
            Response contains a list of verification errors.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Verify Rules
      tags:
      - Rules
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/sandbox/members:
    post:
      description: <p>Adds members to an existing sandbox dimension.</p>
      operationId: SandboxDimension.addMembers
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxRequestPayload'
          application/xml:
            schema:
              $ref: '#/components/schemas/SandboxRequestPayload'
        description: <p>Size of sandbox dimension members. Default is 100 if body
          is empty.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxDetail'
            application/xml:
              schema:
                $ref: '#/components/schemas/SandboxDetail'
          description: <p><strong>OK</strong></p><p>Sandbox members added successfully;
            includes links to sandbox details.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to add sandbox\
            \ members. The application or database name may be incorrect, or scenarios\
            \ may not be enabled.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add Sandbox Members
      tags:
      - Sandbox Dimension
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/sandbox:
    delete:
      description: <p>Deletes Sandbox and CellProperties dimensions from this cube.
        This action disables scenario management for the cube.</p>
      operationId: SandboxDimension.delete
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Sandbox deleted successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to delete sandbox.\
            \ The application or database name may be incorrect, or the logged in\
            \ user may not have the appropriate application role.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Sandbox
      tags:
      - Sandbox Dimension
    get:
      description: <p>Returns details about sandbox members.</p>
      operationId: SandboxDimension.get
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxDetail'
            application/xml:
              schema:
                $ref: '#/components/schemas/SandboxDetail'
          description: "<p><strong>OK</strong></p><p>Sandbox details returned successfully;\
            \ includes total sandbox members, available members, and assigned member.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to get sandbox\
            \ details. The application or database name may be incorrect, or the logged\
            \ in user may not have the appropriate application role.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Sandbox Details
      tags:
      - Sandbox Dimension
    post:
      description: "<p>Creates Sandbox and CellProperties dimensions, while at the\
        \ same time enabling scenario management for this cube.</p>"
      operationId: SandboxDimension.create
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxRequestPayload'
          application/xml:
            schema:
              $ref: '#/components/schemas/SandboxRequestPayload'
        description: <p>Maximum count of sandbox dimension members. Default is 100
          if body is empty.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxDetail'
            application/xml:
              schema:
                $ref: '#/components/schemas/SandboxDetail'
          description: <p><strong>OK</strong></p><p>Sandbox created successfully;
            includes links to sandbox details.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed create sandbox.\
            \ The application or database name may be incorrect, or the logged in\
            \ user may not have the appropriate application role.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Sandbox
      tags:
      - Sandbox Dimension
      x-codegen-request-body-name: body
  /scenarios/{scenarioId}/scripts:
    get:
      description: <p>Gets scenario scripts.</p>
      operationId: Scenarios.getScripts
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScriptListResponse'
          description: <p><strong>OK</strong></p><p>Scenario scripts returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get scenario
            scripts. The scenario ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Scenario Scripts
      tags:
      - Scenarios
  /scenarios/{scenarioId}/approvers:
    get:
      description: <p>Gets scenario approvers.</p>
      operationId: Scenarios.getApprovers
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApproverListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApproverListResponse'
          description: <p><strong>OK</strong></p><p>List of scenario approvers returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get scenario
            approvers. The scenario ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Approvers
      tags:
      - Scenarios
    post:
      description: "<p>Adds a scenario approver. Approvers are optional, and must\
        \ have Database Access or higher role. They monitor and approve or reject\
        \ scenarios. If a scenario has multiple approvers, each one must approve before\
        \ it can be submitted.</p>"
      operationId: Scenarios.addApprover
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproverBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/ApproverBean'
        description: <p>Approver details.</p>
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Scenario approver added successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to add approver.\
            \ The scenario ID may be invalid, or the scenario may already have been\
            \ submitted for approval.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add Approver
      tags:
      - Scenarios
      x-codegen-request-body-name: body
  /scenarios/{scenarioId}/scripts/{scriptType}:
    put:
      description: <p>Updates scenario using script of specified type.</p>
      operationId: Scenarios.updateScript
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      - description: "<p>Script type. Valid values are: <code>refresh</code> to revert\
          \ to base, <code>apply</code> to commit to base, and <code>clear</code>\
          \ to set to #Missing.</p>"
        in: path
        name: scriptType
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScriptBean'
        description: <p>Script details.</p>
        required: false
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Scenario updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update scenario
            with script. The scenario ID or script type may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Scenario with Script
      tags:
      - Scenarios
      x-codegen-request-body-name: body
  /scenarios/{scenarioId}/comments/{commentId}:
    delete:
      description: <p>Deletes a scenario comment by ID.</p>
      operationId: Scenarios.deleteComment
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      - description: <p>Comment ID.</p>
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>Scenario comment deleted
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete scenario
            comment. The scenario ID or comment ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Comment
      tags:
      - Scenarios
    get:
      description: <p>Gets a scenario comment by ID.</p>
      operationId: Scenarios.getComment
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      - description: <p>Comment ID.</p>
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/CommentBean'
          description: <p><strong>OK</strong></p><p>Scenario comment returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get scenario
            comment. The scenario ID or comment ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Comment
      tags:
      - Scenarios
    put:
      description: <p>Updates a scenario comment by ID.</p>
      operationId: Scenarios.updateComment
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      - description: <p>Comment ID.</p>
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/CommentBean'
        description: <p>Comment details.</p>
        required: false
      responses:
        "204":
          content: {}
          description: <p>Scenario comment successfully updated.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update scenario
            comment. The scenario ID or comment ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Comment
      tags:
      - Scenarios
      x-codegen-request-body-name: body
  /scenarios/{id}:
    delete:
      description: <p>Deletes a scenario by ID.</p>
      operationId: Scenarios.delete
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>Scenario deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete scenario.
            The scenario ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: <p>Deletes a scenario by ID.</p>
      tags:
      - Scenarios
    get:
      description: <p>Gets a scenario by ID.</p>
      operationId: Scenarios.get
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: "<p>Value can be <code>all</code> or <code>none</code>. Default\
          \ value is <code>none</code>, meaning only links are returned. If <code>all</code>\
          \ is specified, then approvers, participants and scripts are included in\
          \ the response.</p>"
        in: query
        name: expand
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
          description: <p><strong>OK</strong></p><p>Scenario details returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get scenario
            details. The scenario ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Scenario
      tags:
      - Scenarios
    patch:
      description: "<p>Updates basic information about a scenario, including description,\
        \ due date, priority, and owner.</p>"
      operationId: Scenarios.patch
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioEditBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScenarioEditBean'
        description: <p>Scenario details. Set only those fields which need to be updated.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
          description: <p><strong>OK</strong></p><p>Scenario updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            scenario. Required fields such as scenario name or due date may be empty.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Scenario Partially
      tags:
      - Scenarios
      x-codegen-request-body-name: body
    post:
      description: "<p>Performs the specified scenario workflow action. Common actions\
        \ are <code>submit</code> to submit a scenario for approval, <code>approve</code>\
        \ to approve a scenario, <code>reject</code> to reject it, and <code>apply</code>\
        \ to overwrite the base data with the scenario data. Additional actions include\
        \ <code>copy</code>, <code>refresh</code>, and <code>clear</code>.</p>"
      operationId: Scenarios.performAction
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: "<p>Valid values are <code>submit</code>, <code>approve</code>,\
          \ <code>reject</code>, <code>apply</code>, <code>copy</code>, <code>refresh</code>,\
          \ and <code>clear</code>.</p>"
        in: query
        name: action
        schema:
          type: string
      - description: "<p>Optional overwrite parameter, applicable only when <i>action</i>\
          \ is <code>refresh</code>. If <code>true</code>, when the base and scenario\
          \ data have different values, the base value overwrites the scenario changes.\
          \ Default is <code>false</code>.</p>"
        in: query
        name: overwrite
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioActionPayload'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScenarioActionPayload'
        description: <p>Action parameters. Copy options are applicable only in case
          of copy. Comment is applicable only for workflow actions.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
          description: <p><strong>OK</strong></p><p>Scenario action performed successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to perform scenario
            action. The scenario ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Perform Scenario Action
      tags:
      - Scenarios
      x-codegen-request-body-name: body
    put:
      description: <p>Updates full details about a scenario.</p>
      operationId: Scenarios.update
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScenarioBean'
        description: <p>Scenario details.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
          description: <p><strong>OK</strong></p><p>Scenario updated successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to update the\
            \ scenario. Required fields such as scenario name or due date may be empty,\
            \ or the scenario may already have been submitted for approval.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Scenario Fully
      tags:
      - Scenarios
      x-codegen-request-body-name: body
  /scenarios:
    get:
      description: "<p>Get scenarios matching search criteria. Response includes links\
        \ to all basic scenario attributes, excluding approvers, participants, comments,\
        \ and scripts.</p>"
      operationId: Scenarios.getScenarios
      parameters:
      - description: <p>Scenario name wildcard pattern.</p>
        in: query
        name: filter
        schema:
          type: string
      - description: "<p>Optional user role by which to filter the scenario list.\
          \ Value can be <code>owner</code>, <code>participant</code>, or <code>approver</code>.\
          \ If role is specified as <code>approver</code>, this API returns all scenarios\
          \ for which the logged in user is the approver. By default, all scenarios\
          \ are returned for which the logged in user is either an owner, a participant,\
          \ or an approver.</p>"
        in: query
        name: role
        schema:
          type: string
      - description: "<p>If true, returns all scenarios past the due date. Default\
          \ is false, meaning all scenarios are returned.</p>"
        in: query
        name: overdue
        schema:
          type: boolean
      - description: <p>Scenario state.</p>
        in: query
        name: state
        schema:
          type: string
      - description: <p>Application name.</p>
        in: query
        name: application
        schema:
          type: string
      - description: <p>Database name.</p>
        in: query
        name: database
        schema:
          type: string
      - description: "<p>Scenario is in submitted state, and approval is pending from\
          \ logged in user.</p>"
        in: query
        name: approvalPending
        schema:
          default: false
          type: boolean
      - description: <p>Number of scenarios to omit from the start of the result set.
          Default is 0.</p>
        in: query
        name: offset
        schema:
          default: 0
          format: int64
          type: integer
      - description: <p>Maximum number of scenarios to return. Default is 50.</p>
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: "<p>Order-by field and order for the result set. The value of\
          \ this parameter must follow the format of <code><i>fieldName</i>:asc|desc</code>.\
          \ For example: <code>name:asc</code>. Default value is <code>createdTime:desc</code>,\
          \ meaning that scenarios are listed with the most recently created scenarios\
          \ first.</p>"
        in: query
        name: orderBy
        schema:
          default: createdTime:desc
          type: string
      - description: "<p>If <code>true</code>, response contains only the count of\
          \ scenarios, and not actual scenarios.</p>"
        in: query
        name: count
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioCollectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScenarioCollectionResponse'
          description: <p><strong>OK</strong></p><p>Scenario list and details returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get scenarios.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Scenarios
      tags:
      - Scenarios
    post:
      description: <p>Creates a new scenario. A scenario is a private work area in
        which you can model different assumptions within the data without affecting
        the existing data.</p>
      operationId: Scenarios.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScenarioBean'
        description: <p>Scenario details.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScenarioBean'
          description: <p><strong>OK</strong></p><p>Scenario created successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to create the
            scenario. Required fields such as scenario name or due date may be empty.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Scenario
      tags:
      - Scenarios
      x-codegen-request-body-name: body
  /scenarios/{scenarioId}/approvers/{userId}:
    delete:
      description: <p>Deletes a scenario approver.</p>
      operationId: Scenarios.deleteApprover
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      - description: <p>Approver ID.</p>
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>Scenario approver deleted
            successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to delete scenario\
            \ approver. The scenario ID may be invalid, or the scenario may already\
            \ have been submitted for approval.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Approver
      tags:
      - Scenarios
  /scenarios/{scenarioId}/participants/{userId}:
    delete:
      description: <p>Deletes a scenario participant.</p>
      operationId: Scenarios.deleteParticipant
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      - description: <p>Participant ID.</p>
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>Scenario participant deleted
            successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to delete scenario\
            \ participant. The scenario ID may be invalid, or the scenario may already\
            \ have been submitted for approval.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Participant
      tags:
      - Scenarios
  /scenarios/databases:
    get:
      description: <p>Gets information about all the databases registered for scenario
        management.</p>
      operationId: Scenarios.getRegisteredCubes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioCubesList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScenarioCubesList'
          description: <p><strong>OK</strong></p><p>Scenario-enabled cubes returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get scenario-enabled
            cubes.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Scenario-Enabled Cubes
      tags:
      - Scenarios
  /scenarios/{id}/changes:
    get:
      description: "<p>Gets scenario data changes. If you are the owner, approver,\
        \ or participant for a given scenario, you can compare scenario and base models.</p>"
      operationId: Scenarios.getChangeData
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioChangesListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScenarioChangesListResponse'
          description: p><strong>OK</strong></p><p>Scenario changes returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get scenario
            changes. The scenario ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Changes
      tags:
      - Scenarios
  /scenarios/{scenarioId}/comments:
    get:
      description: <p>Gets comments for the specified scenario ID.</p>
      operationId: Scenarios.getComments
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CommentListResponse'
          description: <p><strong>OK</strong></p><p>Scenario comments returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get scenario
            comments. The scenario ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Comments
      tags:
      - Scenarios
    post:
      description: <p>Adds a comment to the specified scenario ID.</p>
      operationId: Scenarios.addComment
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/CommentBean'
        description: <p>Comment details.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/CommentBean'
          description: <p><strong>OK</strong></p><p>Scenario comment added successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to add a comment.
            The scenario ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add Comment
      tags:
      - Scenarios
      x-codegen-request-body-name: body
  /scenarios/{scenarioId}/participants:
    get:
      description: <p>Gets scenario participants by scenario ID.</p>
      operationId: Scenarios.getParticipants
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ParticipantListResponse'
          description: <p><strong>OK</strong></p><p>Scenario participants returned
            successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get scenario
            participants. The scenario ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Participants
      tags:
      - Scenarios
    post:
      description: <p>Adds a scenario participant to the specified scenario ID.</p>
      operationId: Scenarios.addParticipant
      parameters:
      - description: <p>Scenario ID.</p>
        in: path
        name: scenarioId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/ParticipantBean'
        description: <p>Participant details.</p>
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Scenario participant added successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to add participant.\
            \ The scenario ID may be invalid, or the scenario may already have been\
            \ submitted for approval.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add Participant
      tags:
      - Scenarios
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/scripts/{scriptName}/permissions:
    get:
      description: <p>Retrieves permissions for the specified script. Applicable only
        for calculation scripts.</p>
      operationId: Scripts.getScriptPermissions
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Script name.</p>
        in: path
        name: scriptName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserGroupProvisionInfoList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/UserGroupProvisionInfoList'
                type: array
          description: <strong>OK</strong></p><p>Script permissions retrieved successfully.
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to get permissions\
            \ for the script. The application, database, or script name may be incorrect.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Essbase Script Permissions
      tags:
      - Scripts
    post:
      description: <p>Adds permissions to the specified script for the specified user
        or group. Applicable only for calculation scripts.</p>
      operationId: Scripts.addScriptPermission
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Script name.</p>
        in: path
        name: scriptName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserGroupProvisionInfo'
        description: <p>User or group details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserGroupProvisionInfo'
          description: <strong>OK</strong></p><p>Script permission added successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to add permissions\
            \ for the script. The application, database, or script name may be incorrect;\
            \ the user or group ID may be incorrect; or the specified user or group\
            \ may not have sufficient privileges.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add Essbase Script Permissions
      tags:
      - Scripts
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/scripts/{scriptName}/permissions/{userGroupId}:
    delete:
      description: <p>Removes permissions from the specified script for the specified
        user or group. Applicable only for calculation scripts.</p>
      operationId: Scripts.removeScriptPermission
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Script name.</p>
        in: path
        name: scriptName
        required: true
        schema:
          type: string
      - description: <p>Id of the user or group.</p>
        in: path
        name: userGroupId
        required: true
        schema:
          type: string
      - description: <p>True if the userGroupId refers to a group.</p>
        in: query
        name: group
        required: true
        schema:
          default: false
          type: boolean
      responses:
        "204":
          content: {}
          description: <strong>No Content</strong></p><p>Script permission removed
            successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to delete permissions\
            \ for the script. The application, database, or script name may be incorrect,\
            \ or the user or group ID may be incorrect.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Remove Essbase Script Permissions
      tags:
      - Scripts
  /applications/{applicationName}/databases/{databaseName}/scripts:
    get:
      description: <p>Returns all the scripts from the specified application and database.</p>
      operationId: Scripts.listScripts
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Type of script file.</p>
        in: query
        name: file
        schema:
          default: calc
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScriptList'
          description: "<p><strong>OK</strong></p><p>Scripts retrieved successfully,\
            \ including script details and links to get, edit, or delete the script\
            \ and to get its contents.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the scripts.
            The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Essbase Scripts
      tags:
      - Scripts
    post:
      description: <p>Creates the script in the specified application and database
        and returns the created script.</p>
      operationId: Scripts.createScript
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Type of script file.</p>
        in: query
        name: file
        schema:
          default: calc
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Script'
        description: <p>Script details.</p>
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Script'
          description: "<p><strong>OK</strong></p><p>Script created successfully,\
            \ including script details and links to get, edit, or delete the script\
            \ and to get its contents.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to create the\
            \ script. The application or database name may be incorrect, the JSON\
            \ for the script may be incorrect, or the specified script name may already\
            \ exist.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Essbase Script
      tags:
      - Scripts
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/scripts/{scriptName}:
    delete:
      description: <p>Deletes the specified script in the specified application and
        database.</p>
      operationId: Scripts.deleteScript
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Script name.</p>
        in: path
        name: scriptName
        required: true
        schema:
          type: string
      - description: <p>Type of script file.</p>
        in: query
        name: file
        schema:
          default: calc
          type: string
      responses:
        "204":
          content: {}
          description: <strong>No Content</strong></p><p>Script deleted successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to delete the\
            \ script. The application, database, or script name may be incorrect.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Essbase Script
      tags:
      - Scripts
    get:
      description: <p>Returns the named script from the specified application and
        database.</p>
      operationId: Scripts.getScript
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Script name.</p>
        in: path
        name: scriptName
        required: true
        schema:
          type: string
      - description: <p>Type of script file.</p>
        in: query
        name: file
        schema:
          default: calc
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Script'
            application/xml:
              schema:
                $ref: '#/components/schemas/Script'
          description: "<p><strong>OK</strong></p><p>Script returned successfully,\
            \ including links get, edit, or delete the script and to get its contents.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to get the script.\
            \ The application, database, or script name may be incorrect.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Essbase Script
      tags:
      - Scripts
    put:
      description: <p>Updates the specified script in the specified application and
        database and returns the updated script.</p>
      operationId: Scripts.editScript
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Script name.</p>
        in: path
        name: scriptName
        required: true
        schema:
          type: string
      - description: <p>Type of script file.</p>
        in: query
        name: file
        schema:
          default: calc
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Script'
        description: <p>Script details.</p>
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Script'
          description: "<strong>OK</strong></p><p>Script updated successfully. Includes\
            \ script details and links get, edit, or delete the script and to get\
            \ its contents.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to update the\
            \ script. The application or database name may be incorrect, the JSON\
            \ for the script may be incorrect, or the specified script name may already\
            \ exist.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Essbase Script
      tags:
      - Scripts
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/scripts/{scriptName}/content:
    get:
      description: <p>Returns the contents of the specified script from the specified
        application and database.</p>
      operationId: Scripts.getScriptContent
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Script name.</p>
        in: path
        name: scriptName
        required: true
        schema:
          type: string
      - description: <p>Type of script file.</p>
        in: query
        name: file
        schema:
          default: calc
          type: string
      responses:
        "200":
          content: {}
          description: <strong>OK</strong></p><p>Script content retrieved successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to get script\
            \ contents. The application, database, or script name may be incorrect.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Essbase Script Contents
      tags:
      - Scripts
  /applications/{applicationName}/databases/{databaseName}/scripts/scriptops/validate:
    post:
      description: <p>Validates the specified script. Applicable only for calculation
        scripts.</p>
      operationId: Scripts.validateScript
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>File.</p>
        in: query
        name: file
        schema:
          default: calc
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Script'
          application/xml:
            schema:
              $ref: '#/components/schemas/Script'
        description: <p>Script details.</p>
        required: true
      responses:
        "200":
          content: {}
          description: <strong>OK</strong></p><p>Script validated successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to validate the\
            \ script. The application or database name may be incorrect, or the contents\
            \ may be incomplete for the specified script name.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Validate Essbase Script
      tags:
      - Scripts
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/scripts/scriptops/copy:
    post:
      description: <p>Copies the script in the specified application and database
        and returns the created script. Applicable only for calculation scripts.</p>
      operationId: Scripts.copyScript
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptCopy'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScriptCopy'
        description: <p>Script copy details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Script'
            application/xml:
              schema:
                $ref: '#/components/schemas/Script'
          description: "<p><strong>OK</strong></p><p>Script copied successfully, including\
            \ script details and links to get, edit, or delete the script and to get\
            \ its contents.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to copy the script.\
            \ The application, database, or script name may be incorrect, or the specified\
            \ script name may already exist.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Copy Essbase Script
      tags:
      - Scripts
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/scripts/scriptops/rename:
    post:
      description: <p>Renames the script in the specified application and database
        and returns the created script. Applicable only for calculation scripts.</p>
      operationId: Scripts.renameScript
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptCopy'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScriptCopy'
        description: <p>Script rename details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Script'
            application/xml:
              schema:
                $ref: '#/components/schemas/Script'
          description: "<p><strong>OK</strong></p><p>Script renamed successfully.\
            \ Includes script details and links to get, edit, or delete the script\
            \ and to get its contents.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to rename the\
            \ script. The application, database, or script name may be incorrect,\
            \ or the specified script name may already exist.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Rename Essbase Script
      tags:
      - Scripts
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/scripts/{scriptName}/rtsv:
    get:
      description: <p>Returns the runtime substitution variables used in the specified
        script name.</p>
      operationId: Scripts.getRTSVsForScripts
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Script name.</p>
        in: path
        name: scriptName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RTSVList'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/RTSVList'
                type: array
          description: <p><strong>OK</strong></p><p>List of runtime substitution variables
            returned successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to get variables.\
            \ The application, database, or script name may be incorrect.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Essbase Script RTSVs
      tags:
      - Scripts
  /sessions:
    delete:
      description: "<p>Deletes all the sessions currently active, or kills all the\
        \ requests currently processing.</p>"
      operationId: Sessions.deleteAllActiveSessions
      parameters:
      - description: <p>Application name.</p>
        in: query
        name: application
        schema:
          type: string
      - description: <p>Database name.</p>
        in: query
        name: database
        schema:
          type: string
      - description: <p>User ID.</p>
        in: query
        name: userId
        schema:
          type: string
      - description: "<p>Disconnect value (Boolean). If false, the request is killed.\
          \ Otherwise, the session is logged off.</p>"
        in: query
        name: disconnect
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content: {}
          description: "<p>1. Deletes all the sessions for the parameter 'application',\
            \ 'database' and 'userid' provided. If no parameters are specified, deletes\
            \ all active sessions.</p><p>2. Cannot disconnect user. Essbase Error(1051041):\
            \ Insufficient privilege for this operation.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Essbase or platform security
            exception.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete All Sessions
      tags:
      - Sessions
    get:
      description: <p>Returns a list of session currently active for a user or request.</p>
      operationId: Sessions.getAllActiveSessions
      parameters:
      - description: <p>Application name.</p>
        in: query
        name: application
        schema:
          type: string
      - description: <p>Database name.</p>
        in: query
        name: database
        schema:
          type: string
      - description: "<p>User ID for whom to return the active sessions. If not provided,\
          \ all the sesions are retrieved.</p>"
        in: query
        name: userId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SessionAttributes'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/SessionAttributes'
                type: array
          description: <strong>OK</strong></p><p>Session details returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Essbase or platform security
            exception.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: List Sessions
      tags:
      - Sessions
  /sessions/{sessionId}:
    delete:
      description: <p>Deletes a particular session or kills a particular request using
        the session id.</p>
      operationId: Sessions.deleteSessionWithId
      parameters:
      - description: "<p>Disconnection value. Default is false, meaning kill the request.\
          \ If true, disconnect the user session.</p>"
        in: query
        name: disconnect
        schema:
          default: false
          type: boolean
      - description: <p>sessionId of the session to be disconnected or request killed.</p>
        in: path
        name: sessionId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Session or request terminated
            successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><ol><li>Essbase or platform\
            \ security exception.</li><li>If the sessionId is incorrect, <code>Error:\
            \ No session with specified login id.</code></li><li>Cannot disconnect\
            \ user. Essbase Error(1051041): Insufficient privilege for this operation</li>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Session By ID
      tags:
      - Sessions
  /applications/{applicationName}/databases/{databaseName}/dataload/{streamId}:
    delete:
      description: <p>Ends streaming data load.</p>
      operationId: Dataload.end
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Stream ID.</p>
        in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProcessEndResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StreamProcessEndResponse'
          description: <p><strong>OK</strong></p><p>Data load ended successfully;
            includes status.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to end data load.
            The stream ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: End Data Load
      tags:
      - Streaming Data Load
    post:
      description: <p>Pushes data for data load. Data can be pushed in chunks in CSV
        format by repeating this request multiple times.</p>
      operationId: Dataload.streamData
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Stream ID.</p>
        in: path
        name: streamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
          text/csv:
            schema:
              type: string
        description: <p>CSV data.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
          description: <p><strong>OK</strong></p><p>Data pushed successfully; includes
            links to push more data and end data load if  <code>links=true</code>
            parameter is passed.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to push data.
            The stream ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Push Data
      tags:
      - Streaming Data Load
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/dataload:
    post:
      description: <p>Starts streaming data load.</p>
      operationId: Dataload.start
      parameters:
      - description: Application name
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataLoadStartPayload'
          application/xml:
            schema:
              $ref: '#/components/schemas/DataLoadStartPayload'
        description: <p>Data load options such as rule file name and delimiter.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
          description: "<p><strong>OK</strong></p><p>Data load started successfully;\
            \ includes unique stream id which can be passed to subsequent requests.\
            \ If <code>links=true</code> parameter is passed, also includes links\
            \ to push more data and end the data load.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Start Data Load
      tags:
      - Streaming Data Load
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/dimbuild/{streamId}/{ruleFileName}:
    delete:
      description: <p>Ends a dimension build with a rules file.</p>
      operationId: DimensionBuild.endDimBuild
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Stream ID.</p>
        in: path
        name: streamId
        required: true
        schema:
          type: string
      - description: <p>Rules file name.</p>
        in: path
        name: ruleFileName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProcessEndResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StreamProcessEndResponse'
          description: "<p><strong>OK</strong></p><p>Dimension build ended successfully.\
            \ Returns status. If <code>links=true</code> parameter is passed, also\
            \ includes links to restructure.</p>"
        "400":
          content: {}
          description: "Validation failed. For example, specified stream id is invalid\
            \ or dimension build is not started"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: End Dimension Build
      tags:
      - Streaming Dimension Build
    post:
      description: <p>Starts a dimension build with a rule file.</p>
      operationId: DimensionBuild.startDimBuild
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Stream ID.</p>
        in: path
        name: streamId
        required: true
        schema:
          type: string
      - description: <p>Rule File Name.</p>
        in: path
        name: ruleFileName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
          description: "<p><strong>OK</strong></p><p>Dimension build started successfully.\
            \ If <code>links=true</code> parameter is passed, also includes links\
            \ to push more data.</p>"
        "400":
          content: {}
          description: "Validation failed. For example, specified stream id or rule\
            \ file name is invalid"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Start Dimension Build</p>
      tags:
      - Streaming Dimension Build
  /applications/{applicationName}/databases/{databaseName}/dimbuild/{streamId}:
    delete:
      description: <p>Ends an incremental dimension build and triggers a restructuring
        of the cube.</p>
      operationId: DimensionBuild.end
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Stream ID.</p>
        in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProcessEndResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StreamProcessEndResponse'
          description: <p><strong>OK</strong></p><p>Dimension build ended successfully;
            includes status.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to end dimension
            build. The stream ID may be invalid.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: End Streaming Dimension Build
      tags:
      - Streaming Dimension Build
    post:
      description: <p>Pushes data for streaming dimension build.</p>
      operationId: DimensionBuild.streamDimBuildData
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Stream ID.</p>
        in: path
        name: streamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
          text/csv:
            schema:
              type: string
        description: <p>CSV data.</p>
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
          description: <p><strong>OK</strong></p><p>Data pushed successfully; includes
            links to push more data and end dimension build if <code>links=true</code>
            parameter is passed.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to push data.\
            \ The stream ID may be invalid, or the dimension build may not have started.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Push Data
      tags:
      - Streaming Dimension Build
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/dimbuild:
    post:
      description: <p>Starts an incremental dimension build.</p>
      operationId: DimensionBuild.start
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DimBuildStartPayload'
          application/xml:
            schema:
              $ref: '#/components/schemas/DimBuildStartPayload'
        description: "<p>Dimension build attributes, such as the restructure option.\
          \ If empty, the default value for restructure option is  <code>PRESERVE_ALL_DATA</code>."
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StreamProcessStartResponse'
          description: "<p><strong>OK</strong></p><p>Dimension build started successfully;\
            \ includes unique stream id which can be passed to subsequent requests.\
            \ If <code>links=true</code> parameter is passed, also includes links\
            \ to start dimension build with rules file.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate application role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Start Streaming Dimension Build
      tags:
      - Streaming Dimension Build
      x-codegen-request-body-name: body
  /users/actions/delete:
    post:
      description: "<p>Deletes the users specified in the text file. Requires service\
        \ administrator role.</p> <p>If you are using EPM Shared Services security\
        \ mode, this operation is not available. Instead, manage users, groups, and\
        \ permissions in the Shared Services Console.</p>"
      operationId: Users.deleteUsers
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/InputStream'
          description: <p><strong>OK</strong></p><p>Users deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Validation failed. The
            logged in user may not have the appropriate service role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Users
      tags:
      - Users
  /users/{id}:
    delete:
      description: "<p>Deletes a user.</p> <p>If you are using EPM Shared Services\
        \ security mode, this operation is not available. Instead, manage users, groups,\
        \ and permissions in the Shared Services Console.</p>"
      operationId: Users.delete
      parameters:
      - description: <p>ID of user.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>User deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate service role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete User
      tags:
      - Users
    get:
      description: "<p>Gets details for a specified user ID.</p> <p>If you are using\
        \ EPM Shared Services security mode, this operation is not available. Instead,\
        \ manage users, groups, and permissions in the Shared Services Console.</p>"
      operationId: Users.get
      parameters:
      - description: <p>ID of user.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBean'
          description: <p><strong>OK</strong></p><p>User details returned successfully.</p>
        "404":
          content: {}
          description: <p><strong>Not Found</strong></p><p>User not found.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate service role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get User
      tags:
      - Users
    put:
      description: "<p>Updates a user.</p> <p>If you are using EPM Shared Services\
        \ security mode, this operation is not available. Instead, manage users, groups,\
        \ and permissions in the Shared Services Console.</p>"
      operationId: Users.PUT
      parameters:
      - description: <p>ID of user.</p>
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserBean'
        description: Updated user
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBean'
          description: <p><strong>OK</strong></p><p>User updated successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate service role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update User
      tags:
      - Users
      x-codegen-request-body-name: body
  /users:
    get:
      description: "<p>Get a list of users based on search results, or export users\
        \ as CSV file.</p> <p>If you are using EPM Shared Services security mode,\
        \ this operation is not available. Instead, manage users, groups, and permissions\
        \ in the Shared Services Console.</p>"
      operationId: Users.search
      parameters:
      - description: <p>User ID wildcard pattern. Filter by name of user if header
          <code>Accept='application/json'</code> or <code>Accept='application/xml'</code>.</p>
        in: query
        name: filter
        schema:
          type: string
      - description: "<p>Maximum number of users to return, if header <code>Accept='application/json'</code>\
          \ or <code>Accept='application/xml'</code>. Default of <code>-1</code> =\
          \ no maximum.</p>"
        in: query
        name: limit
        schema:
          default: -1
          format: int32
          type: integer
      - description: "<p>Value can be <code>all</code> or <code>none</code>. Default\
          \ value is <code>all</code>, meaning service role and groups are returned\
          \ for each user. If <code>none</code> is specified, service role and groups\
          \ are not returned.</p>"
        in: query
        name: expand
        schema:
          default: all
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
            application/xml:
              schema:
                $ref: '#/components/schemas/Users'
          description: "<p><strong>OK</strong></p><p>User results returned successfully.\
            \ Response type can be either JSON, XML, or CSV stream, depending on the\
            \ Accept header. If <code>Accept='application/json'</code> or <code>Accept='application/xml'</code>,\
            \ the users are returned in the response body. If <code>Accept='application/octet-stream'</code>,\
            \ the users are returned as a JSON stream.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate service role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Search or Export Users
      tags:
      - Users
    post:
      description: "<p>Add or import user(s).</p> <p>If you are using EPM Shared Services\
        \ security mode, this operation is not available. Instead, manage users, groups,\
        \ and permissions in the Shared Services Console.</p>"
      operationId: Users.add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBean'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserBean'
        description: "<p>Users details to create, if <code>Accept='application/json'</code>\
          \ or <code>Accept='application/xml'</code>. Or, CSV file from which to import\
          \ users, if <code>Accept='application/octet-stream'</code>.</p>"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBean'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBean'
          description: "<p><strong>OK</strong></p><p>User added successfully. If <code>Accept='application/json'</code>\
            \ or <code>Accept='application/xml'</code>, the users are returned in\
            \ the response body. If <code>Accept='application/octet-stream'</code>,\
            \ the added users are imported but not included in the response body.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>The logged in user may
            not have the appropriate service role.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Add or Import User(s)
      tags:
      - Users
      x-codegen-request-body-name: body
  /variables:
    get:
      description: <p>Returns all the substitution variables from the server.</p>
      operationId: Variables.listServerVariables
      parameters:
      - in: query
        name: all
        schema:
          default: "false"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableList'
            application/xml:
              schema:
                $ref: '#/components/schemas/VariableList'
          description: "<p><strong>OK</strong></p><p>Variables retrieved successfully.\
            \ Includes variable details and links to get, edit, or delete the variables.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get variables.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Server Variables
      tags:
      - Server Variables
    post:
      description: <p>Creates a server substitution variable and returns details about
        it.</p>
      operationId: Variables.createServerVariable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
          application/xml:
            schema:
              $ref: '#/components/schemas/Variable'
        description: <p>Variable details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
            application/xml:
              schema:
                $ref: '#/components/schemas/Variable'
          description: "<p><strong>OK</strong></p><p>Variable created successfully.\
            \ Includes variable details and links to get, edit, or delete the variable.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to create variable.\
            \ The JSON may be incorrect, or a  variable with that name may already\
            \ exist.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Server Variable
      tags:
      - Server Variables
      x-codegen-request-body-name: body
  /variables/{variableName}:
    delete:
      description: <p>Deletes the given substitution variable from the server.</p>
      operationId: Variables.deleteServerVariable
      parameters:
      - description: <p>Variable name.</p>
        in: path
        name: variableName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>OK</strong></p><p>Variable deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete the
            variable. The variable name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Server Variable
      tags:
      - Server Variables
    get:
      description: <p>Returns substitution variable details from the server.</p>
      operationId: Variables.getServerVariable
      parameters:
      - description: <p>Variable name.</p>
        in: path
        name: variableName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
            application/xml:
              schema:
                $ref: '#/components/schemas/Variable'
          description: "<p><strong>OK</strong></p><p>Variable retrieved successfully.\
            \ Includes variable details and links to get, edit, or delete the variable.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the variable.
            The variable name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Server Variable
      tags:
      - Server Variables
    put:
      description: "<p>Updates a substitution variable on the server, and returns\
        \ the updated variable.</p>"
      operationId: Variables.editServerVariable
      parameters:
      - description: <p>Variable name.</p>
        in: path
        name: variableName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
          application/xml:
            schema:
              $ref: '#/components/schemas/Variable'
        description: <p>Variable details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
            application/xml:
              schema:
                $ref: '#/components/schemas/Variable'
          description: "<p><strong>OK</strong></p><p>Variable updated successfully.\
            \ Includes variable details and links to get, edit, or delete the variable.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to update the
            variable. The variable name may be incorrect.</p>
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Server Variable
      tags:
      - Server Variables
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/variables:
    get:
      description: <p>Returns all substitution variables from the specified application
        and database.</p>
      operationId: Variables.listVariables
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableList'
            application/xml:
              schema:
                $ref: '#/components/schemas/VariableList'
          description: "<p><strong>OK</strong></p><p>Variables returned successfully,\
            \ with links to get, edit, or delete.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the variables.
            The application or database name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Database Variables
      tags:
      - Variables
    post:
      description: "<p>Creates a substitution variable in the specified application\
        \ and database, and returns the created variable.</p>"
      operationId: Variables.createVariable
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
          application/xml:
            schema:
              $ref: '#/components/schemas/Variable'
        description: <p>Variable details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
            application/xml:
              schema:
                $ref: '#/components/schemas/Variable'
          description: "<p><strong>OK</strong></p><p>Variable created successfully,\
            \ with links to get, edit, or delete.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to create the\
            \ variable. The application or database name may be incorrect, the JSON\
            \ for the variable may be incorrect, or the specified variable name may\
            \ already exist.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Database Variable
      tags:
      - Variables
      x-codegen-request-body-name: body
  /applications/{applicationName}/databases/{databaseName}/variables/{variableName}:
    delete:
      description: <p>Deletes the specified substitution variable from the specified
        application and database.</p>
      operationId: Variables.deleteVariable
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Variable name.</p>
        in: path
        name: variableName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>Variable deleted successfully.</p>
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to delete the\
            \ variable. The application, database, or variable name may be incorrect.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Database Variable
      tags:
      - Variables
    get:
      description: <p>Returns the substitution variable details from the specified
        application and database.</p>
      operationId: Variables.getVariable
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Variable name.</p>
        in: path
        name: variableName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
            application/xml:
              schema:
                $ref: '#/components/schemas/Variable'
          description: "<p><strong>OK</strong></p><p>Variable returned successfully,\
            \ with links to get, edit, or delete.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to get the variable.\
            \ The application, database, or variable name may be incorrect.</p>"
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Database Variable
      tags:
      - Variables
    put:
      description: "<p>Updates a substitution variable in the specified application\
        \ and database, and returns the updated variable.</p>"
      operationId: Variables.editVariable
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Database name.</p>
        in: path
        name: databaseName
        required: true
        schema:
          type: string
      - description: <p>Variable name.</p>
        in: path
        name: variableName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
          application/xml:
            schema:
              $ref: '#/components/schemas/Variable'
        description: <p>Variable details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
            application/xml:
              schema:
                $ref: '#/components/schemas/Variable'
          description: "<p><strong>OK</strong></p><p>Variable updated successfully,\
            \ with links to get, edit, or delete.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to update the\
            \ variable. The application or database name may be incorrect, the JSON\
            \ for the variable may be incorrect, or the specified variable name may\
            \ not exist.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Database Variable
      tags:
      - Variables
      x-codegen-request-body-name: body
  /applications/{applicationName}/variables:
    get:
      description: <p>Returns all substitution variables from the specified application.</p>
      operationId: Variables.listAppVariables
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableList'
            application/xml:
              schema:
                $ref: '#/components/schemas/VariableList'
          description: "<p><strong>OK</strong></p><p>Variables returned successfully,\
            \ with links to get, edit, or delete.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the variables.
            The application name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Variables
      tags:
      - Variables
    post:
      description: "<p>Creates a substitution variable in the specified application,\
        \ and returns the created variable.</p>"
      operationId: Variables.createAppVariable
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
          application/xml:
            schema:
              $ref: '#/components/schemas/Variable'
        description: <p>Variable details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
            application/xml:
              schema:
                $ref: '#/components/schemas/Variable'
          description: "<p><strong>OK</strong></p><p>Variable created successfully,\
            \ with links to get, edit, or delete.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to create the\
            \ variable. The application or database name may be incorrect, the JSON\
            \ for the variable may be incorrect, or the specified variable name may\
            \ already exist.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Create Application Variable
      tags:
      - Variables
      x-codegen-request-body-name: body
  /applications/{applicationName}/variables/{variableName}:
    delete:
      description: <p>Deletes the specified substitution variable from the specified
        application.</p>
      operationId: Variables.deleteAppVariable
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Variable name.</p>
        in: path
        name: variableName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: <p><strong>No Content</strong></p><p>Variable deleted successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to delete the
            variable. The application name or variable name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Delete Application Variable
      tags:
      - Variables
    get:
      description: <p>Returns substitution variable details from the specified application.</p>
      operationId: Variables.getAppVariable
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Variable name.</p>
        in: path
        name: variableName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
            application/xml:
              schema:
                $ref: '#/components/schemas/Variable'
          description: "<p><strong>OK</strong></p><p>Variable returned successfully,\
            \ with links to get, edit, or delete.</p>"
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get the variable.
            The application name or variable name may be incorrect.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Get Application Variable
      tags:
      - Variables
    put:
      description: "<p>Updates the substitution variable in the specified application,\
        \ and returns the updated variable.</p>"
      operationId: Variables.editAppVariable
      parameters:
      - description: <p>Application name.</p>
        in: path
        name: applicationName
        required: true
        schema:
          type: string
      - description: <p>Variable name.</p>
        in: path
        name: variableName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
          application/xml:
            schema:
              $ref: '#/components/schemas/Variable'
        description: <p>Variable details.</p>
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
            application/xml:
              schema:
                $ref: '#/components/schemas/Variable'
          description: "<p><strong>OK</strong></p><p>Variable updated successfully,\
            \ with links to get, edit, or delete.</p>"
        "400":
          content: {}
          description: "<p><strong>Bad Request</strong></p><p>Failed to update the\
            \ variable. The application name may be incorrect, the JSON for the variable\
            \ may be incorrect, or the specified variable name may not exist.</p>"
        "415":
          content: {}
          description: <p><strong>Not Acceptable</strong></p><p>The media type isn't
            supported or wasn't specified.</p>
        "500":
          content: {}
          description: <p>Internal Server Error.</p>
      summary: Update Application Variable
      tags:
      - Variables
      x-codegen-request-body-name: body
  /settings/maintenance:
    get:
      description: "<p>Gets the platform service maintenance settings, such as disk\
        \ space and memory.</p>"
      operationId: PSMSettings.getSystemMaintenanceLimits
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Limits'
            application/xml:
              schema:
                $ref: '#/components/schemas/Limits'
          description: <p><strong>OK</strong></p><p>Saved platform service resource
            settings returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get resource
            settings.</p>
      summary: Get Maintenance Settings
      tags:
      - Platform Service Settings
  /settings/database:
    get:
      description: <p>Gets the platform service database settings.</p>
      operationId: PSMSettings.getDatabaseSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Limits'
            application/xml:
              schema:
                $ref: '#/components/schemas/Limits'
          description: <p><strong>OK</strong></p><p>Platform service database settings
            returned successfully.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to get resource
            settings.</p>
      summary: Get Database Settings
      tags:
      - Platform Service Settings
    put:
      description: <p>Saves the platform service database settings.</p>
      operationId: PSMSettings.setDatabaseSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseSettings'
          application/xml:
            schema:
              $ref: '#/components/schemas/DatabaseSettings'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Limits'
            application/xml:
              schema:
                $ref: '#/components/schemas/Limits'
          description: <p><strong>Bad Request</strong></p><p>Failed to save settings.</p>
        "400":
          content: {}
          description: <p><strong>Bad Request</strong></p><p>Failed to save settings.</p>
      summary: Store Database Settings
      tags:
      - Platform Service Settings
      x-codegen-request-body-name: body
  /settings/odlLogSettings:
    get:
      description: <p>Get the Oracle Diagnostic Log (ODL) settings.</p>
      operationId: getodllogsettings
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Successful operation.</p>
      summary: Get Diagnostic Log Settings
      tags:
      - Platform Service Settings
    put:
      description: <p>Set the Oracle Diagnostic Log (ODL) settings.</p>
      operationId: setodllogsettings
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ODLLogHandlerSetting'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/ODLLogHandlerSetting'
              type: array
        required: false
      responses:
        "200":
          content: {}
          description: <p><strong>OK</strong></p><p>Successful operation.</p>
      summary: Set Diagnostic Log Settings
      tags:
      - Platform Service Settings
      x-codegen-request-body-name: body
  /settings:
    get:
      description: <p>Returns the platform service settings. This API returns the
        links to various settings available in this release.</p>
      operationId: PSMSettings.getAll
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
            application/xml:
              schema:
                $ref: '#/components/schemas/Settings'
          description: successful operation
      summary: Get Available Platform Service Settings
      tags:
      - Platform Service Settings
components:
  schemas:
    RoleBean:
      example:
        defaultRole: defaultRole
        roles:
        - roles
        - roles
        type: type
      properties:
        type:
          type: string
        roles:
          items:
            type: string
          type: array
        defaultRole:
          type: string
      type: object
    Roles:
      example:
        totalResults: 0
        offset: 5
        hasMore: true
        count: 6
        limit: 1
        items:
        - defaultRole: defaultRole
          roles:
          - roles
          - roles
          type: type
        - defaultRole: defaultRole
          roles:
          - roles
          - roles
          type: type
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/RoleBean'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    FilePathDetail:
      example:
        from: from
        to: to
      properties:
        to:
          type: string
        from:
          type: string
      type: object
    CreateFilePartUploadResponse:
      example:
        bucket: bucket
        uploadId: uploadId
        namespace: namespace
        timeCreated: timeCreated
        object: object
      properties:
        uploadId:
          type: string
        namespace:
          type: string
        object:
          type: string
        timeCreated:
          type: string
        bucket:
          type: string
      type: object
    Response:
      example:
        opRequestId: opRequestId
        opcContentMd5: opcContentMd5
        etag: etag
      properties:
        opRequestId:
          type: string
        opcContentMd5:
          type: string
        etag:
          type: string
      type: object
    UploadFilePartResponse:
      example:
        response:
          opRequestId: opRequestId
          opcContentMd5: opcContentMd5
          etag: etag
        partNum: 0
      properties:
        partNum:
          format: int32
          type: integer
        response:
          $ref: '#/components/schemas/Response'
      type: object
    CommitFilePartUploadResponse:
      example:
        opcRequestId: opcRequestId
        versionId: versionId
        opcMultipartMd5: opcMultipartMd5
        etag: etag
        lastModified: 2000-01-23T04:56:07.000+00:00
      properties:
        opcRequestId:
          type: string
        opcMultipartMd5:
          type: string
        versionId:
          type: string
        etag:
          type: string
        lastModified:
          format: date-time
          type: string
      type: object
    CollectionResponse:
      properties:
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        items:
          items:
            properties: {}
            type: object
          type: array
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    ZipFileDetails:
      example:
        path: path
      properties:
        path:
          type: string
      type: object
    GenericEntity:
      example:
        type:
          typeName: typeName
        entity: "{}"
      properties:
        type:
          $ref: '#/components/schemas/Type'
        entity:
          properties: {}
          type: object
      type: object
    Type:
      example:
        typeName: typeName
      properties:
        typeName:
          type: string
      type: object
    ApplicationConfigEntry:
      example:
        configured: true
        description: description
        syntax: syntax
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        value: value
        key: key
        example: example
      properties:
        key:
          type: string
        description:
          type: string
        syntax:
          type: string
        example:
          type: string
        value:
          type: string
        configured:
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    ApplicationConfigList:
      example:
        totalResults: 0
        offset: 5
        hasMore: true
        count: 6
        limit: 1
        items:
        - configured: true
          description: description
          syntax: syntax
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          value: value
          key: key
          example: example
        - configured: true
          description: description
          syntax: syntax
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          value: value
          key: key
          example: example
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/ApplicationConfigEntry'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    Link:
      example:
        method: method
        rel: rel
        href: href
        type: type
      properties:
        rel:
          type: string
        href:
          type: string
        method:
          type: string
        type:
          type: string
      type: object
    Connection:
      example:
        schema: schema
        repoWallet: true
        catalog: true
        description: description
        type: FILE
        walletPath: walletPath
        token: token
        sid: sid
        path: path
        password: password
        minPoolSize: 6
        encrypted: true
        port: 0
        subtype: TEMPLATE
        service: service
        datasource: datasource
        name: name
        host: host
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        user: user
        maxPoolSize: 1
        dbURL: dbURL
        dbDriver: dbDriver
      properties:
        description:
          type: string
        name:
          type: string
        type:
          enum:
          - FILE
          - DB
          - ESSBASE
          - BI
          type: string
        path:
          type: string
        catalog:
          type: boolean
        host:
          type: string
        port:
          format: int32
          type: integer
        user:
          type: string
        password:
          type: string
        encrypted:
          type: boolean
        token:
          type: string
        sid:
          type: string
        service:
          type: string
        schema:
          type: string
        dbURL:
          type: string
        dbDriver:
          type: string
        datasource:
          type: string
        subtype:
          enum:
          - TEMPLATE
          - EXCELFILE
          - DB
          - DELIMITEDFILE
          - FIXEDWIDTHFILE
          - BI
          - ESSBASE
          - JDBC
          - SPARK
          - MS_SQL
          - MYSQL
          - DB2
          - ORACLE
          - FILE
          type: string
        walletPath:
          type: string
        repoWallet:
          type: boolean
        minPoolSize:
          format: int32
          type: integer
        maxPoolSize:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - name
      - type
      type: object
      xml:
        name: connection
    WalletLocation:
      example:
        path: path
      properties:
        path:
          type: string
      type: object
    ConnectionsList:
      example:
        totalResults: 0
        offset: 1
        limit: 6
        hasMore: true
        count: 5
        items:
        - schema: schema
          repoWallet: true
          catalog: true
          description: description
          type: FILE
          walletPath: walletPath
          token: token
          sid: sid
          path: path
          password: password
          minPoolSize: 6
          encrypted: true
          port: 0
          subtype: TEMPLATE
          service: service
          datasource: datasource
          name: name
          host: host
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          user: user
          maxPoolSize: 1
          dbURL: dbURL
          dbDriver: dbDriver
        - schema: schema
          repoWallet: true
          catalog: true
          description: description
          type: FILE
          walletPath: walletPath
          token: token
          sid: sid
          path: path
          password: password
          minPoolSize: 6
          encrypted: true
          port: 0
          subtype: TEMPLATE
          service: service
          datasource: datasource
          name: name
          host: host
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          user: user
          maxPoolSize: 1
          dbURL: dbURL
          dbDriver: dbDriver
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/Connection'
          type: array
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        hasMore:
          type: boolean
        count:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    ColumnType:
      example:
        system: true
        nullable: true
        name: name
        format: format
        index: 0
        type: STRING
      properties:
        name:
          type: string
          xml:
            attribute: true
        type:
          enum:
          - STRING
          - DOUBLE
          - DATE
          - TIMESTAMP
          - LONG
          type: string
          xml:
            attribute: true
        nullable:
          type: boolean
          xml:
            attribute: true
        format:
          type: string
          xml:
            attribute: true
        index:
          format: int32
          type: integer
          xml:
            attribute: true
        system:
          type: boolean
          xml:
            attribute: true
      type: object
    ColumnsType:
      example:
        column:
        - system: true
          nullable: true
          name: name
          format: format
          index: 0
          type: STRING
        - system: true
          nullable: true
          name: name
          format: format
          index: 0
          type: STRING
      properties:
        column:
          items:
            $ref: '#/components/schemas/ColumnType'
          type: array
          xml:
            name: Column
      required:
      - column
      type: object
    Datasource:
      example:
        headers:
        - name: name
          cell: cell
        - name: name
          cell: cell
        delimeter: delimeter
        startRow: 6
        headerRow: 5
        columns:
          column:
          - system: true
            nullable: true
            name: name
            format: format
            index: 0
            type: STRING
          - system: true
            nullable: true
            name: name
            format: format
            index: 0
            type: STRING
        query: query
        description: description
        endRow: 1
        widths:
        - 5
        - 5
        type: TEMPLATE
        customDelimiter: customDelimiter
        application: application
        queryParameters:
        - useSubVariable: true
          subVariableName: subVariableName
          defaultValue: defaultValue
          name: name
          index: 2
          type: STRING
          required: true
        - useSubVariable: true
          subVariableName: subVariableName
          defaultValue: defaultValue
          name: name
          index: 2
          type: STRING
          required: true
        name: name
        connection: connection
        sheet: sheet
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        cube: cube
        skipHiddenRows: true
        ignoreErrorRecords: true
      properties:
        type:
          enum:
          - TEMPLATE
          - EXCELFILE
          - DB
          - DELIMITEDFILE
          - FIXEDWIDTHFILE
          - BI
          - ESSBASE
          - JDBC
          - SPARK
          - MS_SQL
          - MYSQL
          - DB2
          - ORACLE
          - FILE
          type: string
        connection:
          type: string
        description:
          type: string
        columns:
          $ref: '#/components/schemas/ColumnsType'
        name:
          type: string
        ignoreErrorRecords:
          type: boolean
        delimeter:
          type: string
          xml:
            name: delimiter
        customDelimiter:
          type: string
        query:
          type: string
        application:
          type: string
        cube:
          type: string
        startRow:
          format: int64
          type: integer
        endRow:
          format: int64
          type: integer
        headerRow:
          format: int64
          type: integer
        sheet:
          type: string
        skipHiddenRows:
          type: boolean
        widths:
          items:
            format: int64
            type: integer
            xml:
              name: widths
          type: array
        queryParameters:
          items:
            $ref: '#/components/schemas/QueryParamsInfo'
          type: array
        headers:
          items:
            $ref: '#/components/schemas/HeaderType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - columns
      - connection
      - type
      type: object
      xml:
        name: datasource
    DatasourcesList:
      example:
        totalResults: 7
        offset: 3
        limit: 9
        hasMore: true
        count: 2
        items:
        - headers:
          - name: name
            cell: cell
          - name: name
            cell: cell
          delimeter: delimeter
          startRow: 6
          headerRow: 5
          columns:
            column:
            - system: true
              nullable: true
              name: name
              format: format
              index: 0
              type: STRING
            - system: true
              nullable: true
              name: name
              format: format
              index: 0
              type: STRING
          query: query
          description: description
          endRow: 1
          widths:
          - 5
          - 5
          type: TEMPLATE
          customDelimiter: customDelimiter
          application: application
          queryParameters:
          - useSubVariable: true
            subVariableName: subVariableName
            defaultValue: defaultValue
            name: name
            index: 2
            type: STRING
            required: true
          - useSubVariable: true
            subVariableName: subVariableName
            defaultValue: defaultValue
            name: name
            index: 2
            type: STRING
            required: true
          name: name
          connection: connection
          sheet: sheet
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          cube: cube
          skipHiddenRows: true
          ignoreErrorRecords: true
        - headers:
          - name: name
            cell: cell
          - name: name
            cell: cell
          delimeter: delimeter
          startRow: 6
          headerRow: 5
          columns:
            column:
            - system: true
              nullable: true
              name: name
              format: format
              index: 0
              type: STRING
            - system: true
              nullable: true
              name: name
              format: format
              index: 0
              type: STRING
          query: query
          description: description
          endRow: 1
          widths:
          - 5
          - 5
          type: TEMPLATE
          customDelimiter: customDelimiter
          application: application
          queryParameters:
          - useSubVariable: true
            subVariableName: subVariableName
            defaultValue: defaultValue
            name: name
            index: 2
            type: STRING
            required: true
          - useSubVariable: true
            subVariableName: subVariableName
            defaultValue: defaultValue
            name: name
            index: 2
            type: STRING
            required: true
          name: name
          connection: connection
          sheet: sheet
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          cube: cube
          skipHiddenRows: true
          ignoreErrorRecords: true
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/Datasource'
          type: array
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        hasMore:
          type: boolean
        count:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    HeaderType:
      example:
        name: name
        cell: cell
      properties:
        name:
          type: string
          xml:
            attribute: true
        cell:
          type: string
          xml:
            attribute: true
      type: object
    QueryParamsInfo:
      example:
        useSubVariable: true
        subVariableName: subVariableName
        defaultValue: defaultValue
        name: name
        index: 2
        type: STRING
        required: true
      properties:
        index:
          format: int32
          type: integer
        name:
          type: string
        defaultValue:
          type: string
        required:
          type: boolean
        useSubVariable:
          type: boolean
        subVariableName:
          type: string
        type:
          enum:
          - STRING
          - DOUBLE
          - DATE
          - TIMESTAMP
          - LONG
          type: string
      type: object
    DatasourceQueryInfo:
      example:
        delimiter: delimiter
        query: query
        params:
          key: "{}"
      properties:
        query:
          type: string
        delimiter:
          type: string
        params:
          additionalProperties:
            properties: {}
            type: object
          type: object
      type: object
    DSColumn:
      example:
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
      type: object
      xml:
        name: column
    ResultBean:
      example:
        columns:
        - name: name
          id: 0
        - name: name
          id: 0
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        columns:
          items:
            $ref: '#/components/schemas/DSColumn'
          type: array
      type: object
      xml:
        name: Results
    ColumnMappingInfo:
      example:
        generation: generation
        level: level
        generationNumber: 0
        type: DIMENSION
        dimension: dimension
      properties:
        dimension:
          type: string
        generation:
          type: string
        level:
          type: string
        type:
          enum:
          - DIMENSION
          - GENERATION
          - LEVEL0
          - PARENT_CHILD
          type: string
        generationNumber:
          format: int32
          type: integer
      type: object
    DrillthroughBean:
      example:
        columns:
        - columns
        - columns
        parameterMapping:
          key:
            generation: generation
            level: level
            generationNumber: 6
            type: DIMENSION
            dimension: dimension
        useTempTables: true
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        drillableRegions:
        - drillableRegions
        - drillableRegions
        type: type
        dataSourceName: dataSourceName
        url: url
        columnMapping:
          key:
            generation: generation
            level: level
            generationNumber: 0
            type: DIMENSION
            dimension: dimension
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        columnMapping:
          additionalProperties:
            $ref: '#/components/schemas/ColumnMappingInfo'
          type: object
        parameterMapping:
          additionalProperties:
            $ref: '#/components/schemas/RunTimeParametersInfo'
          type: object
        drillableRegions:
          items:
            type: string
          type: array
        useTempTables:
          type: boolean
        columns:
          items:
            type: string
          type: array
        dataSourceName:
          type: string
        url:
          type: string
        type:
          type: string
        name:
          type: string
      type: object
    RunTimeParametersInfo:
      example:
        generation: generation
        level: level
        generationNumber: 6
        type: DIMENSION
        dimension: dimension
      properties:
        dimension:
          type: string
        generation:
          type: string
        level:
          type: string
        type:
          enum:
          - DIMENSION
          - GENERATION
          - LEVEL0
          - PARENT_CHILD
          type: string
        generationNumber:
          format: int32
          type: integer
      type: object
    ReportBean:
      example:
        modifiedTime: 0
        sizeInBytes: 6
        lockedBy: lockedBy
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        locked: true
        lockedTime: 1
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        modifiedTime:
          format: int64
          type: integer
        sizeInBytes:
          format: int64
          type: integer
        lockedBy:
          type: string
        lockedTime:
          format: int64
          type: integer
        locked:
          type: boolean
        name:
          type: string
      type: object
    ReportList:
      example:
        totalResults: 5
        offset: 2
        limit: 5
        hasMore: true
        count: 7
        items:
        - modifiedTime: 0
          sizeInBytes: 6
          lockedBy: lockedBy
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          locked: true
          lockedTime: 1
        - modifiedTime: 0
          sizeInBytes: 6
          lockedBy: lockedBy
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          locked: true
          lockedTime: 1
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/ReportBean'
          type: array
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        hasMore:
          type: boolean
        count:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    DrillThroughRange:
      example:
        cells:
          key:
          - cells
          - cells
      properties:
        cells:
          additionalProperties:
            items:
              type: string
            type: array
            uniqueItems: true
          type: object
      type: object
    DrillthroughMetadataBean:
      example:
        dtrContext:
        - cells:
            key:
            - cells
            - cells
        - cells:
            key:
            - cells
            - cells
        aliasTable: aliasTable
        sessionId: sessionId
      properties:
        dtrContext:
          items:
            $ref: '#/components/schemas/DrillThroughRange'
          type: array
        aliasTable:
          type: string
        sessionId:
          type: string
      type: object
    ServerConfiguration:
      example:
        password: password
        folder: folder
        port: 0
        messageAction: messageAction
        host: host
        messageLocation: messageLocation
        user: user
      properties:
        host:
          type: string
        port:
          format: int32
          type: integer
        user:
          type: string
        password:
          type: string
        folder:
          type: string
        messageAction:
          type: string
        messageLocation:
          type: string
      type: object
    ListLinkResponseObject:
      example:
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    FilterBean:
      example:
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        rows:
        - access: access
          mbrSpec: mbrSpec
        - access: access
          mbrSpec: mbrSpec
      properties:
        name:
          type: string
        rows:
          items:
            $ref: '#/components/schemas/FilterRow'
          type: array
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    FilterRow:
      example:
        access: access
        mbrSpec: mbrSpec
      properties:
        access:
          type: string
        mbrSpec:
          type: string
      required:
      - access
      - mbrSpec
      type: object
    FilterCopy:
      example:
        from: from
        to: to
      properties:
        from:
          type: string
        to:
          type: string
      required:
      - from
      - to
      type: object
    FilterRowList:
      example:
        totalResults: 0
        offset: 5
        hasMore: true
        count: 6
        limit: 1
        items:
        - access: access
          mbrSpec: mbrSpec
        - access: access
          mbrSpec: mbrSpec
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/FilterRow'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    UserGroupProvisionInfo:
      example:
        role: role
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        id: id
        group: true
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        id:
          type: string
        name:
          type: string
        role:
          type: string
        group:
          type: boolean
      type: object
      xml:
        name: permission
    UserGroupProvisionInfoList:
      example:
        totalResults: 0
        offset: 5
        count: 6
        limit: 1
        hasMore: true
        items:
        - role: role
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          id: id
          group: true
        - role: role
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          id: id
          group: true
        properties:
          key: properties
      properties:
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        items:
          items:
            $ref: '#/components/schemas/UserGroupProvisionInfo'
          type: array
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
      xml:
        name: result
    FilterList:
      example:
        totalResults: 0
        offset: 5
        hasMore: true
        count: 6
        limit: 1
        items:
        - name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          rows:
          - access: access
            mbrSpec: mbrSpec
          - access: access
            mbrSpec: mbrSpec
        - name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          rows:
          - access: access
            mbrSpec: mbrSpec
          - access: access
            mbrSpec: mbrSpec
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/FilterBean'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    InputStream:
      type: object
    UserBean:
      example:
        password: password
        role: role
        name: name
        groups:
        - groups
        - groups
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        id: id
        email: email
        token: token
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        token:
          type: string
        email:
          type: string
        role:
          type: string
        groups:
          items:
            type: string
          type: array
        password:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
      xml:
        name: User
    Users:
      example:
        totalResults: 0
        offset: 5
        count: 6
        limit: 1
        hasMore: true
        items:
        - password: password
          role: role
          name: name
          groups:
          - groups
          - groups
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          id: id
          email: email
          token: token
        - password: password
          role: role
          name: name
          groups:
          - groups
          - groups
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          id: id
          email: email
          token: token
        properties:
          key: properties
      properties:
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        items:
          items:
            $ref: '#/components/schemas/UserBean'
          type: array
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    GroupBean:
      example:
        role: role
        name: name
        description: description
        groups:
        - groups
        - groups
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        role:
          type: string
        description:
          type: string
        groups:
          items:
            type: string
          type: array
        name:
          type: string
      type: object
    Groups:
      example:
        totalResults: 0
        offset: 5
        count: 6
        limit: 1
        hasMore: true
        items:
        - role: role
          name: name
          description: description
          groups:
          - groups
          - groups
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
        - role: role
          name: name
          description: description
          groups:
          - groups
          - groups
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
        properties:
          key: properties
      properties:
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        items:
          items:
            $ref: '#/components/schemas/GroupBean'
          type: array
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    JobStatisticsBean:
      example:
        runningCt: 5
        errCt: 0
        succesCt: 6
        warningCt: 1
      properties:
        errCt:
          format: int64
          type: integer
        succesCt:
          format: int64
          type: integer
        warningCt:
          format: int64
          type: integer
        runningCt:
          format: int64
          type: integer
      type: object
    JobRecordBean:
      example:
        appName: appName
        jobfileName: jobfileName
        dbName: dbName
        userName: userName
        statusMessage: statusMessage
        job_ID: 0
        startTime: 6
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        endTime: 1
        jobInputInfo:
          key: "{}"
        jobType: jobType
        statusCode: 5
        jobOutputInfo:
          key: "{}"
      properties:
        job_ID:
          format: int64
          type: integer
        appName:
          type: string
        dbName:
          type: string
        jobType:
          type: string
        jobfileName:
          type: string
        userName:
          type: string
        startTime:
          format: int64
          type: integer
        endTime:
          format: int64
          type: integer
        statusCode:
          format: int32
          type: integer
        statusMessage:
          type: string
        jobInputInfo:
          additionalProperties:
            properties: {}
            type: object
          type: object
        jobOutputInfo:
          additionalProperties:
            properties: {}
            type: object
          type: object
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    CompactDesignation:
      example:
        columnOffset: 0
        fastAnalysis: true
        minDate: 2000-01-23T04:56:07.000+00:00
        nr: 6
        nrh: 1
        excelRowCount: 4
        excelSheetName: excelSheetName
        measureDimensionName: measureDimensionName
        query: query
        dateDimString: dateDimString
        dimDesignationMode: DIM_DESIGNATION_MODE_ATTRIBS_AS_MULTILEVEL_DIMS
        bsoLimitsExceeded: true
        tableName: tableName
        namingPriority: NONE
        dimCompactDesignationList:
        - uniqCount:
          - 9
          - 9
          genNames:
          - genNames
          - genNames
          colNames:
          - colNames
          - colNames
          headerText:
          - headerText
          - headerText
          columnTypes:
          - TEXT
          - TEXT
          query: query
          attNames:
          - attNames
          - attNames
          fkcolumnNumber: 2
          dimGenColumns:
          - 2
          - 2
          dimJoin: dimJoin
          essbaseConnection: essbaseConnection
          dimName: dimName
          attribute:
          - 7
          - 7
          parentColumnId: 3
        - uniqCount:
          - 9
          - 9
          genNames:
          - genNames
          - genNames
          colNames:
          - colNames
          - colNames
          headerText:
          - headerText
          - headerText
          columnTypes:
          - TEXT
          - TEXT
          query: query
          attNames:
          - attNames
          - attNames
          fkcolumnNumber: 2
          dimGenColumns:
          - 2
          - 2
          dimJoin: dimJoin
          essbaseConnection: essbaseConnection
          dimName: dimName
          attribute:
          - 7
          - 7
          parentColumnId: 3
        file: file
        dateFormatString: dateFormatString
        compactDesignationColumn:
        - externalDimName: externalDimName
          originalHeaderName: originalHeaderName
          objectName: objectName
          formula: formula
          referenceObjectName: referenceObjectName
          objectType: objectType
          dimensionAlias: dimensionAlias
          solveOrder: 5
        - externalDimName: externalDimName
          originalHeaderName: originalHeaderName
          objectName: objectName
          formula: formula
          referenceObjectName: referenceObjectName
          objectType: objectType
          dimensionAlias: dimensionAlias
          solveOrder: 5
        badRowListString: badRowListString
        dateColumnId: 5
        maxDate: 2000-01-23T04:56:07.000+00:00
        dateDimensionLeaves:
        - dateDimensionLeaves
        - dateDimensionLeaves
      properties:
        file:
          type: string
        excelSheetName:
          type: string
        columnOffset:
          format: int32
          type: integer
        badRowListString:
          type: string
        nr:
          format: int32
          type: integer
        nrh:
          format: int32
          type: integer
        compactDesignationColumn:
          items:
            $ref: '#/components/schemas/CompactDesignationColumn'
          type: array
        bsoLimitsExceeded:
          type: boolean
        fastAnalysis:
          type: boolean
        measureDimensionName:
          type: string
        dimDesignationMode:
          enum:
          - DIM_DESIGNATION_MODE_ATTRIBS_AS_MULTILEVEL_DIMS
          - DIM_DESIGNATION_MODE_ATTRIBS_AS_FLAT_DIMS
          - DIM_DESIGNATION_MODE_ALL_FLAT
          - DIM_DESIGNATION_MODE_OAV
          - DIM_DESIGNATION_MODE_OAV_DIM
          - DIM_DESIGNATION_MODE_OAV_SNOWFLAKE_DIM
          - CONVERT_TO_CSV
          - DIM_DESIGNATION_MODE_ATTRIBS_AS_ATTRIBS
          type: string
        namingPriority:
          enum:
          - NONE
          - GENERATIONS
          - DIMENSIONS
          type: string
        dateColumnId:
          format: int32
          type: integer
        dateFormatString:
          type: string
        dateDimString:
          type: string
        dateDimensionLeaves:
          items:
            type: string
          type: array
        maxDate:
          format: date-time
          type: string
        minDate:
          format: date-time
          type: string
        tableName:
          type: string
        dimCompactDesignationList:
          items:
            $ref: '#/components/schemas/DimCompactDesignation'
          type: array
        query:
          type: string
        excelRowCount:
          format: int32
          type: integer
      type: object
    CompactDesignationColumn:
      example:
        externalDimName: externalDimName
        originalHeaderName: originalHeaderName
        objectName: objectName
        formula: formula
        referenceObjectName: referenceObjectName
        objectType: objectType
        dimensionAlias: dimensionAlias
        solveOrder: 5
      properties:
        originalHeaderName:
          type: string
        objectName:
          type: string
        referenceObjectName:
          type: string
        objectType:
          type: string
        formula:
          type: string
        dimensionAlias:
          type: string
        externalDimName:
          type: string
        solveOrder:
          format: int32
          type: integer
      type: object
    DimCompactDesignation:
      example:
        uniqCount:
        - 9
        - 9
        genNames:
        - genNames
        - genNames
        colNames:
        - colNames
        - colNames
        headerText:
        - headerText
        - headerText
        columnTypes:
        - TEXT
        - TEXT
        query: query
        attNames:
        - attNames
        - attNames
        fkcolumnNumber: 2
        dimGenColumns:
        - 2
        - 2
        dimJoin: dimJoin
        essbaseConnection: essbaseConnection
        dimName: dimName
        attribute:
        - 7
        - 7
        parentColumnId: 3
      properties:
        query:
          type: string
        essbaseConnection:
          type: string
        genNames:
          items:
            type: string
          type: array
        colNames:
          items:
            type: string
          type: array
        dimGenColumns:
          items:
            format: int32
            type: integer
          type: array
        attribute:
          items:
            format: int32
            type: integer
          type: array
        dimJoin:
          type: string
        dimName:
          type: string
        attNames:
          items:
            type: string
          type: array
        columnTypes:
          items:
            enum:
            - TEXT
            - INTEGER
            - FLOAT
            - TIME
            - DATE
            - BOOLEAN
            - EMPTY
            - UNKNOWN
            - OUT_OF_RANGE
            type: string
          type: array
        uniqCount:
          items:
            format: int32
            type: integer
          type: array
        headerText:
          items:
            type: string
          type: array
        parentColumnId:
          format: int32
          type: integer
        fkcolumnNumber:
          format: int32
          type: integer
      type: object
    JobsInputBean:
      example:
        application: application
        jobtype: jobtype
        parameters:
          filesystemcopy: filesystemcopy
          filetype: filetype
          data: data
          isScriptContent: true
          timeoutToForceUnloadApp: timeoutToForceUnloadApp
          analyzeFileName: analyzeFileName
          rtsv:
          - singleChoice: true
            name: name
            allowMissing: true
            limit: limit
            description: description
            type: STRING
            dimension: dimension
            value: "{}"
          - singleChoice: true
            name: name
            allowMissing: true
            limit: limit
            description: description
            type: STRING
            dimension: dimension
            value: "{}"
          password: password
          reportScriptFilename: reportScriptFilename
          shadowAppName: shadowAppName
          waitForOngoingUpdatesInSecs: waitForOngoingUpdatesInSecs
          appId: appId
          loaddata: loaddata
          exportpartitions: true
          connection: connection
          cube: cube
          overwrite: overwrite
          restructureOption: restructureOption
          exportdata: true
          targetApplicationName: targetApplicationName
          compress: compress
          executeScript: executeScript
          buildMethod: buildMethod
          exportfilters: true
          deleteExcelOnSuccess: deleteExcelOnSuccess
          generateArtifactList: generateArtifactList
          script: script
          commitOption: commitOption
          unstructuredAnalysis:
            columnOffset: 0
            fastAnalysis: true
            minDate: 2000-01-23T04:56:07.000+00:00
            nr: 6
            nrh: 1
            excelRowCount: 4
            excelSheetName: excelSheetName
            measureDimensionName: measureDimensionName
            query: query
            dateDimString: dateDimString
            dimDesignationMode: DIM_DESIGNATION_MODE_ATTRIBS_AS_MULTILEVEL_DIMS
            bsoLimitsExceeded: true
            tableName: tableName
            namingPriority: NONE
            dimCompactDesignationList:
            - uniqCount:
              - 9
              - 9
              genNames:
              - genNames
              - genNames
              colNames:
              - colNames
              - colNames
              headerText:
              - headerText
              - headerText
              columnTypes:
              - TEXT
              - TEXT
              query: query
              attNames:
              - attNames
              - attNames
              fkcolumnNumber: 2
              dimGenColumns:
              - 2
              - 2
              dimJoin: dimJoin
              essbaseConnection: essbaseConnection
              dimName: dimName
              attribute:
              - 7
              - 7
              parentColumnId: 3
            - uniqCount:
              - 9
              - 9
              genNames:
              - genNames
              - genNames
              colNames:
              - colNames
              - colNames
              headerText:
              - headerText
              - headerText
              columnTypes:
              - TEXT
              - TEXT
              query: query
              attNames:
              - attNames
              - attNames
              fkcolumnNumber: 2
              dimGenColumns:
              - 2
              - 2
              dimJoin: dimJoin
              essbaseConnection: essbaseConnection
              dimName: dimName
              attribute:
              - 7
              - 7
              parentColumnId: 3
            file: file
            dateFormatString: dateFormatString
            compactDesignationColumn:
            - externalDimName: externalDimName
              originalHeaderName: originalHeaderName
              objectName: objectName
              formula: formula
              referenceObjectName: referenceObjectName
              objectType: objectType
              dimensionAlias: dimensionAlias
              solveOrder: 5
            - externalDimName: externalDimName
              originalHeaderName: originalHeaderName
              objectName: objectName
              formula: formula
              referenceObjectName: referenceObjectName
              objectType: objectType
              dimensionAlias: dimensionAlias
              solveOrder: 5
            badRowListString: badRowListString
            dateColumnId: 5
            maxDate: 2000-01-23T04:56:07.000+00:00
            dateDimensionLeaves:
            - dateDimensionLeaves
            - dateDimensionLeaves
          enableSandboxing: enableSandboxing
          catalogExcelPath: catalogExcelPath
          lockForUpdate: true
          analyzeSheetName: analyzeSheetName
          includeServerLevel: includeServerLevel
          hideShadow: hideShadow
          force: force
          bufferId: 7
          memberIds: memberIds
          dataLevel: dataLevel
          option: option
          discoverDimensionTables: discoverDimensionTables
          forceDimBuild: forceDimBuild
          termOption: termOption
          useConnection: useConnection
          rule: rule
          dimDesignationMode: dimDesignationMode
          basedOnQueryData: basedOnQueryData
          disasterRecovery: disasterRecovery
          skipdata: skipdata
          buildOption: buildOption
          backupType: backupType
          lcmImportFromStorage: lcmImportFromStorage
          recreateApplication: recreateApplication
          file: file
          primaryAppName: primaryAppName
          enableAlternateRollups: enableAlternateRollups
          exportDynamicBlocks: exportDynamicBlocks
          columnFormat: columnFormat
          physical: true
          timestamp: timestamp
          abortOnError: abortOnError
          zipFileName: zipFileName
          threads: threads
          dbType: dbType
          allApp: allApp
          verbose: verbose
          actionType: actionType
          bufferIds:
          - 1
          - 1
          selectedDimensions:
          - selectedDimensions
          - selectedDimensions
          createFiles: createFiles
          useCatalogPath: true
          artifactList: artifactList
          calc: calc
          user: user
          importExcelFileName: importExcelFileName
          copyToStorage: copyToStorage
          partialDataExpression: partialDataExpression
          ratioToStop: ratioToStop
          maxParallel: maxParallel
        db: db
      properties:
        application:
          type: string
        db:
          type: string
        jobtype:
          type: string
        parameters:
          $ref: '#/components/schemas/ParametersBean'
      required:
      - application
      - db
      - jobtype
      type: object
    ParametersBean:
      example:
        filesystemcopy: filesystemcopy
        filetype: filetype
        data: data
        isScriptContent: true
        timeoutToForceUnloadApp: timeoutToForceUnloadApp
        analyzeFileName: analyzeFileName
        rtsv:
        - singleChoice: true
          name: name
          allowMissing: true
          limit: limit
          description: description
          type: STRING
          dimension: dimension
          value: "{}"
        - singleChoice: true
          name: name
          allowMissing: true
          limit: limit
          description: description
          type: STRING
          dimension: dimension
          value: "{}"
        password: password
        reportScriptFilename: reportScriptFilename
        shadowAppName: shadowAppName
        waitForOngoingUpdatesInSecs: waitForOngoingUpdatesInSecs
        appId: appId
        loaddata: loaddata
        exportpartitions: true
        connection: connection
        cube: cube
        overwrite: overwrite
        restructureOption: restructureOption
        exportdata: true
        targetApplicationName: targetApplicationName
        compress: compress
        executeScript: executeScript
        buildMethod: buildMethod
        exportfilters: true
        deleteExcelOnSuccess: deleteExcelOnSuccess
        generateArtifactList: generateArtifactList
        script: script
        commitOption: commitOption
        unstructuredAnalysis:
          columnOffset: 0
          fastAnalysis: true
          minDate: 2000-01-23T04:56:07.000+00:00
          nr: 6
          nrh: 1
          excelRowCount: 4
          excelSheetName: excelSheetName
          measureDimensionName: measureDimensionName
          query: query
          dateDimString: dateDimString
          dimDesignationMode: DIM_DESIGNATION_MODE_ATTRIBS_AS_MULTILEVEL_DIMS
          bsoLimitsExceeded: true
          tableName: tableName
          namingPriority: NONE
          dimCompactDesignationList:
          - uniqCount:
            - 9
            - 9
            genNames:
            - genNames
            - genNames
            colNames:
            - colNames
            - colNames
            headerText:
            - headerText
            - headerText
            columnTypes:
            - TEXT
            - TEXT
            query: query
            attNames:
            - attNames
            - attNames
            fkcolumnNumber: 2
            dimGenColumns:
            - 2
            - 2
            dimJoin: dimJoin
            essbaseConnection: essbaseConnection
            dimName: dimName
            attribute:
            - 7
            - 7
            parentColumnId: 3
          - uniqCount:
            - 9
            - 9
            genNames:
            - genNames
            - genNames
            colNames:
            - colNames
            - colNames
            headerText:
            - headerText
            - headerText
            columnTypes:
            - TEXT
            - TEXT
            query: query
            attNames:
            - attNames
            - attNames
            fkcolumnNumber: 2
            dimGenColumns:
            - 2
            - 2
            dimJoin: dimJoin
            essbaseConnection: essbaseConnection
            dimName: dimName
            attribute:
            - 7
            - 7
            parentColumnId: 3
          file: file
          dateFormatString: dateFormatString
          compactDesignationColumn:
          - externalDimName: externalDimName
            originalHeaderName: originalHeaderName
            objectName: objectName
            formula: formula
            referenceObjectName: referenceObjectName
            objectType: objectType
            dimensionAlias: dimensionAlias
            solveOrder: 5
          - externalDimName: externalDimName
            originalHeaderName: originalHeaderName
            objectName: objectName
            formula: formula
            referenceObjectName: referenceObjectName
            objectType: objectType
            dimensionAlias: dimensionAlias
            solveOrder: 5
          badRowListString: badRowListString
          dateColumnId: 5
          maxDate: 2000-01-23T04:56:07.000+00:00
          dateDimensionLeaves:
          - dateDimensionLeaves
          - dateDimensionLeaves
        enableSandboxing: enableSandboxing
        catalogExcelPath: catalogExcelPath
        lockForUpdate: true
        analyzeSheetName: analyzeSheetName
        includeServerLevel: includeServerLevel
        hideShadow: hideShadow
        force: force
        bufferId: 7
        memberIds: memberIds
        dataLevel: dataLevel
        option: option
        discoverDimensionTables: discoverDimensionTables
        forceDimBuild: forceDimBuild
        termOption: termOption
        useConnection: useConnection
        rule: rule
        dimDesignationMode: dimDesignationMode
        basedOnQueryData: basedOnQueryData
        disasterRecovery: disasterRecovery
        skipdata: skipdata
        buildOption: buildOption
        backupType: backupType
        lcmImportFromStorage: lcmImportFromStorage
        recreateApplication: recreateApplication
        file: file
        primaryAppName: primaryAppName
        enableAlternateRollups: enableAlternateRollups
        exportDynamicBlocks: exportDynamicBlocks
        columnFormat: columnFormat
        physical: true
        timestamp: timestamp
        abortOnError: abortOnError
        zipFileName: zipFileName
        threads: threads
        dbType: dbType
        allApp: allApp
        verbose: verbose
        actionType: actionType
        bufferIds:
        - 1
        - 1
        selectedDimensions:
        - selectedDimensions
        - selectedDimensions
        createFiles: createFiles
        useCatalogPath: true
        artifactList: artifactList
        calc: calc
        user: user
        importExcelFileName: importExcelFileName
        copyToStorage: copyToStorage
        partialDataExpression: partialDataExpression
        ratioToStop: ratioToStop
        maxParallel: maxParallel
      properties:
        rule:
          type: string
        file:
          type: string
        abortOnError:
          type: string
        restructureOption:
          type: string
        forceDimBuild:
          type: string
        script:
          type: string
        option:
          type: string
        loaddata:
          type: string
        useConnection:
          type: string
        connection:
          type: string
        user:
          type: string
        password:
          type: string
        calc:
          type: string
        buildMethod:
          type: string
        data:
          type: string
        memberIds:
          type: string
        zipFileName:
          type: string
        skipdata:
          type: string
        threads:
          type: string
        overwrite:
          type: string
        lcmImportFromStorage:
          type: string
        analyzeFileName:
          type: string
        analyzeSheetName:
          type: string
        deleteExcelOnSuccess:
          type: string
        catalogExcelPath:
          type: string
        importExcelFileName:
          type: string
        recreateApplication:
          type: string
        createFiles:
          type: string
        executeScript:
          type: string
        buildOption:
          type: string
        copyToStorage:
          type: string
        filesystemcopy:
          type: string
        dataLevel:
          type: string
        columnFormat:
          type: string
        targetApplicationName:
          type: string
        partialDataExpression:
          type: string
        allApp:
          type: string
        includeServerLevel:
          type: string
          xml:
            attribute: true
            name: include-server-level
        enableSandboxing:
          type: string
        dbType:
          type: string
        dimDesignationMode:
          type: string
        unstructuredAnalysis:
          $ref: '#/components/schemas/CompactDesignation'
        ratioToStop:
          type: string
        basedOnQueryData:
          type: string
        enableAlternateRollups:
          type: string
        compress:
          type: string
        generateArtifactList:
          type: string
          xml:
            attribute: true
            name: generateartifactlist
        artifactList:
          type: string
        verbose:
          type: string
        disasterRecovery:
          type: string
        force:
          type: string
        backupType:
          type: string
        appId:
          type: string
        timestamp:
          type: string
        maxParallel:
          type: string
        selectedDimensions:
          items:
            type: string
          type: array
        rtsv:
          items:
            $ref: '#/components/schemas/RTSV'
          type: array
        bufferId:
          format: int32
          type: integer
        bufferIds:
          items:
            format: int32
            type: integer
          type: array
        commitOption:
          type: string
        actionType:
          type: string
        termOption:
          type: string
        discoverDimensionTables:
          type: string
        exportDynamicBlocks:
          type: string
        shadowAppName:
          type: string
        primaryAppName:
          type: string
        timeoutToForceUnloadApp:
          type: string
        hideShadow:
          type: string
        waitForOngoingUpdatesInSecs:
          type: string
        reportScriptFilename:
          type: string
        lockForUpdate:
          type: boolean
        isScriptContent:
          type: boolean
        useCatalogPath:
          type: boolean
        exportdata:
          type: boolean
        cube:
          type: string
        filetype:
          type: string
        exportpartitions:
          type: boolean
        exportfilters:
          type: boolean
        physical:
          type: boolean
      type: object
    RTSV:
      example:
        singleChoice: true
        name: name
        allowMissing: true
        limit: limit
        description: description
        type: STRING
        dimension: dimension
        value: "{}"
      properties:
        name:
          type: string
        description:
          type: string
        allowMissing:
          type: boolean
        dimension:
          type: string
        singleChoice:
          type: boolean
        type:
          enum:
          - STRING
          - NUMBER
          - DATE
          - MEMBER
          type: string
        value:
          properties: {}
          type: object
        limit:
          type: string
      type: object
    JobRecordPaginatedResultWrapper:
      example:
        totalResults: 0
        offset: 1
        limit: 6
        hasMore: true
        count: 5
        items:
        - appName: appName
          jobfileName: jobfileName
          dbName: dbName
          userName: userName
          statusMessage: statusMessage
          job_ID: 0
          startTime: 6
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          endTime: 1
          jobInputInfo:
            key: "{}"
          jobType: jobType
          statusCode: 5
          jobOutputInfo:
            key: "{}"
        - appName: appName
          jobfileName: jobfileName
          dbName: dbName
          userName: userName
          statusMessage: statusMessage
          job_ID: 0
          startTime: 6
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          endTime: 1
          jobInputInfo:
            key: "{}"
          jobType: jobType
          statusCode: 5
          jobOutputInfo:
            key: "{}"
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/JobRecordBean'
          type: array
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        hasMore:
          type: boolean
        count:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    LocationAliasBean:
      example:
        aliasName: aliasName
        databaseName: databaseName
        applicationLevelConnection: true
        serverName: serverName
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        connectionName: connectionName
        userName: userName
        applicationName: applicationName
      properties:
        aliasName:
          type: string
        connectionName:
          type: string
        serverName:
          type: string
        userName:
          type: string
        applicationName:
          type: string
        databaseName:
          type: string
        applicationLevelConnection:
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    LocationAliasList:
      example:
        totalResults: 1
        offset: 0
        limit: 6
        hasMore: true
        count: 5
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        items:
        - aliasName: aliasName
          databaseName: databaseName
          applicationLevelConnection: true
          serverName: serverName
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          connectionName: connectionName
          userName: userName
          applicationName: applicationName
        - aliasName: aliasName
          databaseName: databaseName
          applicationLevelConnection: true
          serverName: serverName
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          connectionName: connectionName
          userName: userName
          applicationName: applicationName
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/LocationAliasBean'
          type: array
        offset:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        hasMore:
          type: boolean
        count:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    LockObject:
      example:
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        time: 0
        type: OUTLINE
        user: user
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        user:
          type: string
        type:
          enum:
          - OUTLINE
          - CALCSCRIPT
          - REPORT
          - RULES
          - ALIAS
          - STRUCTURE
          - ASCBACKUP
          - BINBACKUP
          - EXCEL
          - XLSX
          - XLSM
          - MAXL
          - ZIP
          - CSV
          - LOTUS2
          - LOTUS3
          - TEXT
          - LOTUS4
          - WIZARD
          - PARTITION
          - SELECTION
          - LRO
          - EQD
          - XML
          - JAVA_CDF
          - MAX
          - BACKUP
          - WORKSHEET
          - DATA
          - ERROR
          - OUT
          - GROOVY
          - DRILLTHROUGH
          - ALL
          - MDX
          type: string
        time:
          format: int64
          type: integer
        name:
          type: string
      type: object
    LockObjectList:
      example:
        totalResults: 6
        offset: 5
        limit: 1
        hasMore: true
        count: 5
        items:
        - name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          time: 0
          type: OUTLINE
          user: user
        - name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          time: 0
          type: OUTLINE
          user: user
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/LockObject'
          type: array
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        hasMore:
          type: boolean
        count:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    LockBlock:
      example:
        duration: 6
        count: 0
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        user: user
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        user:
          type: string
        count:
          format: int32
          type: integer
        duration:
          format: int32
          type: integer
      type: object
    LockBlockList:
      example:
        totalResults: 1
        offset: 5
        limit: 5
        hasMore: true
        count: 2
        items:
        - duration: 6
          count: 0
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          user: user
        - duration: 6
          count: 0
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          user: user
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/LockBlock'
          type: array
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        hasMore:
          type: boolean
        count:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    About:
      example:
        build: build
        name: name
        description: description
        version: version
        listingVersion: listingVersion
      properties:
        name:
          type: string
        version:
          type: string
        build:
          type: string
        description:
          type: string
        listingVersion:
          type: string
      type: object
      xml:
        name: about
    StringCollectionResponse:
      example:
        totalResults: 0
        offset: 1
        limit: 6
        hasMore: true
        count: 5
        items:
        - items
        - items
        properties:
          key: properties
      properties:
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        items:
          items:
            type: string
          type: array
        hasMore:
          type: boolean
        count:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
      xml:
        name: Result
    CopyRenameBean:
      example:
        from: from
        to: to
      properties:
        from:
          type: string
        to:
          type: string
      required:
      - from
      - to
      type: object
    CubeCopy:
      example:
        from: from
        to:
          database: database
          application: application
      properties:
        from:
          type: string
        to:
          $ref: '#/components/schemas/To'
      required:
      - from
      - to
      type: object
    To:
      example:
        database: database
        application: application
      properties:
        database:
          type: string
        application:
          type: string
      required:
      - database
      type: object
    ShadowCopyBean:
      example:
        primaryAppName: primaryAppName
        shadowAppName: shadowAppName
        waitForOngoingUpdatesInSecs: 0
        runInBackground: true
        hideShadow: true
      properties:
        primaryAppName:
          type: string
        shadowAppName:
          type: string
        hideShadow:
          type: boolean
        waitForOngoingUpdatesInSecs:
          format: int32
          type: integer
        runInBackground:
          type: boolean
      required:
      - hideShadow
      - primaryAppName
      - shadowAppName
      - waitForOngoingUpdatesInSecs
      type: object
    ShadowPromoteBean:
      example:
        shadowAppName: shadowAppName
        primaryAppName: primaryAppName
        runInBackground: true
        timeoutToForceUnloadApp: 0
      properties:
        shadowAppName:
          type: string
        primaryAppName:
          type: string
        timeoutToForceUnloadApp:
          format: int32
          type: integer
        runInBackground:
          type: boolean
      required:
      - primaryAppName
      - shadowAppName
      - timeoutToForceUnloadApp
      type: object
    Cube:
      example:
        owner: owner
        modifiedTime: 6
        applicationRole: applicationRole
        creationTime: 0
        startStopDBAllowed: true
        description: description
        dbVariablesSetting:
          showVariables: true
          updateVariables: true
        type: ASO
        application: application
        inspectDBAllowed: true
        name: name
        easManagedApp: true
        modifiedBy: modifiedBy
        startTime: 1
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        status: status
      properties:
        name:
          type: string
        application:
          type: string
        owner:
          type: string
        creationTime:
          format: int64
          type: integer
        modifiedBy:
          type: string
        modifiedTime:
          format: int64
          type: integer
        status:
          type: string
        startTime:
          format: int64
          type: integer
        description:
          type: string
        type:
          enum:
          - ASO
          - BSO
          - CURRENCY
          type: string
        applicationRole:
          type: string
        easManagedApp:
          type: boolean
        startStopDBAllowed:
          type: boolean
        inspectDBAllowed:
          type: boolean
        dbVariablesSetting:
          $ref: '#/components/schemas/VariablesSetting'
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    CubeList:
      example:
        totalResults: 5
        offset: 7
        hasMore: true
        count: 5
        limit: 2
        items:
        - owner: owner
          modifiedTime: 6
          applicationRole: applicationRole
          creationTime: 0
          startStopDBAllowed: true
          description: description
          dbVariablesSetting:
            showVariables: true
            updateVariables: true
          type: ASO
          application: application
          inspectDBAllowed: true
          name: name
          easManagedApp: true
          modifiedBy: modifiedBy
          startTime: 1
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          status: status
        - owner: owner
          modifiedTime: 6
          applicationRole: applicationRole
          creationTime: 0
          startStopDBAllowed: true
          description: description
          dbVariablesSetting:
            showVariables: true
            updateVariables: true
          type: ASO
          application: application
          inspectDBAllowed: true
          name: name
          easManagedApp: true
          modifiedBy: modifiedBy
          startTime: 1
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          status: status
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/Cube'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    VariablesSetting:
      example:
        showVariables: true
        updateVariables: true
      properties:
        showVariables:
          type: boolean
        updateVariables:
          type: boolean
      type: object
    CurrencySettings:
      example:
        currencyDatabase: currencyDatabase
        conversionTypeMemberName: conversionTypeMemberName
        timeMemberName: timeMemberName
        partitionMemberName: partitionMemberName
        conversionType: division
        categoryMemberName: categoryMemberName
        countryMemberName: countryMemberName
      properties:
        currencyDatabase:
          type: string
        conversionType:
          enum:
          - division
          - multiplication
          type: string
        conversionTypeMemberName:
          type: string
        countryMemberName:
          type: string
        timeMemberName:
          type: string
        categoryMemberName:
          type: string
        partitionMemberName:
          type: string
      type: object
    CreateApplication:
      example:
        databaseType: databaseType
        memberPrefix: memberPrefix
        databaseName: databaseName
        appType: NATIVE
        enableScenario: true
        memberCount: 0
        dbType: NORMAL
        allowDuplicates: true
        applicationName: applicationName
      properties:
        applicationName:
          type: string
        databaseName:
          type: string
        allowDuplicates:
          type: boolean
        enableScenario:
          type: boolean
        memberCount:
          format: int32
          type: integer
        databaseType:
          type: string
        dbType:
          enum:
          - NORMAL
          - CURRENCY
          - ASO
          type: string
        appType:
          enum:
          - NATIVE
          - UTF8
          type: string
        memberPrefix:
          type: string
      type: object
    Application:
      example:
        owner: owner
        modifiedTime: 6
        role: role
        inspectAppAllowed: true
        creationTime: 0
        description: description
        type: ASO
        startStopAppAllowed: true
        appVariablesSetting:
          showVariables: true
          updateVariables: true
        name: name
        easManagedApp: true
        modifiedBy: modifiedBy
        startTime: 1
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        status: status
        connectedUsersCount: 5
      properties:
        name:
          type: string
        owner:
          type: string
        creationTime:
          format: int64
          type: integer
        modifiedBy:
          type: string
        modifiedTime:
          format: int64
          type: integer
        status:
          type: string
        description:
          type: string
        type:
          enum:
          - ASO
          - BSO
          - CURRENCY
          type: string
        startTime:
          format: int64
          type: integer
        connectedUsersCount:
          format: int32
          type: integer
        role:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        easManagedApp:
          type: boolean
        startStopAppAllowed:
          type: boolean
        inspectAppAllowed:
          type: boolean
        appVariablesSetting:
          $ref: '#/components/schemas/VariablesSetting'
      type: object
    Arrays:
      type: object
    ApplicationList:
      example:
        totalResults: 0
        offset: 1
        limit: 6
        hasMore: true
        count: 5
        items:
        - owner: owner
          modifiedTime: 6
          role: role
          inspectAppAllowed: true
          creationTime: 0
          description: description
          type: ASO
          startStopAppAllowed: true
          appVariablesSetting:
            showVariables: true
            updateVariables: true
          name: name
          easManagedApp: true
          modifiedBy: modifiedBy
          startTime: 1
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          status: status
          connectedUsersCount: 5
        - owner: owner
          modifiedTime: 6
          role: role
          inspectAppAllowed: true
          creationTime: 0
          description: description
          type: ASO
          startStopAppAllowed: true
          appVariablesSetting:
            showVariables: true
            updateVariables: true
          name: name
          easManagedApp: true
          modifiedBy: modifiedBy
          startTime: 1
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          status: status
          connectedUsersCount: 5
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/Application'
          type: array
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        hasMore:
          type: boolean
        count:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    BOEOutput:
      example:
        messages: messages
      properties:
        messages:
          type: string
      type: object
    JAXBElement:
      properties:
        name:
          $ref: '#/components/schemas/QName'
        value:
          properties: {}
          type: object
        nil:
          type: boolean
        globalScope:
          type: boolean
        typeSubstituted:
          type: boolean
      type: object
    JAXBElementObject:
      example:
        nil: true
        typeSubstituted: true
        globalScope: true
        name:
          localPart: localPart
          prefix: prefix
          namespaceURI: namespaceURI
        value: "{}"
      properties:
        name:
          $ref: '#/components/schemas/QName'
        value:
          properties: {}
          type: object
        nil:
          type: boolean
        globalScope:
          type: boolean
        typeSubstituted:
          type: boolean
      type: object
    OtlEditMain:
      example:
        keepTransaction: true
        validateFormulas: true
        jsonformatLog: true
        otlVersion: 0
        restructOption: ALL_DATA
        editActions:
        - nil: true
          typeSubstituted: true
          globalScope: true
          name:
            localPart: localPart
            prefix: prefix
            namespaceURI: namespaceURI
          value: "{}"
        - nil: true
          typeSubstituted: true
          globalScope: true
          name:
            localPart: localPart
            prefix: prefix
            namespaceURI: namespaceURI
          value: "{}"
        validate: true
      properties:
        editActions:
          items:
            $ref: '#/components/schemas/JAXBElementObject'
          type: array
        otlVersion:
          type: integer
          xml:
            attribute: true
        validate:
          type: boolean
          xml:
            attribute: true
        validateFormulas:
          type: boolean
          xml:
            attribute: true
        keepTransaction:
          type: boolean
          xml:
            attribute: true
        restructOption:
          enum:
          - ALL_DATA
          - NO_DATA
          - LOW_DATA
          - IN_DATA
          type: string
          xml:
            attribute: true
        jsonformatLog:
          type: boolean
      type: object
      xml:
        name: otlEditMain
        namespace: mbredit
    QName:
      example:
        localPart: localPart
        prefix: prefix
        namespaceURI: namespaceURI
      properties:
        namespaceURI:
          type: string
        localPart:
          type: string
        prefix:
          type: string
      type: object
    DBSizeList:
      example:
        totalResults: 1
        offset: 5
        limit: 5
        hasMore: true
        count: 2
        items:
        - name: name
          pageSize: 0
          indexSize: 6
        - name: name
          pageSize: 0
          indexSize: 6
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/DatabaseSizeStatistics'
          type: array
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        hasMore:
          type: boolean
        count:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    DatabaseSizeStatistics:
      example:
        name: name
        pageSize: 0
        indexSize: 6
      properties:
        name:
          type: string
        pageSize:
          format: int64
          type: integer
        indexSize:
          format: int64
          type: integer
      type: object
    DimensionBean:
      example:
        storedMembers: 6
        members: 0
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        type: type
      properties:
        name:
          type: string
        type:
          type: string
        members:
          format: int32
          type: integer
        storedMembers:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    DimensionList:
      example:
        totalResults: 1
        offset: 2
        hasMore: true
        count: 5
        limit: 5
        items:
        - storedMembers: 6
          members: 0
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          type: type
        - storedMembers: 6
          members: 0
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          type: type
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/DimensionBean'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    GenerationLevel:
      example:
        actualName: actualName
        number: 0
        unique: true
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        name:
          type: string
        actualName:
          type: string
        number:
          format: int32
          type: integer
        unique:
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    GenerationLevelList:
      example:
        totalResults: 6
        offset: 5
        hasMore: true
        count: 1
        limit: 5
        items:
        - actualName: actualName
          number: 0
          unique: true
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
        - actualName: actualName
          number: 0
          unique: true
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/GenerationLevel'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    Preference:
      example:
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    AVClientInfo:
      example:
        port: 0
        host: host
        enabled: true
      properties:
        enabled:
          type: boolean
        host:
          type: string
        port:
          format: int32
          type: integer
      type: object
    ResetPasswordBean:
      example:
        oldPassword: oldPassword
        newPassword: newPassword
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      type: object
      xml:
        name: ResetPassword
    Resource:
      example:
        path: path
        provider: provider
        name: name
        description: description
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        id: id
        mimeType: mimeType
        category: category
        url: url
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        provider:
          type: string
        path:
          type: string
        mimeType:
          type: string
        category:
          type: string
        url:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    ResourceList:
      example:
        totalResults: 0
        offset: 5
        hasMore: true
        count: 6
        limit: 1
        items:
        - path: path
          provider: provider
          name: name
          description: description
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          id: id
          mimeType: mimeType
          category: category
          url: url
        - path: path
          provider: provider
          name: name
          description: description
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          id: id
          mimeType: mimeType
          category: category
          url: url
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/Resource'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    DataLoadBuffer:
      example:
        duplicateAggregationMethod: ADD
        resourceUsage: 6
        loadBufferOptions: IGNORE_NONE
        bufferId: 0
      properties:
        bufferId:
          format: int64
          type: integer
        duplicateAggregationMethod:
          enum:
          - ADD
          - ASSUME_EQUAL
          - USE_LAST
          type: string
        loadBufferOptions:
          enum:
          - IGNORE_NONE
          - IGNORE_MISSING_VALUES
          - IGNORE_ZERO_VALUES
          - IGNORE_MISSING_AND_ZERO_VALUES
          type: string
        resourceUsage:
          description: "Percentage of the total load buffer resources that the load\
            \ buffer will be allowed to use; must be within [0, 100], and the value\
            \ of 0 is interpreted as default, which is currently 100."
          format: int64
          type: integer
      type: object
    LoadBuffersList:
      example:
        totalResults: 1
        offset: 2
        hasMore: true
        count: 5
        limit: 5
        items:
        - duplicateAggregationMethod: ADD
          resourceUsage: 6
          loadBufferOptions: IGNORE_NONE
          bufferId: 0
        - duplicateAggregationMethod: ADD
          resourceUsage: 6
          loadBufferOptions: IGNORE_NONE
          bufferId: 0
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/DataLoadBuffer'
          type: array
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    DestroyBuffer:
      example:
        bufferIds:
        - 0
        - 0
      properties:
        bufferIds:
          items:
            format: int64
            type: integer
          type: array
      type: object
    MergeSilceOption:
      example:
        mergeOption: ALL
      properties:
        mergeOption:
          enum:
          - ALL
          - INCREMENTAL
          type: string
      type: object
    ColumnSuppression:
      example:
        zero: true
        emptyBlocks: true
        noAccess: true
        underScore: true
        missing: true
        invalid: true
        error: true
        derived: true
      properties:
        zero:
          type: boolean
        missing:
          type: boolean
        underScore:
          type: boolean
        derived:
          type: boolean
        noAccess:
          type: boolean
        emptyBlocks:
          type: boolean
        invalid:
          type: boolean
        error:
          type: boolean
      type: object
    FormulaRetention:
      example:
        retrive: true
        comments: true
        focus: true
        zoom: true
        fill: true
      properties:
        comments:
          type: boolean
        zoom:
          type: boolean
        focus:
          type: boolean
        retrive:
          type: boolean
        fill:
          type: boolean
      type: object
    Preferences:
      example:
        navigate: true
        cellText: true
        includeDescriptionLabel: true
        removeUnSelectedGroup: true
        zoomIn:
          mode: children
          ancestor: top
        missingText: missingText
        noAccessText: noAccessText
        repeatMemberLabels: true
        maxColumns: 0
        rowSupression:
          zero: true
          emptyBlocks: true
          noAccess: true
          underScore: true
          missing: true
          invalid: true
          error: true
          derived: true
        maxRows: 6
        indentation: NONE
        includeSelection: true
        withinSelectedGroup: true
        columnSupression:
          zero: true
          emptyBlocks: true
          noAccess: true
          underScore: true
          missing: true
          invalid: true
          error: true
          derived: true
        formulaRetention:
          retrive: true
          comments: true
          focus: true
          zoom: true
          fill: true
      properties:
        indentation:
          enum:
          - NONE
          - SUBITEMS
          - TOTALS
          type: string
        includeDescriptionLabel:
          type: boolean
        missingText:
          type: string
        noAccessText:
          type: string
        formulaRetention:
          $ref: '#/components/schemas/FormulaRetention'
        maxColumns:
          format: int64
          type: integer
        removeUnSelectedGroup:
          type: boolean
        rowSupression:
          $ref: '#/components/schemas/RowSuppression'
        columnSupression:
          $ref: '#/components/schemas/ColumnSuppression'
        cellText:
          type: boolean
        zoomIn:
          $ref: '#/components/schemas/ZoomIn'
        navigate:
          type: boolean
        includeSelection:
          type: boolean
        repeatMemberLabels:
          type: boolean
        withinSelectedGroup:
          type: boolean
        maxRows:
          format: int64
          type: integer
      type: object
    RowSuppression:
      example:
        zero: true
        emptyBlocks: true
        noAccess: true
        underScore: true
        missing: true
        invalid: true
        error: true
        derived: true
      properties:
        zero:
          type: boolean
        missing:
          type: boolean
        underScore:
          type: boolean
        derived:
          type: boolean
        noAccess:
          type: boolean
        emptyBlocks:
          type: boolean
        invalid:
          type: boolean
        error:
          type: boolean
      type: object
    ZoomIn:
      example:
        mode: children
        ancestor: top
      properties:
        ancestor:
          enum:
          - top
          - bottom
          type: string
        mode:
          enum:
          - children
          - descendents
          - base
          type: string
      type: object
    Data:
      example:
        ranges:
        - types:
          - types
          - types
          texts:
          - texts
          - texts
          dataFormats:
          - dataFormats
          - dataFormats
          values:
          - values
          - values
          start: 7
          statuses:
          - statuses
          - statuses
          enumIds:
          - enumIds
          - enumIds
          end: 9
          filters:
          - filters
          - filters
        - types:
          - types
          - types
          texts:
          - texts
          - texts
          dataFormats:
          - dataFormats
          - dataFormats
          values:
          - values
          - values
          start: 7
          statuses:
          - statuses
          - statuses
          enumIds:
          - enumIds
          - enumIds
          end: 9
          filters:
          - filters
          - filters
      properties:
        ranges:
          items:
            $ref: '#/components/schemas/GridRange'
          type: array
      type: object
    Grid:
      example:
        slice:
          dirtyTexts:
          - 5
          - 5
          data:
            ranges:
            - types:
              - types
              - types
              texts:
              - texts
              - texts
              dataFormats:
              - dataFormats
              - dataFormats
              values:
              - values
              - values
              start: 7
              statuses:
              - statuses
              - statuses
              enumIds:
              - enumIds
              - enumIds
              end: 9
              filters:
              - filters
              - filters
            - types:
              - types
              - types
              texts:
              - texts
              - texts
              dataFormats:
              - dataFormats
              - dataFormats
              values:
              - values
              - values
              start: 7
              statuses:
              - statuses
              - statuses
              enumIds:
              - enumIds
              - enumIds
              end: 9
              filters:
              - filters
              - filters
          columns: 2
          dirtyCells:
          - 5
          - 5
          rows: 1
        alias: alias
        dimensions:
        - expanded: true
          hidden: true
          pov: pov
          displayName: displayName
          column: 0
          name: name
          row: 6
        - expanded: true
          hidden: true
          pov: pov
          displayName: displayName
          column: 0
          name: name
          row: 6
      properties:
        dimensions:
          items:
            $ref: '#/components/schemas/GridDimension'
          type: array
        slice:
          $ref: '#/components/schemas/Slice'
        alias:
          type: string
      type: object
    GridDimension:
      example:
        expanded: true
        hidden: true
        pov: pov
        displayName: displayName
        column: 0
        name: name
        row: 6
      properties:
        pov:
          type: string
        expanded:
          type: boolean
        column:
          format: int32
          type: integer
        row:
          format: int32
          type: integer
        displayName:
          type: string
        hidden:
          type: boolean
        name:
          type: string
      type: object
    GridRange:
      example:
        types:
        - types
        - types
        texts:
        - texts
        - texts
        dataFormats:
        - dataFormats
        - dataFormats
        values:
        - values
        - values
        start: 7
        statuses:
        - statuses
        - statuses
        enumIds:
        - enumIds
        - enumIds
        end: 9
        filters:
        - filters
        - filters
      properties:
        statuses:
          items:
            type: string
          type: array
        texts:
          items:
            type: string
          type: array
        enumIds:
          items:
            type: string
          type: array
        dataFormats:
          items:
            type: string
          type: array
        filters:
          items:
            type: string
          type: array
        start:
          format: int32
          type: integer
        types:
          items:
            type: string
          type: array
        end:
          format: int32
          type: integer
        values:
          items:
            type: string
          type: array
      type: object
    Slice:
      example:
        dirtyTexts:
        - 5
        - 5
        data:
          ranges:
          - types:
            - types
            - types
            texts:
            - texts
            - texts
            dataFormats:
            - dataFormats
            - dataFormats
            values:
            - values
            - values
            start: 7
            statuses:
            - statuses
            - statuses
            enumIds:
            - enumIds
            - enumIds
            end: 9
            filters:
            - filters
            - filters
          - types:
            - types
            - types
            texts:
            - texts
            - texts
            dataFormats:
            - dataFormats
            - dataFormats
            values:
            - values
            - values
            start: 7
            statuses:
            - statuses
            - statuses
            enumIds:
            - enumIds
            - enumIds
            end: 9
            filters:
            - filters
            - filters
        columns: 2
        dirtyCells:
        - 5
        - 5
        rows: 1
      properties:
        rows:
          format: int32
          type: integer
        dirtyCells:
          items:
            format: int32
            type: integer
          type: array
        dirtyTexts:
          items:
            format: int32
            type: integer
          type: array
        columns:
          format: int32
          type: integer
        data:
          $ref: '#/components/schemas/Data'
      type: object
    MDXOperation:
      example:
        query: query
      properties:
        query:
          type: string
      type: object
    GridOperation:
      example:
        ranges:
        - - 6
          - 6
        - - 6
          - 6
        grid:
          slice:
            dirtyTexts:
            - 5
            - 5
            data:
              ranges:
              - types:
                - types
                - types
                texts:
                - texts
                - texts
                dataFormats:
                - dataFormats
                - dataFormats
                values:
                - values
                - values
                start: 7
                statuses:
                - statuses
                - statuses
                enumIds:
                - enumIds
                - enumIds
                end: 9
                filters:
                - filters
                - filters
              - types:
                - types
                - types
                texts:
                - texts
                - texts
                dataFormats:
                - dataFormats
                - dataFormats
                values:
                - values
                - values
                start: 7
                statuses:
                - statuses
                - statuses
                enumIds:
                - enumIds
                - enumIds
                end: 9
                filters:
                - filters
                - filters
            columns: 2
            dirtyCells:
            - 5
            - 5
            rows: 1
          alias: alias
          dimensions:
          - expanded: true
            hidden: true
            pov: pov
            displayName: displayName
            column: 0
            name: name
            row: 6
          - expanded: true
            hidden: true
            pov: pov
            displayName: displayName
            column: 0
            name: name
            row: 6
        coordinates:
        - 0
        - 0
        action: zoomin
        alias: alias
      properties:
        grid:
          $ref: '#/components/schemas/Grid'
        action:
          enum:
          - zoomin
          - zoomout
          - keeponly
          - removeonly
          - refresh
          - pivot
          - pivotToPOV
          - submit
          type: string
        alias:
          type: string
        coordinates:
          items:
            format: int32
            type: integer
          type: array
        ranges:
          items:
            items:
              format: int32
              type: integer
            type: array
          type: array
      type: object
    PerformanceFile:
      example:
        lastmodifiedMillis: 0
        size: 6
        name: name
      properties:
        name:
          type: string
        lastmodifiedMillis:
          format: int64
          type: integer
        size:
          format: int64
          type: integer
      type: object
    PerformanceFiles:
      example:
        totalResults: 1
        offset: 2
        hasMore: true
        count: 5
        limit: 5
        items:
        - lastmodifiedMillis: 0
          size: 6
          name: name
        - lastmodifiedMillis: 0
          size: 6
          name: name
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/PerformanceFile'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    HPA:
      example:
        interval: 0
        enabled: true
      properties:
        interval:
          format: int64
          type: integer
        enabled:
          type: boolean
      type: object
    Layout:
      example:
        header:
          userDefault: true
          session: true
          name: name
          databaseDefault: true
          user: user
        spec:
          preferences:
            navigate: true
            cellText: true
            rowSuppression:
              zero: true
              emptyBlocks: true
              noAccess: true
              underScore: true
              missing: true
              invalid: true
              error: true
              derived: true
            includeDescriptionLabel: true
            removeUnSelectedGroup: true
            zoomIn:
              mode: children
              ancestor: top
            missingText: missingText
            columnSuppression:
              zero: true
              emptyBlocks: true
              noAccess: true
              underScore: true
              missing: true
              invalid: true
              error: true
              derived: true
            repeatMemberLabels: true
            noAccessText: noAccessText
            maxRows: 1
            indentation: NONE
            includeSelection: true
            withinSelectedGroup: true
            formulaRetention:
              retrive: true
              comments: true
              focus: true
              zoom: true
              fill: true
          grid:
            data:
              types:
              - - types
                - types
              - - types
                - types
              texts:
              - - texts
                - texts
              - - texts
                - texts
              values:
              - - values
                - values
              - - values
                - values
              dataFormats:
              - - dataFormats
                - dataFormats
              - - dataFormats
                - dataFormats
              statuses:
              - - statuses
                - statuses
              - - statuses
                - statuses
              enumIds:
              - - enumIds
                - enumIds
              - - enumIds
                - enumIds
              filters:
              - - filters
                - filters
              - - filters
                - filters
            alias: alias
            dimensions:
            - expanded: true
              hidden: true
              displayName: displayName
              name: name
              page: 0
              position: 6
              axis: COLUMN
            - expanded: true
              hidden: true
              displayName: displayName
              name: name
              page: 0
              position: 6
              axis: COLUMN
          description: description
      properties:
        header:
          $ref: '#/components/schemas/LayoutHeader'
        spec:
          $ref: '#/components/schemas/LayoutSpec'
      type: object
    LayoutData:
      example:
        types:
        - - types
          - types
        - - types
          - types
        texts:
        - - texts
          - texts
        - - texts
          - texts
        values:
        - - values
          - values
        - - values
          - values
        dataFormats:
        - - dataFormats
          - dataFormats
        - - dataFormats
          - dataFormats
        statuses:
        - - statuses
          - statuses
        - - statuses
          - statuses
        enumIds:
        - - enumIds
          - enumIds
        - - enumIds
          - enumIds
        filters:
        - - filters
          - filters
        - - filters
          - filters
      properties:
        values:
          items:
            items:
              type: string
            type: array
          type: array
        types:
          items:
            items:
              type: string
            type: array
          type: array
        texts:
          items:
            items:
              type: string
            type: array
          type: array
        dataFormats:
          items:
            items:
              type: string
            type: array
          type: array
        statuses:
          items:
            items:
              type: string
            type: array
          type: array
        filters:
          items:
            items:
              type: string
            type: array
          type: array
        enumIds:
          items:
            items:
              type: string
            type: array
          type: array
      type: object
    LayoutDimension:
      example:
        expanded: true
        hidden: true
        displayName: displayName
        name: name
        page: 0
        position: 6
        axis: COLUMN
      properties:
        name:
          type: string
        displayName:
          type: string
        page:
          format: int32
          type: integer
        hidden:
          type: boolean
        expanded:
          type: boolean
        axis:
          enum:
          - COLUMN
          - ROW
          - POV
          type: string
        position:
          format: int32
          type: integer
      type: object
    LayoutGrid:
      example:
        data:
          types:
          - - types
            - types
          - - types
            - types
          texts:
          - - texts
            - texts
          - - texts
            - texts
          values:
          - - values
            - values
          - - values
            - values
          dataFormats:
          - - dataFormats
            - dataFormats
          - - dataFormats
            - dataFormats
          statuses:
          - - statuses
            - statuses
          - - statuses
            - statuses
          enumIds:
          - - enumIds
            - enumIds
          - - enumIds
            - enumIds
          filters:
          - - filters
            - filters
          - - filters
            - filters
        alias: alias
        dimensions:
        - expanded: true
          hidden: true
          displayName: displayName
          name: name
          page: 0
          position: 6
          axis: COLUMN
        - expanded: true
          hidden: true
          displayName: displayName
          name: name
          page: 0
          position: 6
          axis: COLUMN
      properties:
        alias:
          type: string
        dimensions:
          items:
            $ref: '#/components/schemas/LayoutDimension'
          type: array
        data:
          $ref: '#/components/schemas/LayoutData'
      type: object
    LayoutHeader:
      example:
        userDefault: true
        session: true
        name: name
        databaseDefault: true
        user: user
      properties:
        name:
          type: string
        user:
          type: string
        databaseDefault:
          type: boolean
        userDefault:
          type: boolean
        session:
          type: boolean
      type: object
    LayoutPreferences:
      example:
        navigate: true
        cellText: true
        rowSuppression:
          zero: true
          emptyBlocks: true
          noAccess: true
          underScore: true
          missing: true
          invalid: true
          error: true
          derived: true
        includeDescriptionLabel: true
        removeUnSelectedGroup: true
        zoomIn:
          mode: children
          ancestor: top
        missingText: missingText
        columnSuppression:
          zero: true
          emptyBlocks: true
          noAccess: true
          underScore: true
          missing: true
          invalid: true
          error: true
          derived: true
        repeatMemberLabels: true
        noAccessText: noAccessText
        maxRows: 1
        indentation: NONE
        includeSelection: true
        withinSelectedGroup: true
        formulaRetention:
          retrive: true
          comments: true
          focus: true
          zoom: true
          fill: true
      properties:
        indentation:
          enum:
          - NONE
          - SUBITEMS
          - TOTALS
          type: string
        rowSuppression:
          $ref: '#/components/schemas/Suppression'
        columnSuppression:
          $ref: '#/components/schemas/Suppression'
        cellText:
          type: boolean
        zoomIn:
          $ref: '#/components/schemas/ZoomIn'
        navigate:
          type: boolean
        includeSelection:
          type: boolean
        repeatMemberLabels:
          type: boolean
        withinSelectedGroup:
          type: boolean
        removeUnSelectedGroup:
          type: boolean
        includeDescriptionLabel:
          type: boolean
        missingText:
          type: string
        noAccessText:
          type: string
        maxRows:
          format: int32
          type: integer
        formulaRetention:
          $ref: '#/components/schemas/FormulaRetention'
      type: object
    LayoutSpec:
      example:
        preferences:
          navigate: true
          cellText: true
          rowSuppression:
            zero: true
            emptyBlocks: true
            noAccess: true
            underScore: true
            missing: true
            invalid: true
            error: true
            derived: true
          includeDescriptionLabel: true
          removeUnSelectedGroup: true
          zoomIn:
            mode: children
            ancestor: top
          missingText: missingText
          columnSuppression:
            zero: true
            emptyBlocks: true
            noAccess: true
            underScore: true
            missing: true
            invalid: true
            error: true
            derived: true
          repeatMemberLabels: true
          noAccessText: noAccessText
          maxRows: 1
          indentation: NONE
          includeSelection: true
          withinSelectedGroup: true
          formulaRetention:
            retrive: true
            comments: true
            focus: true
            zoom: true
            fill: true
        grid:
          data:
            types:
            - - types
              - types
            - - types
              - types
            texts:
            - - texts
              - texts
            - - texts
              - texts
            values:
            - - values
              - values
            - - values
              - values
            dataFormats:
            - - dataFormats
              - dataFormats
            - - dataFormats
              - dataFormats
            statuses:
            - - statuses
              - statuses
            - - statuses
              - statuses
            enumIds:
            - - enumIds
              - enumIds
            - - enumIds
              - enumIds
            filters:
            - - filters
              - filters
            - - filters
              - filters
          alias: alias
          dimensions:
          - expanded: true
            hidden: true
            displayName: displayName
            name: name
            page: 0
            position: 6
            axis: COLUMN
          - expanded: true
            hidden: true
            displayName: displayName
            name: name
            page: 0
            position: 6
            axis: COLUMN
        description: description
      properties:
        description:
          type: string
        grid:
          $ref: '#/components/schemas/LayoutGrid'
        preferences:
          $ref: '#/components/schemas/LayoutPreferences'
      type: object
    Suppression:
      example:
        zero: true
        emptyBlocks: true
        noAccess: true
        underScore: true
        missing: true
        invalid: true
        error: true
        derived: true
      properties:
        missing:
          type: boolean
        invalid:
          type: boolean
        derived:
          type: boolean
        zero:
          type: boolean
        underScore:
          type: boolean
        noAccess:
          type: boolean
        emptyBlocks:
          type: boolean
        error:
          type: boolean
      type: object
    DefaultLayoutBean:
      example:
        userDefault: true
        databaseDefault: true
      properties:
        userDefault:
          type: boolean
        databaseDefault:
          type: boolean
      type: object
    LayoutMetadata:
      example:
        userDefault: true
        name: name
        dbDefault: true
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        user: user
      properties:
        name:
          type: string
        user:
          type: string
        userDefault:
          type: boolean
        dbDefault:
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    Layouts:
      example:
        totalResults: 0
        offset: 5
        hasMore: true
        count: 6
        limit: 1
        items:
        - userDefault: true
          name: name
          dbDefault: true
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          user: user
        - userDefault: true
          name: name
          dbDefault: true
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          user: user
        properties:
          key: properties
      properties:
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        items:
          items:
            $ref: '#/components/schemas/LayoutMetadata'
          type: array
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    MDXInput:
      example:
        preferences:
          formatString: true
          formatValues: true
          textList: true
          meaninglessCells: true
          memberIdentifierType: NAME
          hideRestrictedData: true
          cellAttributes: true
          urlDrillThrough: true
          dataless: true
        query: query
      properties:
        query:
          type: string
        preferences:
          $ref: '#/components/schemas/NamedQueriesPreferences'
      type: object
    NamedQueriesPreferences:
      example:
        formatString: true
        formatValues: true
        textList: true
        meaninglessCells: true
        memberIdentifierType: NAME
        hideRestrictedData: true
        cellAttributes: true
        urlDrillThrough: true
        dataless: true
      properties:
        dataless:
          type: boolean
        hideRestrictedData:
          type: boolean
        cellAttributes:
          type: boolean
        formatString:
          type: boolean
        formatValues:
          type: boolean
        meaninglessCells:
          type: boolean
        textList:
          type: boolean
        urlDrillThrough:
          type: boolean
        memberIdentifierType:
          enum:
          - NAME
          - ALIAS
          - UNIQUE_NAME
          type: string
      type: object
    Queries:
      example:
        totalResults: 0
        offset: 5
        hasMore: true
        count: 6
        limit: 1
        items:
        - name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          type: MDX
        - name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          type: MDX
        properties:
          key: properties
      properties:
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        items:
          items:
            $ref: '#/components/schemas/QueryMetadata'
          type: array
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    QueryMetadata:
      example:
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        type: MDX
      properties:
        name:
          type: string
        type:
          enum:
          - MDX
          - DATA_SOURCE
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    NamedQuery:
      example:
        query:
          preferences:
            formatString: true
            formatValues: true
            textList: true
            meaninglessCells: true
            memberIdentifierType: NAME
            hideRestrictedData: true
            cellAttributes: true
            urlDrillThrough: true
            dataless: true
          description: description
          spec: spec
        name: name
        type: MDX
      properties:
        name:
          type: string
        type:
          enum:
          - MDX
          - DATA_SOURCE
          type: string
        query:
          $ref: '#/components/schemas/Query'
      type: object
    Query:
      example:
        preferences:
          formatString: true
          formatValues: true
          textList: true
          meaninglessCells: true
          memberIdentifierType: NAME
          hideRestrictedData: true
          cellAttributes: true
          urlDrillThrough: true
          dataless: true
        description: description
        spec: spec
      properties:
        description:
          type: string
        spec:
          type: string
        preferences:
          $ref: '#/components/schemas/NamedQueriesPreferences'
      type: object
    AttributeOutlineSettings:
      example:
        numericRangesRepresent: numericRangesRepresent
        calcMinimumMember: calcMinimumMember
        dateMemberNames: dateMemberNames
        prefixSuffixValue: prefixSuffixValue
        calcCountMember: calcCountMember
        calcAverageMember: calcAverageMember
        falseMemberName: falseMemberName
        trueMemberName: trueMemberName
        calcSumMember: calcSumMember
        prefixSuffixSeparator: prefixSuffixSeparator
        calcDimensionName: calcDimensionName
        calcMaximumMember: calcMaximumMember
        prefixSuffixFormat: prefixSuffixFormat
      properties:
        prefixSuffixValue:
          type: string
        prefixSuffixSeparator:
          type: string
        prefixSuffixFormat:
          type: string
        trueMemberName:
          type: string
        falseMemberName:
          type: string
        dateMemberNames:
          type: string
        numericRangesRepresent:
          type: string
        calcDimensionName:
          type: string
        calcSumMember:
          type: string
        calcCountMember:
          type: string
        calcMinimumMember:
          type: string
        calcMaximumMember:
          type: string
        calcAverageMember:
          type: string
      type: object
      xml:
        name: attributes
    GeneralOutlineSettings:
      example:
        allowDuplicateMemberNames: true
        typeMeasuresEnabled: true
        varyingAttributesEnabled: true
        dateFormat: dateFormat
        autoConfigure: true
        outlineType: outlineType
        timeModified: 0
        caseSensitiveMembers: true
      properties:
        caseSensitiveMembers:
          type: boolean
        outlineType:
          type: string
        allowDuplicateMemberNames:
          type: boolean
        typeMeasuresEnabled:
          type: boolean
        dateFormat:
          type: string
        varyingAttributesEnabled:
          type: boolean
        timeModified:
          format: int64
          type: integer
        autoConfigure:
          type: boolean
      type: object
      xml:
        name: general
    OutlineSettingsList:
      example:
        general:
          allowDuplicateMemberNames: true
          typeMeasuresEnabled: true
          varyingAttributesEnabled: true
          dateFormat: dateFormat
          autoConfigure: true
          outlineType: outlineType
          timeModified: 0
          caseSensitiveMembers: true
        attributes:
          numericRangesRepresent: numericRangesRepresent
          calcMinimumMember: calcMinimumMember
          dateMemberNames: dateMemberNames
          prefixSuffixValue: prefixSuffixValue
          calcCountMember: calcCountMember
          calcAverageMember: calcAverageMember
          falseMemberName: falseMemberName
          trueMemberName: trueMemberName
          calcSumMember: calcSumMember
          prefixSuffixSeparator: prefixSuffixSeparator
          calcDimensionName: calcDimensionName
          calcMaximumMember: calcMaximumMember
          prefixSuffixFormat: prefixSuffixFormat
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        general:
          $ref: '#/components/schemas/GeneralOutlineSettings'
        attributes:
          $ref: '#/components/schemas/AttributeOutlineSettings'
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
      xml:
        name: outlineSettings
    StartupSettings:
      example:
        startDatabaseWhenApplicationStarts: true
        allowUsersToStartDatabase: true
      properties:
        allowUsersToStartDatabase:
          type: boolean
        startDatabaseWhenApplicationStarts:
          type: boolean
      type: object
      xml:
        name: startup
    CompressionSettings:
      example:
        level0MB: 0.8008281904610115
        isCompression: true
        averageBundleFill: 6.027456183070403
        storedLevel0Members: 5.962133916683182
        dimensionName: dimensionName
        averageValueLength: 1.4658129805029452
      properties:
        dimensionName:
          type: string
        isCompression:
          type: boolean
        level0MB:
          format: double
          type: number
        averageBundleFill:
          format: double
          type: number
        averageValueLength:
          format: double
          type: number
        storedLevel0Members:
          format: double
          type: number
      type: object
    TransactionSettings:
      example:
        commitRows: 1
        commitBlocks: 6
        concurrencyPreImageAccess: true
        committedAccess: true
        concurrencyWaitSeconds: 0
      properties:
        committedAccess:
          type: boolean
        concurrencyWaitSeconds:
          format: int32
          type: integer
        concurrencyPreImageAccess:
          type: boolean
        commitBlocks:
          format: int64
          type: integer
        commitRows:
          format: int64
          type: integer
      type: object
      xml:
        name: transactions
    PatchElement:
      example:
        op: op
        path: path
        from: from
        value: "{}"
      properties:
        op:
          type: string
        path:
          type: string
        value:
          properties: {}
          type: object
        from:
          type: string
      type: object
    StatisticsDimensions:
      example:
        name: name
        bits: 0.8008281904610115
        levels: levels
      properties:
        name:
          type: string
        levels:
          type: string
        bits:
          format: double
          type: number
      type: object
    StorageStatistics:
      example:
        numberOfInputLevelCells: 5
        numberOfExistingBlocks: 1.2315135367772556
        pageFileSize: 9
        inputLevelDataSize: 4
        potentialNumberOfBlocks: 1.4894159098541704
        maxKeyLengthBits: 6
        numberOfIncrementalAggregateCells: 3
        aggregateDataSize: 7
        numberOfAggregateViews: 7
        existingUpperLevelBlocks: 7.457744773683766
        numberOfIncrementalDataSlices: 5
        percentageOfMaximumBlocksExisting: 4.965218492984954
        numberOfAggregateCells: 9
        blockSize: 1
        costOfQueryingIncrementalData: 2.027123023002322
        maxKeyLengthBytes: 1
        compressionRatio: 5.025004791520295
        existingLevelZeroBlocks: 6.84685269835264
        blockDensity: 1.1730742509559433
        averageClusteringRatio: 9.965781217890562
        indexFileSize: 6
        numberOfIncrementalInputCells: 2
        dimensions:
        - name: name
          bits: 0.8008281904610115
          levels: levels
        - name: name
          bits: 0.8008281904610115
          levels: levels
      properties:
        dimensions:
          items:
            $ref: '#/components/schemas/StatisticsDimensions'
          type: array
        maxKeyLengthBits:
          format: int32
          type: integer
        maxKeyLengthBytes:
          format: int32
          type: integer
        numberOfInputLevelCells:
          format: int32
          type: integer
        numberOfIncrementalDataSlices:
          format: int32
          type: integer
        numberOfIncrementalInputCells:
          format: int32
          type: integer
        numberOfAggregateViews:
          format: int32
          type: integer
        numberOfAggregateCells:
          format: int32
          type: integer
        numberOfIncrementalAggregateCells:
          format: int32
          type: integer
        costOfQueryingIncrementalData:
          format: double
          type: number
        inputLevelDataSize:
          format: int32
          type: integer
        aggregateDataSize:
          format: int32
          type: integer
        numberOfExistingBlocks:
          format: double
          type: number
        blockSize:
          format: int32
          type: integer
        potentialNumberOfBlocks:
          format: double
          type: number
        existingLevelZeroBlocks:
          format: double
          type: number
        existingUpperLevelBlocks:
          format: double
          type: number
        blockDensity:
          format: double
          type: number
        percentageOfMaximumBlocksExisting:
          format: double
          type: number
        compressionRatio:
          format: double
          type: number
        averageClusteringRatio:
          format: double
          type: number
        pageFileSize:
          format: int64
          type: integer
        indexFileSize:
          format: int64
          type: integer
      type: object
    RuntimeStatistics:
      example:
        pageWritesSinceLastStartup: 5.637376656633329
        numberOfIndexPageReads: 1.2315135367772556
        numberOfDataBlockReads: 1.4894159098541704
        numberOfDataBlockWrites: 6.84685269835264
        pageReadsSinceLastStartup: 5.962133916683182
        currentCacheSizeLimit: 1.4658129805029452
        pageSize: 2.3021358869347655
        currentCacheSize: 6.027456183070403
        temporaryDiskSpaceAllocated: 3.616076749251911
        cacheHitRatio: 0.8008281904610115
        numberOfIndexPageWrites: 1.0246457001441578
        diskSpaceAllocatedForData: 7.061401241503109
        temporaryDiskSpaceUsed: 2.027123023002322
        hitRatioOnIndexCache: 4.145608029883936
        hitRatioOnDataFileCache: 7.457744773683766
        diskSpaceUsedByData: 9.301444243932576
        hitRatioOnDataCache: 7.386281948385884
      properties:
        cacheHitRatio:
          format: double
          type: number
        currentCacheSize:
          format: double
          type: number
        currentCacheSizeLimit:
          format: double
          type: number
        pageReadsSinceLastStartup:
          format: double
          type: number
        pageWritesSinceLastStartup:
          format: double
          type: number
        pageSize:
          format: double
          type: number
        diskSpaceAllocatedForData:
          format: double
          type: number
        diskSpaceUsedByData:
          format: double
          type: number
        temporaryDiskSpaceAllocated:
          format: double
          type: number
        temporaryDiskSpaceUsed:
          format: double
          type: number
        hitRatioOnIndexCache:
          format: double
          type: number
        hitRatioOnDataCache:
          format: double
          type: number
        numberOfIndexPageReads:
          format: double
          type: number
        numberOfIndexPageWrites:
          format: double
          type: number
        numberOfDataBlockReads:
          format: double
          type: number
        numberOfDataBlockWrites:
          format: double
          type: number
        hitRatioOnDataFileCache:
          format: double
          type: number
      type: object
    CalculationSettings:
      example:
        aggregateMissingValues: true
        createBlocksOnEquations: true
        twoPassCalculation: true
      properties:
        aggregateMissingValues:
          type: boolean
        createBlocksOnEquations:
          type: boolean
        twoPassCalculation:
          type: boolean
      type: object
      xml:
        name: calculation
    BufferSettings:
      example:
        dataRetrievalBufferSize: 0
        dataRetrievalSortBufferSize: 6
      properties:
        dataRetrievalBufferSize:
          format: int64
          type: integer
        dataRetrievalSortBufferSize:
          format: int64
          type: integer
      type: object
      xml:
        name: buffers
    CacheSettings:
      example:
        indexCacheSetting: 1
        dataCacheSetting: 7
        indexPageCurrentValue: 2
        indexPageSetting: 3
        dataFileCacheCurrentValue: 2
        indexCacheCurrentValue: 5
        dataFileCacheSetting: 5
        dataCacheCurrentValue: 9
        cacheMemoryLocking: true
      properties:
        cacheMemoryLocking:
          type: boolean
        indexCacheSetting:
          format: int64
          type: integer
        indexCacheCurrentValue:
          format: int64
          type: integer
        dataFileCacheSetting:
          format: int64
          type: integer
        dataFileCacheCurrentValue:
          format: int64
          type: integer
        dataCacheSetting:
          format: int64
          type: integer
        dataCacheCurrentValue:
          format: int64
          type: integer
        indexPageSetting:
          format: int32
          type: integer
        indexPageCurrentValue:
          format: int32
          type: integer
      type: object
      xml:
        name: caches
    QueryTrackingInputs:
      example:
        fileName: fileName
      properties:
        fileName:
          type: string
      type: object
    OutlineDateFormat:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
      xml:
        name: dateformats
    GeneralStatistics:
      example:
        databaseElapsedTime: databaseElapsedTime
        loadStatus: loadStatus
        numberOfDimensions: 1
        numberOfConnections: 6
        databaseStartTime: 0
      properties:
        databaseStartTime:
          format: int64
          type: integer
        databaseElapsedTime:
          type: string
        numberOfConnections:
          format: int32
          type: integer
        numberOfDimensions:
          format: int32
          type: integer
        loadStatus:
          type: string
      type: object
    StatisticsList:
      example:
        general:
          databaseElapsedTime: databaseElapsedTime
          loadStatus: loadStatus
          numberOfDimensions: 1
          numberOfConnections: 6
          databaseStartTime: 0
        runtime:
          pageWritesSinceLastStartup: 5.637376656633329
          numberOfIndexPageReads: 1.2315135367772556
          numberOfDataBlockReads: 1.4894159098541704
          numberOfDataBlockWrites: 6.84685269835264
          pageReadsSinceLastStartup: 5.962133916683182
          currentCacheSizeLimit: 1.4658129805029452
          pageSize: 2.3021358869347655
          currentCacheSize: 6.027456183070403
          temporaryDiskSpaceAllocated: 3.616076749251911
          cacheHitRatio: 0.8008281904610115
          numberOfIndexPageWrites: 1.0246457001441578
          diskSpaceAllocatedForData: 7.061401241503109
          temporaryDiskSpaceUsed: 2.027123023002322
          hitRatioOnIndexCache: 4.145608029883936
          hitRatioOnDataFileCache: 7.457744773683766
          diskSpaceUsedByData: 9.301444243932576
          hitRatioOnDataCache: 7.386281948385884
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        storage:
          numberOfInputLevelCells: 5
          numberOfExistingBlocks: 1.2315135367772556
          pageFileSize: 9
          inputLevelDataSize: 4
          potentialNumberOfBlocks: 1.4894159098541704
          maxKeyLengthBits: 6
          numberOfIncrementalAggregateCells: 3
          aggregateDataSize: 7
          numberOfAggregateViews: 7
          existingUpperLevelBlocks: 7.457744773683766
          numberOfIncrementalDataSlices: 5
          percentageOfMaximumBlocksExisting: 4.965218492984954
          numberOfAggregateCells: 9
          blockSize: 1
          costOfQueryingIncrementalData: 2.027123023002322
          maxKeyLengthBytes: 1
          compressionRatio: 5.025004791520295
          existingLevelZeroBlocks: 6.84685269835264
          blockDensity: 1.1730742509559433
          averageClusteringRatio: 9.965781217890562
          indexFileSize: 6
          numberOfIncrementalInputCells: 2
          dimensions:
          - name: name
            bits: 0.8008281904610115
            levels: levels
          - name: name
            bits: 0.8008281904610115
            levels: levels
      properties:
        general:
          $ref: '#/components/schemas/GeneralStatistics'
        storage:
          $ref: '#/components/schemas/StorageStatistics'
        runtime:
          $ref: '#/components/schemas/RuntimeStatistics'
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
      xml:
        name: statistics
    GeneralSettings:
      example:
        description: description
        queryTracking: true
      properties:
        description:
          type: string
        queryTracking:
          type: boolean
      type: object
      xml:
        name: general
    SettingsList:
      example:
        calculation:
          aggregateMissingValues: true
          createBlocksOnEquations: true
          twoPassCalculation: true
        general:
          description: description
          queryTracking: true
        caches:
          indexCacheSetting: 1
          dataCacheSetting: 7
          indexPageCurrentValue: 2
          indexPageSetting: 3
          dataFileCacheCurrentValue: 2
          indexCacheCurrentValue: 5
          dataFileCacheSetting: 5
          dataCacheCurrentValue: 9
          cacheMemoryLocking: true
        buffers:
          dataRetrievalBufferSize: 0
          dataRetrievalSortBufferSize: 6
        startup:
          startDatabaseWhenApplicationStarts: true
          allowUsersToStartDatabase: true
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        compression:
        - level0MB: 0.8008281904610115
          isCompression: true
          averageBundleFill: 6.027456183070403
          storedLevel0Members: 5.962133916683182
          dimensionName: dimensionName
          averageValueLength: 1.4658129805029452
        - level0MB: 0.8008281904610115
          isCompression: true
          averageBundleFill: 6.027456183070403
          storedLevel0Members: 5.962133916683182
          dimensionName: dimensionName
          averageValueLength: 1.4658129805029452
        transactions:
          commitRows: 1
          commitBlocks: 6
          concurrencyPreImageAccess: true
          committedAccess: true
          concurrencyWaitSeconds: 0
      properties:
        general:
          $ref: '#/components/schemas/GeneralSettings'
        startup:
          $ref: '#/components/schemas/StartupSettings'
        calculation:
          $ref: '#/components/schemas/CalculationSettings'
        buffers:
          $ref: '#/components/schemas/BufferSettings'
        compression:
          items:
            $ref: '#/components/schemas/CompressionSettings'
          type: array
        caches:
          $ref: '#/components/schemas/CacheSettings'
        transactions:
          $ref: '#/components/schemas/TransactionSettings'
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
      xml:
        name: settings
    AppStartupSettings:
      example:
        allowUsersToStartApplication: true
        startApplicationWhenServerStarts: true
      properties:
        allowUsersToStartApplication:
          type: boolean
        startApplicationWhenServerStarts:
          type: boolean
      type: object
      xml:
        name: startup
    AppSecuritySettings:
      example:
        allowCommands: true
        allowConnects: true
        allowUpdates: true
      properties:
        allowCommands:
          type: boolean
        allowConnects:
          type: boolean
        allowUpdates:
          type: boolean
      type: object
      xml:
        name: security
    ApplicationStatistics:
      example:
        applicationElapsedTime: applicationElapsedTime
        applicationStartTime: 0
        loadStatus: loadStatus
        numberOfConnections: 6
      properties:
        applicationStartTime:
          format: int64
          type: integer
        applicationElapsedTime:
          type: string
        numberOfConnections:
          format: int32
          type: integer
        loadStatus:
          type: string
      type: object
    AppGeneralSettings:
      example:
        timeoutOnDataBlockLocks: 0
        logLevelAsString: logLevelAsString
        easManagedApp: true
        maxAttachmentFileSizeInKbs: 6
        description: description
        pendingCacheSizeLimitInMbs: 1
      properties:
        description:
          type: string
        logLevelAsString:
          type: string
        easManagedApp:
          type: boolean
        timeoutOnDataBlockLocks:
          format: int64
          type: integer
        maxAttachmentFileSizeInKbs:
          format: int64
          type: integer
        pendingCacheSizeLimitInMbs:
          format: int64
          type: integer
      type: object
      xml:
        name: general
    AppSettingsList:
      example:
        general:
          timeoutOnDataBlockLocks: 0
          logLevelAsString: logLevelAsString
          easManagedApp: true
          maxAttachmentFileSizeInKbs: 6
          description: description
          pendingCacheSizeLimitInMbs: 1
        security:
          allowCommands: true
          allowConnects: true
          allowUpdates: true
        startup:
          allowUsersToStartApplication: true
          startApplicationWhenServerStarts: true
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        general:
          $ref: '#/components/schemas/AppGeneralSettings'
        startup:
          $ref: '#/components/schemas/AppStartupSettings'
        security:
          $ref: '#/components/schemas/AppSecuritySettings'
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
      xml:
        name: settings
    MemberBean:
      example:
        activeAliasName: activeAliasName
        aliases:
          key: aliases
        memberHasUniqueName: true
        generationNumber: 1
        dataStorageType: dataStorageType
        type: NONE
        dimensionName: dimensionName
        parentName: parentName
        numberOfChildren: 0
        uniqueName: uniqueName
        uda:
        - uda
        - uda
        name: name
        levelNumber: 6
        previousSiblingsCount: 2
        memberSolveOrder: 5
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        attribute: true
        dimension: true
        uniqueId: uniqueId
        descendantsCount: 5
        account: true
        memberId: memberId
      properties:
        name:
          type: string
        dimensionName:
          type: string
        numberOfChildren:
          format: int32
          type: integer
        levelNumber:
          format: int32
          type: integer
        generationNumber:
          format: int32
          type: integer
        aliases:
          additionalProperties:
            type: string
          type: object
        activeAliasName:
          type: string
        memberHasUniqueName:
          type: boolean
        uniqueName:
          type: string
        memberId:
          type: string
        uniqueId:
          type: string
        type:
          enum:
          - NONE
          - NUMERIC
          - SMARTLIST
          - DATE
          type: string
        memberSolveOrder:
          format: int32
          type: integer
        descendantsCount:
          format: int64
          type: integer
        previousSiblingsCount:
          format: int32
          type: integer
        dimension:
          type: boolean
        attribute:
          type: boolean
        account:
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        uda:
          items:
            type: string
          type: array
        dataStorageType:
          type: string
        parentName:
          type: string
      type: object
    ExportOptions:
      example:
        tree: true
        aliasTable: aliasTable
        dimensions:
        - dimensions
        - dimensions
      properties:
        aliasTable:
          type: string
        dimensions:
          items:
            type: string
          type: array
        tree:
          type: boolean
      type: object
    RestCollectionResponse:
      example:
        totalResults: 0
        offset: 5
        hasMore: true
        limit: 6
        count: 1
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        items:
        - "{}"
        - "{}"
      properties:
        items:
          items:
            properties: {}
            type: object
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        count:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    AreaBean:
      example:
        sourceArea: sourceArea
        slices:
        - sourceMember: sourceMember
          targetMember: targetMember
        - sourceMember: sourceMember
          targetMember: targetMember
        targetArea: targetArea
        sourceCellCount: 5
        targetCellCount: 2
      properties:
        sourceArea:
          type: string
        targetArea:
          type: string
        sourceCellCount:
          format: int64
          type: integer
        targetCellCount:
          format: int64
          type: integer
        slices:
          items:
            $ref: '#/components/schemas/MemberMappingBean'
          type: array
      type: object
    ConnectionInfoBean:
      example:
        alterCredentials: true
        databaseName: databaseName
        measuresDimensionName: measuresDimensionName
        applicationLevelConnection: true
        factTableName: factTableName
        serverName: serverName
        description: description
        userName: userName
        schemaName: schemaName
        password: password
        essbaseToColumnMap:
          arr:
          - essbaseName: essbaseName
            columnName: columnName
          - essbaseName: essbaseName
            columnName: columnName
        connectionName: connectionName
        datasourceName: datasourceName
        applicationName: applicationName
        essbaseToDataSourceMap:
          dimensions:
          - sortOption: NONE
            hierarchyType: EXISTING
            added: true
            generations:
            - number: 0
              unique: true
              name: name
            - number: 0
              unique: true
              name: name
            memberName: memberName
            aggregateLevelUsage: 6
            allowUDAChanges: true
            configOption: EXISTING
            type: EXISTING
            allowFormulaChanges: true
            allowPropertyChanges: true
            addMemberOption: GENERATION
            allowassociationChanges: true
            share: true
            incrementalSort: true
            measureOptions:
              currencyName: currencyName
              timeBalanceOption: EXISTING
              twoPass: true
              skip: NONE
              currencyCategory: currencyCategory
              varianceReporting: EXISTING
              currencyConversion: EXISTING
            dimensionSolveOrder: 5
            updateOption: MERGE
            autoFixSharedMember: true
            flexible: true
            unique: EXISTING
            name: name
            attributeOptions:
              scadisAssociationMode: NOOVERWRITE
              scaassociationMode: NOOVERWRITE
              indepDimensions:
              - name: name
                type: CONTINUOUS
              - name: name
                type: CONTINUOUS
              modified: true
              type: NUMERIC
              baseDimension: baseDimension
            storageType: EXISTING
            createAttributeMembers: true
            levels:
            - number: 0
              unique: true
              name: name
            - number: 0
              unique: true
              name: name
            allowMoves: NOTOK
            solveOrder: 1
          - sortOption: NONE
            hierarchyType: EXISTING
            added: true
            generations:
            - number: 0
              unique: true
              name: name
            - number: 0
              unique: true
              name: name
            memberName: memberName
            aggregateLevelUsage: 6
            allowUDAChanges: true
            configOption: EXISTING
            type: EXISTING
            allowFormulaChanges: true
            allowPropertyChanges: true
            addMemberOption: GENERATION
            allowassociationChanges: true
            share: true
            incrementalSort: true
            measureOptions:
              currencyName: currencyName
              timeBalanceOption: EXISTING
              twoPass: true
              skip: NONE
              currencyCategory: currencyCategory
              varianceReporting: EXISTING
              currencyConversion: EXISTING
            dimensionSolveOrder: 5
            updateOption: MERGE
            autoFixSharedMember: true
            flexible: true
            unique: EXISTING
            name: name
            attributeOptions:
              scadisAssociationMode: NOOVERWRITE
              scaassociationMode: NOOVERWRITE
              indepDimensions:
              - name: name
                type: CONTINUOUS
              - name: name
                type: CONTINUOUS
              modified: true
              type: NUMERIC
              baseDimension: baseDimension
            storageType: EXISTING
            createAttributeMembers: true
            levels:
            - number: 0
              unique: true
              name: name
            - number: 0
              unique: true
              name: name
            allowMoves: NOTOK
            solveOrder: 1
        applicationLevelDatasource: true
      properties:
        connectionName:
          type: string
        serverName:
          type: string
        userName:
          type: string
        password:
          type: string
        description:
          type: string
        applicationName:
          type: string
        databaseName:
          type: string
        datasourceName:
          type: string
        measuresDimensionName:
          type: string
        schemaName:
          type: string
        factTableName:
          type: string
        essbaseToColumnMap:
          $ref: '#/components/schemas/EsbToColMap'
        essbaseToDataSourceMap:
          $ref: '#/components/schemas/EssToDsMapDTO'
        alterCredentials:
          type: boolean
        applicationLevelConnection:
          type: boolean
        applicationLevelDatasource:
          type: boolean
      type: object
    Dimension:
      example:
        sortOption: NONE
        hierarchyType: EXISTING
        added: true
        generations:
        - number: 0
          unique: true
          name: name
        - number: 0
          unique: true
          name: name
        memberName: memberName
        aggregateLevelUsage: 6
        allowUDAChanges: true
        configOption: EXISTING
        type: EXISTING
        allowFormulaChanges: true
        allowPropertyChanges: true
        addMemberOption: GENERATION
        allowassociationChanges: true
        share: true
        incrementalSort: true
        measureOptions:
          currencyName: currencyName
          timeBalanceOption: EXISTING
          twoPass: true
          skip: NONE
          currencyCategory: currencyCategory
          varianceReporting: EXISTING
          currencyConversion: EXISTING
        dimensionSolveOrder: 5
        updateOption: MERGE
        autoFixSharedMember: true
        flexible: true
        unique: EXISTING
        name: name
        attributeOptions:
          scadisAssociationMode: NOOVERWRITE
          scaassociationMode: NOOVERWRITE
          indepDimensions:
          - name: name
            type: CONTINUOUS
          - name: name
            type: CONTINUOUS
          modified: true
          type: NUMERIC
          baseDimension: baseDimension
        storageType: EXISTING
        createAttributeMembers: true
        levels:
        - number: 0
          unique: true
          name: name
        - number: 0
          unique: true
          name: name
        allowMoves: NOTOK
        solveOrder: 1
      properties:
        generations:
          items:
            $ref: '#/components/schemas/Level'
          type: array
        levels:
          items:
            $ref: '#/components/schemas/Level'
          type: array
        allowassociationChanges:
          type: boolean
        allowFormulaChanges:
          type: boolean
        allowPropertyChanges:
          type: boolean
        allowUDAChanges:
          type: boolean
        measureOptions:
          $ref: '#/components/schemas/MeasureOptions'
        aggregateLevelUsage:
          format: int32
          type: integer
        addMemberOption:
          enum:
          - GENERATION
          - SIBLING_LOWEST_LEVEL
          - CHILD
          - SIBLING_MATCHING_STRING
          - LEVEL
          - PARENT_CHILD
          - GEN_NULLS
          - LEVEL_NULLS
          type: string
        attributeOptions:
          $ref: '#/components/schemas/AttributeOptions'
        configOption:
          enum:
          - EXISTING
          - DENSE
          - SPARSE
          type: string
        unique:
          enum:
          - EXISTING
          - UNIQUE
          - DUPLICATE
          - NONE
          type: string
        hierarchyType:
          enum:
          - EXISTING
          - MULTIPLE
          - STORED
          - DYNAMIC
          type: string
        sortOption:
          enum:
          - NONE
          - ASCENDING
          - DESCENDING
          type: string
        storageType:
          enum:
          - EXISTING
          - STORE
          - NEVER_SHARE
          - LABEL_ONLY
          - DYNAMIC_CALC_STORE
          - DYNAMIC_CALC
          type: string
        type:
          enum:
          - EXISTING
          - NONE
          - ACCOUNTS
          - TIME
          - COUNTRY
          - ATTRIBUTES
          type: string
        updateOption:
          enum:
          - MERGE
          - REMOVE_UNSPECIFIED
          - RESET_DIMENSION
          type: string
        allowMoves:
          enum:
          - NOTOK
          - OK
          - IGNORE
          - GEN2
          - NOTGEN2
          type: string
        solveOrder:
          format: int32
          type: integer
        createAttributeMembers:
          type: boolean
        share:
          type: boolean
        incrementalSort:
          type: boolean
        autoFixSharedMember:
          type: boolean
        flexible:
          type: boolean
        memberName:
          type: string
        name:
          type: string
        dimensionSolveOrder:
          format: int32
          type: integer
        added:
          type: boolean
      type: object
    EsbToColMap:
      example:
        arr:
        - essbaseName: essbaseName
          columnName: columnName
        - essbaseName: essbaseName
          columnName: columnName
      properties:
        arr:
          items:
            $ref: '#/components/schemas/EsbToColMapInfo'
          type: array
      type: object
    EsbToColMapInfo:
      example:
        essbaseName: essbaseName
        columnName: columnName
      properties:
        essbaseName:
          type: string
        columnName:
          type: string
      type: object
    EssToDsMapDTO:
      example:
        dimensions:
        - sortOption: NONE
          hierarchyType: EXISTING
          added: true
          generations:
          - number: 0
            unique: true
            name: name
          - number: 0
            unique: true
            name: name
          memberName: memberName
          aggregateLevelUsage: 6
          allowUDAChanges: true
          configOption: EXISTING
          type: EXISTING
          allowFormulaChanges: true
          allowPropertyChanges: true
          addMemberOption: GENERATION
          allowassociationChanges: true
          share: true
          incrementalSort: true
          measureOptions:
            currencyName: currencyName
            timeBalanceOption: EXISTING
            twoPass: true
            skip: NONE
            currencyCategory: currencyCategory
            varianceReporting: EXISTING
            currencyConversion: EXISTING
          dimensionSolveOrder: 5
          updateOption: MERGE
          autoFixSharedMember: true
          flexible: true
          unique: EXISTING
          name: name
          attributeOptions:
            scadisAssociationMode: NOOVERWRITE
            scaassociationMode: NOOVERWRITE
            indepDimensions:
            - name: name
              type: CONTINUOUS
            - name: name
              type: CONTINUOUS
            modified: true
            type: NUMERIC
            baseDimension: baseDimension
          storageType: EXISTING
          createAttributeMembers: true
          levels:
          - number: 0
            unique: true
            name: name
          - number: 0
            unique: true
            name: name
          allowMoves: NOTOK
          solveOrder: 1
        - sortOption: NONE
          hierarchyType: EXISTING
          added: true
          generations:
          - number: 0
            unique: true
            name: name
          - number: 0
            unique: true
            name: name
          memberName: memberName
          aggregateLevelUsage: 6
          allowUDAChanges: true
          configOption: EXISTING
          type: EXISTING
          allowFormulaChanges: true
          allowPropertyChanges: true
          addMemberOption: GENERATION
          allowassociationChanges: true
          share: true
          incrementalSort: true
          measureOptions:
            currencyName: currencyName
            timeBalanceOption: EXISTING
            twoPass: true
            skip: NONE
            currencyCategory: currencyCategory
            varianceReporting: EXISTING
            currencyConversion: EXISTING
          dimensionSolveOrder: 5
          updateOption: MERGE
          autoFixSharedMember: true
          flexible: true
          unique: EXISTING
          name: name
          attributeOptions:
            scadisAssociationMode: NOOVERWRITE
            scaassociationMode: NOOVERWRITE
            indepDimensions:
            - name: name
              type: CONTINUOUS
            - name: name
              type: CONTINUOUS
            modified: true
            type: NUMERIC
            baseDimension: baseDimension
          storageType: EXISTING
          createAttributeMembers: true
          levels:
          - number: 0
            unique: true
            name: name
          - number: 0
            unique: true
            name: name
          allowMoves: NOTOK
          solveOrder: 1
      properties:
        dimensions:
          items:
            $ref: '#/components/schemas/Dimension'
          type: array
      type: object
      xml:
        name: EssToDsMapDTO
    Generation:
      properties:
        generationNumber:
          format: int32
          type: integer
        columnName:
          type: string
      required:
      - columnName
      - generationNumber
      type: object
      xml:
        name: Generation
    MemberMappingBean:
      example:
        sourceMember: sourceMember
        targetMember: targetMember
      properties:
        sourceMember:
          type: string
        targetMember:
          type: string
      type: object
    PartitionBean:
      example:
        targetInfo:
          alterCredentials: true
          databaseName: databaseName
          measuresDimensionName: measuresDimensionName
          applicationLevelConnection: true
          factTableName: factTableName
          serverName: serverName
          description: description
          userName: userName
          schemaName: schemaName
          password: password
          essbaseToColumnMap:
            arr:
            - essbaseName: essbaseName
              columnName: columnName
            - essbaseName: essbaseName
              columnName: columnName
          connectionName: connectionName
          datasourceName: datasourceName
          applicationName: applicationName
          essbaseToDataSourceMap:
            dimensions:
            - sortOption: NONE
              hierarchyType: EXISTING
              added: true
              generations:
              - number: 0
                unique: true
                name: name
              - number: 0
                unique: true
                name: name
              memberName: memberName
              aggregateLevelUsage: 6
              allowUDAChanges: true
              configOption: EXISTING
              type: EXISTING
              allowFormulaChanges: true
              allowPropertyChanges: true
              addMemberOption: GENERATION
              allowassociationChanges: true
              share: true
              incrementalSort: true
              measureOptions:
                currencyName: currencyName
                timeBalanceOption: EXISTING
                twoPass: true
                skip: NONE
                currencyCategory: currencyCategory
                varianceReporting: EXISTING
                currencyConversion: EXISTING
              dimensionSolveOrder: 5
              updateOption: MERGE
              autoFixSharedMember: true
              flexible: true
              unique: EXISTING
              name: name
              attributeOptions:
                scadisAssociationMode: NOOVERWRITE
                scaassociationMode: NOOVERWRITE
                indepDimensions:
                - name: name
                  type: CONTINUOUS
                - name: name
                  type: CONTINUOUS
                modified: true
                type: NUMERIC
                baseDimension: baseDimension
              storageType: EXISTING
              createAttributeMembers: true
              levels:
              - number: 0
                unique: true
                name: name
              - number: 0
                unique: true
                name: name
              allowMoves: NOTOK
              solveOrder: 1
            - sortOption: NONE
              hierarchyType: EXISTING
              added: true
              generations:
              - number: 0
                unique: true
                name: name
              - number: 0
                unique: true
                name: name
              memberName: memberName
              aggregateLevelUsage: 6
              allowUDAChanges: true
              configOption: EXISTING
              type: EXISTING
              allowFormulaChanges: true
              allowPropertyChanges: true
              addMemberOption: GENERATION
              allowassociationChanges: true
              share: true
              incrementalSort: true
              measureOptions:
                currencyName: currencyName
                timeBalanceOption: EXISTING
                twoPass: true
                skip: NONE
                currencyCategory: currencyCategory
                varianceReporting: EXISTING
                currencyConversion: EXISTING
              dimensionSolveOrder: 5
              updateOption: MERGE
              autoFixSharedMember: true
              flexible: true
              unique: EXISTING
              name: name
              attributeOptions:
                scadisAssociationMode: NOOVERWRITE
                scaassociationMode: NOOVERWRITE
                indepDimensions:
                - name: name
                  type: CONTINUOUS
                - name: name
                  type: CONTINUOUS
                modified: true
                type: NUMERIC
                baseDimension: baseDimension
              storageType: EXISTING
              createAttributeMembers: true
              levels:
              - number: 0
                unique: true
                name: name
              - number: 0
                unique: true
                name: name
              allowMoves: NOTOK
              solveOrder: 1
          applicationLevelDatasource: true
        errorMessage: errorMessage
        federatedTypeAV: true
        areas:
        - sourceArea: sourceArea
          slices:
          - sourceMember: sourceMember
            targetMember: targetMember
          - sourceMember: sourceMember
            targetMember: targetMember
          targetArea: targetArea
          sourceCellCount: 5
          targetCellCount: 2
        - sourceArea: sourceArea
          slices:
          - sourceMember: sourceMember
            targetMember: targetMember
          - sourceMember: sourceMember
            targetMember: targetMember
          targetArea: targetArea
          sourceCellCount: 5
          targetCellCount: 2
        isNew: true
        type: type
        sourceInfo:
          alterCredentials: true
          databaseName: databaseName
          measuresDimensionName: measuresDimensionName
          applicationLevelConnection: true
          factTableName: factTableName
          serverName: serverName
          description: description
          userName: userName
          schemaName: schemaName
          password: password
          essbaseToColumnMap:
            arr:
            - essbaseName: essbaseName
              columnName: columnName
            - essbaseName: essbaseName
              columnName: columnName
          connectionName: connectionName
          datasourceName: datasourceName
          applicationName: applicationName
          essbaseToDataSourceMap:
            dimensions:
            - sortOption: NONE
              hierarchyType: EXISTING
              added: true
              generations:
              - number: 0
                unique: true
                name: name
              - number: 0
                unique: true
                name: name
              memberName: memberName
              aggregateLevelUsage: 6
              allowUDAChanges: true
              configOption: EXISTING
              type: EXISTING
              allowFormulaChanges: true
              allowPropertyChanges: true
              addMemberOption: GENERATION
              allowassociationChanges: true
              share: true
              incrementalSort: true
              measureOptions:
                currencyName: currencyName
                timeBalanceOption: EXISTING
                twoPass: true
                skip: NONE
                currencyCategory: currencyCategory
                varianceReporting: EXISTING
                currencyConversion: EXISTING
              dimensionSolveOrder: 5
              updateOption: MERGE
              autoFixSharedMember: true
              flexible: true
              unique: EXISTING
              name: name
              attributeOptions:
                scadisAssociationMode: NOOVERWRITE
                scaassociationMode: NOOVERWRITE
                indepDimensions:
                - name: name
                  type: CONTINUOUS
                - name: name
                  type: CONTINUOUS
                modified: true
                type: NUMERIC
                baseDimension: baseDimension
              storageType: EXISTING
              createAttributeMembers: true
              levels:
              - number: 0
                unique: true
                name: name
              - number: 0
                unique: true
                name: name
              allowMoves: NOTOK
              solveOrder: 1
            - sortOption: NONE
              hierarchyType: EXISTING
              added: true
              generations:
              - number: 0
                unique: true
                name: name
              - number: 0
                unique: true
                name: name
              memberName: memberName
              aggregateLevelUsage: 6
              allowUDAChanges: true
              configOption: EXISTING
              type: EXISTING
              allowFormulaChanges: true
              allowPropertyChanges: true
              addMemberOption: GENERATION
              allowassociationChanges: true
              share: true
              incrementalSort: true
              measureOptions:
                currencyName: currencyName
                timeBalanceOption: EXISTING
                twoPass: true
                skip: NONE
                currencyCategory: currencyCategory
                varianceReporting: EXISTING
                currencyConversion: EXISTING
              dimensionSolveOrder: 5
              updateOption: MERGE
              autoFixSharedMember: true
              flexible: true
              unique: EXISTING
              name: name
              attributeOptions:
                scadisAssociationMode: NOOVERWRITE
                scaassociationMode: NOOVERWRITE
                indepDimensions:
                - name: name
                  type: CONTINUOUS
                - name: name
                  type: CONTINUOUS
                modified: true
                type: NUMERIC
                baseDimension: baseDimension
              storageType: EXISTING
              createAttributeMembers: true
              levels:
              - number: 0
                unique: true
                name: name
              - number: 0
                unique: true
                name: name
              allowMoves: NOTOK
              solveOrder: 1
          applicationLevelDatasource: true
        mappings:
        - sourceMember: sourceMember
          targetMember: targetMember
        - sourceMember: sourceMember
          targetMember: targetMember
        federatedTypeCR: true
        updatable: true
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        id: id
        locked: true
      properties:
        id:
          type: string
        type:
          type: string
        updatable:
          type: boolean
        isNew:
          type: boolean
        locked:
          type: boolean
        federatedTypeCR:
          type: boolean
        federatedTypeAV:
          type: boolean
        sourceInfo:
          $ref: '#/components/schemas/ConnectionInfoBean'
        targetInfo:
          $ref: '#/components/schemas/ConnectionInfoBean'
        areas:
          items:
            $ref: '#/components/schemas/AreaBean'
          type: array
        mappings:
          items:
            $ref: '#/components/schemas/MemberMappingBean'
          type: array
        errorMessage:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    PartitionList:
      example:
        totalResults: 3
        offset: 7
        limit: 9
        hasMore: true
        count: 2
        items:
        - targetInfo:
            alterCredentials: true
            databaseName: databaseName
            measuresDimensionName: measuresDimensionName
            applicationLevelConnection: true
            factTableName: factTableName
            serverName: serverName
            description: description
            userName: userName
            schemaName: schemaName
            password: password
            essbaseToColumnMap:
              arr:
              - essbaseName: essbaseName
                columnName: columnName
              - essbaseName: essbaseName
                columnName: columnName
            connectionName: connectionName
            datasourceName: datasourceName
            applicationName: applicationName
            essbaseToDataSourceMap:
              dimensions:
              - sortOption: NONE
                hierarchyType: EXISTING
                added: true
                generations:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                memberName: memberName
                aggregateLevelUsage: 6
                allowUDAChanges: true
                configOption: EXISTING
                type: EXISTING
                allowFormulaChanges: true
                allowPropertyChanges: true
                addMemberOption: GENERATION
                allowassociationChanges: true
                share: true
                incrementalSort: true
                measureOptions:
                  currencyName: currencyName
                  timeBalanceOption: EXISTING
                  twoPass: true
                  skip: NONE
                  currencyCategory: currencyCategory
                  varianceReporting: EXISTING
                  currencyConversion: EXISTING
                dimensionSolveOrder: 5
                updateOption: MERGE
                autoFixSharedMember: true
                flexible: true
                unique: EXISTING
                name: name
                attributeOptions:
                  scadisAssociationMode: NOOVERWRITE
                  scaassociationMode: NOOVERWRITE
                  indepDimensions:
                  - name: name
                    type: CONTINUOUS
                  - name: name
                    type: CONTINUOUS
                  modified: true
                  type: NUMERIC
                  baseDimension: baseDimension
                storageType: EXISTING
                createAttributeMembers: true
                levels:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                allowMoves: NOTOK
                solveOrder: 1
              - sortOption: NONE
                hierarchyType: EXISTING
                added: true
                generations:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                memberName: memberName
                aggregateLevelUsage: 6
                allowUDAChanges: true
                configOption: EXISTING
                type: EXISTING
                allowFormulaChanges: true
                allowPropertyChanges: true
                addMemberOption: GENERATION
                allowassociationChanges: true
                share: true
                incrementalSort: true
                measureOptions:
                  currencyName: currencyName
                  timeBalanceOption: EXISTING
                  twoPass: true
                  skip: NONE
                  currencyCategory: currencyCategory
                  varianceReporting: EXISTING
                  currencyConversion: EXISTING
                dimensionSolveOrder: 5
                updateOption: MERGE
                autoFixSharedMember: true
                flexible: true
                unique: EXISTING
                name: name
                attributeOptions:
                  scadisAssociationMode: NOOVERWRITE
                  scaassociationMode: NOOVERWRITE
                  indepDimensions:
                  - name: name
                    type: CONTINUOUS
                  - name: name
                    type: CONTINUOUS
                  modified: true
                  type: NUMERIC
                  baseDimension: baseDimension
                storageType: EXISTING
                createAttributeMembers: true
                levels:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                allowMoves: NOTOK
                solveOrder: 1
            applicationLevelDatasource: true
          errorMessage: errorMessage
          federatedTypeAV: true
          areas:
          - sourceArea: sourceArea
            slices:
            - sourceMember: sourceMember
              targetMember: targetMember
            - sourceMember: sourceMember
              targetMember: targetMember
            targetArea: targetArea
            sourceCellCount: 5
            targetCellCount: 2
          - sourceArea: sourceArea
            slices:
            - sourceMember: sourceMember
              targetMember: targetMember
            - sourceMember: sourceMember
              targetMember: targetMember
            targetArea: targetArea
            sourceCellCount: 5
            targetCellCount: 2
          isNew: true
          type: type
          sourceInfo:
            alterCredentials: true
            databaseName: databaseName
            measuresDimensionName: measuresDimensionName
            applicationLevelConnection: true
            factTableName: factTableName
            serverName: serverName
            description: description
            userName: userName
            schemaName: schemaName
            password: password
            essbaseToColumnMap:
              arr:
              - essbaseName: essbaseName
                columnName: columnName
              - essbaseName: essbaseName
                columnName: columnName
            connectionName: connectionName
            datasourceName: datasourceName
            applicationName: applicationName
            essbaseToDataSourceMap:
              dimensions:
              - sortOption: NONE
                hierarchyType: EXISTING
                added: true
                generations:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                memberName: memberName
                aggregateLevelUsage: 6
                allowUDAChanges: true
                configOption: EXISTING
                type: EXISTING
                allowFormulaChanges: true
                allowPropertyChanges: true
                addMemberOption: GENERATION
                allowassociationChanges: true
                share: true
                incrementalSort: true
                measureOptions:
                  currencyName: currencyName
                  timeBalanceOption: EXISTING
                  twoPass: true
                  skip: NONE
                  currencyCategory: currencyCategory
                  varianceReporting: EXISTING
                  currencyConversion: EXISTING
                dimensionSolveOrder: 5
                updateOption: MERGE
                autoFixSharedMember: true
                flexible: true
                unique: EXISTING
                name: name
                attributeOptions:
                  scadisAssociationMode: NOOVERWRITE
                  scaassociationMode: NOOVERWRITE
                  indepDimensions:
                  - name: name
                    type: CONTINUOUS
                  - name: name
                    type: CONTINUOUS
                  modified: true
                  type: NUMERIC
                  baseDimension: baseDimension
                storageType: EXISTING
                createAttributeMembers: true
                levels:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                allowMoves: NOTOK
                solveOrder: 1
              - sortOption: NONE
                hierarchyType: EXISTING
                added: true
                generations:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                memberName: memberName
                aggregateLevelUsage: 6
                allowUDAChanges: true
                configOption: EXISTING
                type: EXISTING
                allowFormulaChanges: true
                allowPropertyChanges: true
                addMemberOption: GENERATION
                allowassociationChanges: true
                share: true
                incrementalSort: true
                measureOptions:
                  currencyName: currencyName
                  timeBalanceOption: EXISTING
                  twoPass: true
                  skip: NONE
                  currencyCategory: currencyCategory
                  varianceReporting: EXISTING
                  currencyConversion: EXISTING
                dimensionSolveOrder: 5
                updateOption: MERGE
                autoFixSharedMember: true
                flexible: true
                unique: EXISTING
                name: name
                attributeOptions:
                  scadisAssociationMode: NOOVERWRITE
                  scaassociationMode: NOOVERWRITE
                  indepDimensions:
                  - name: name
                    type: CONTINUOUS
                  - name: name
                    type: CONTINUOUS
                  modified: true
                  type: NUMERIC
                  baseDimension: baseDimension
                storageType: EXISTING
                createAttributeMembers: true
                levels:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                allowMoves: NOTOK
                solveOrder: 1
            applicationLevelDatasource: true
          mappings:
          - sourceMember: sourceMember
            targetMember: targetMember
          - sourceMember: sourceMember
            targetMember: targetMember
          federatedTypeCR: true
          updatable: true
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          id: id
          locked: true
        - targetInfo:
            alterCredentials: true
            databaseName: databaseName
            measuresDimensionName: measuresDimensionName
            applicationLevelConnection: true
            factTableName: factTableName
            serverName: serverName
            description: description
            userName: userName
            schemaName: schemaName
            password: password
            essbaseToColumnMap:
              arr:
              - essbaseName: essbaseName
                columnName: columnName
              - essbaseName: essbaseName
                columnName: columnName
            connectionName: connectionName
            datasourceName: datasourceName
            applicationName: applicationName
            essbaseToDataSourceMap:
              dimensions:
              - sortOption: NONE
                hierarchyType: EXISTING
                added: true
                generations:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                memberName: memberName
                aggregateLevelUsage: 6
                allowUDAChanges: true
                configOption: EXISTING
                type: EXISTING
                allowFormulaChanges: true
                allowPropertyChanges: true
                addMemberOption: GENERATION
                allowassociationChanges: true
                share: true
                incrementalSort: true
                measureOptions:
                  currencyName: currencyName
                  timeBalanceOption: EXISTING
                  twoPass: true
                  skip: NONE
                  currencyCategory: currencyCategory
                  varianceReporting: EXISTING
                  currencyConversion: EXISTING
                dimensionSolveOrder: 5
                updateOption: MERGE
                autoFixSharedMember: true
                flexible: true
                unique: EXISTING
                name: name
                attributeOptions:
                  scadisAssociationMode: NOOVERWRITE
                  scaassociationMode: NOOVERWRITE
                  indepDimensions:
                  - name: name
                    type: CONTINUOUS
                  - name: name
                    type: CONTINUOUS
                  modified: true
                  type: NUMERIC
                  baseDimension: baseDimension
                storageType: EXISTING
                createAttributeMembers: true
                levels:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                allowMoves: NOTOK
                solveOrder: 1
              - sortOption: NONE
                hierarchyType: EXISTING
                added: true
                generations:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                memberName: memberName
                aggregateLevelUsage: 6
                allowUDAChanges: true
                configOption: EXISTING
                type: EXISTING
                allowFormulaChanges: true
                allowPropertyChanges: true
                addMemberOption: GENERATION
                allowassociationChanges: true
                share: true
                incrementalSort: true
                measureOptions:
                  currencyName: currencyName
                  timeBalanceOption: EXISTING
                  twoPass: true
                  skip: NONE
                  currencyCategory: currencyCategory
                  varianceReporting: EXISTING
                  currencyConversion: EXISTING
                dimensionSolveOrder: 5
                updateOption: MERGE
                autoFixSharedMember: true
                flexible: true
                unique: EXISTING
                name: name
                attributeOptions:
                  scadisAssociationMode: NOOVERWRITE
                  scaassociationMode: NOOVERWRITE
                  indepDimensions:
                  - name: name
                    type: CONTINUOUS
                  - name: name
                    type: CONTINUOUS
                  modified: true
                  type: NUMERIC
                  baseDimension: baseDimension
                storageType: EXISTING
                createAttributeMembers: true
                levels:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                allowMoves: NOTOK
                solveOrder: 1
            applicationLevelDatasource: true
          errorMessage: errorMessage
          federatedTypeAV: true
          areas:
          - sourceArea: sourceArea
            slices:
            - sourceMember: sourceMember
              targetMember: targetMember
            - sourceMember: sourceMember
              targetMember: targetMember
            targetArea: targetArea
            sourceCellCount: 5
            targetCellCount: 2
          - sourceArea: sourceArea
            slices:
            - sourceMember: sourceMember
              targetMember: targetMember
            - sourceMember: sourceMember
              targetMember: targetMember
            targetArea: targetArea
            sourceCellCount: 5
            targetCellCount: 2
          isNew: true
          type: type
          sourceInfo:
            alterCredentials: true
            databaseName: databaseName
            measuresDimensionName: measuresDimensionName
            applicationLevelConnection: true
            factTableName: factTableName
            serverName: serverName
            description: description
            userName: userName
            schemaName: schemaName
            password: password
            essbaseToColumnMap:
              arr:
              - essbaseName: essbaseName
                columnName: columnName
              - essbaseName: essbaseName
                columnName: columnName
            connectionName: connectionName
            datasourceName: datasourceName
            applicationName: applicationName
            essbaseToDataSourceMap:
              dimensions:
              - sortOption: NONE
                hierarchyType: EXISTING
                added: true
                generations:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                memberName: memberName
                aggregateLevelUsage: 6
                allowUDAChanges: true
                configOption: EXISTING
                type: EXISTING
                allowFormulaChanges: true
                allowPropertyChanges: true
                addMemberOption: GENERATION
                allowassociationChanges: true
                share: true
                incrementalSort: true
                measureOptions:
                  currencyName: currencyName
                  timeBalanceOption: EXISTING
                  twoPass: true
                  skip: NONE
                  currencyCategory: currencyCategory
                  varianceReporting: EXISTING
                  currencyConversion: EXISTING
                dimensionSolveOrder: 5
                updateOption: MERGE
                autoFixSharedMember: true
                flexible: true
                unique: EXISTING
                name: name
                attributeOptions:
                  scadisAssociationMode: NOOVERWRITE
                  scaassociationMode: NOOVERWRITE
                  indepDimensions:
                  - name: name
                    type: CONTINUOUS
                  - name: name
                    type: CONTINUOUS
                  modified: true
                  type: NUMERIC
                  baseDimension: baseDimension
                storageType: EXISTING
                createAttributeMembers: true
                levels:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                allowMoves: NOTOK
                solveOrder: 1
              - sortOption: NONE
                hierarchyType: EXISTING
                added: true
                generations:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                memberName: memberName
                aggregateLevelUsage: 6
                allowUDAChanges: true
                configOption: EXISTING
                type: EXISTING
                allowFormulaChanges: true
                allowPropertyChanges: true
                addMemberOption: GENERATION
                allowassociationChanges: true
                share: true
                incrementalSort: true
                measureOptions:
                  currencyName: currencyName
                  timeBalanceOption: EXISTING
                  twoPass: true
                  skip: NONE
                  currencyCategory: currencyCategory
                  varianceReporting: EXISTING
                  currencyConversion: EXISTING
                dimensionSolveOrder: 5
                updateOption: MERGE
                autoFixSharedMember: true
                flexible: true
                unique: EXISTING
                name: name
                attributeOptions:
                  scadisAssociationMode: NOOVERWRITE
                  scaassociationMode: NOOVERWRITE
                  indepDimensions:
                  - name: name
                    type: CONTINUOUS
                  - name: name
                    type: CONTINUOUS
                  modified: true
                  type: NUMERIC
                  baseDimension: baseDimension
                storageType: EXISTING
                createAttributeMembers: true
                levels:
                - number: 0
                  unique: true
                  name: name
                - number: 0
                  unique: true
                  name: name
                allowMoves: NOTOK
                solveOrder: 1
            applicationLevelDatasource: true
          mappings:
          - sourceMember: sourceMember
            targetMember: targetMember
          - sourceMember: sourceMember
            targetMember: targetMember
          federatedTypeCR: true
          updatable: true
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          id: id
          locked: true
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/PartitionBean'
          type: array
        offset:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        count:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    PropertyEntry:
      example:
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        value: value
      properties:
        name:
          type: string
        value:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    PropertyList:
      example:
        totalResults: 0
        offset: 5
        hasMore: true
        count: 6
        limit: 1
        items:
        - name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          value: value
        - name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          value: value
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/PropertyEntry'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    DatabaseProvisionReportItem:
      example:
        database: database
        items:
        - name: name
          inheritedFromGroups:
          - inheritedFromGroups
          - inheritedFromGroups
        - name: name
          inheritedFromGroups:
          - inheritedFromGroups
          - inheritedFromGroups
      properties:
        database:
          type: string
        items:
          items:
            $ref: '#/components/schemas/ProvisionReportItem'
          type: array
      type: object
    DatabaseProvisionReportItemList:
      example:
        totalResults: 0
        offset: 5
        hasMore: true
        count: 6
        limit: 1
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        items:
        - database: database
          items:
          - name: name
            inheritedFromGroups:
            - inheritedFromGroups
            - inheritedFromGroups
          - name: name
            inheritedFromGroups:
            - inheritedFromGroups
            - inheritedFromGroups
        - database: database
          items:
          - name: name
            inheritedFromGroups:
            - inheritedFromGroups
            - inheritedFromGroups
          - name: name
            inheritedFromGroups:
            - inheritedFromGroups
            - inheritedFromGroups
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/DatabaseProvisionReportItem'
          type: array
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    ProvisionReportItem:
      example:
        name: name
        inheritedFromGroups:
        - inheritedFromGroups
        - inheritedFromGroups
      properties:
        name:
          type: string
        inheritedFromGroups:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    ApplicationProvisionReportItem:
      example:
        roles:
          totalResults: 0
          offset: 5
          hasMore: true
          count: 6
          limit: 1
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          items:
          - name: name
            inheritedFromGroups:
            - inheritedFromGroups
            - inheritedFromGroups
          - name: name
            inheritedFromGroups:
            - inheritedFromGroups
            - inheritedFromGroups
          properties:
            key: properties
        name: name
        filters:
          totalResults: 0
          offset: 5
          hasMore: true
          count: 6
          limit: 1
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          items:
          - database: database
            items:
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
          - database: database
            items:
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
          properties:
            key: properties
        scripts:
          totalResults: 0
          offset: 5
          hasMore: true
          count: 6
          limit: 1
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          items:
          - database: database
            items:
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
          - database: database
            items:
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
          properties:
            key: properties
      properties:
        name:
          type: string
        roles:
          $ref: '#/components/schemas/ProvisionReportItemList'
        filters:
          $ref: '#/components/schemas/DatabaseProvisionReportItemList'
        scripts:
          $ref: '#/components/schemas/DatabaseProvisionReportItemList'
      type: object
    ApplicationProvisionReportItemList:
      example:
        totalResults: 5
        offset: 9
        hasMore: true
        count: 2
        limit: 7
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        items:
        - roles:
            totalResults: 0
            offset: 5
            hasMore: true
            count: 6
            limit: 1
            links:
            - method: method
              rel: rel
              href: href
              type: type
            - method: method
              rel: rel
              href: href
              type: type
            items:
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            properties:
              key: properties
          name: name
          filters:
            totalResults: 0
            offset: 5
            hasMore: true
            count: 6
            limit: 1
            links:
            - method: method
              rel: rel
              href: href
              type: type
            - method: method
              rel: rel
              href: href
              type: type
            items:
            - database: database
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
            - database: database
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
            properties:
              key: properties
          scripts:
            totalResults: 0
            offset: 5
            hasMore: true
            count: 6
            limit: 1
            links:
            - method: method
              rel: rel
              href: href
              type: type
            - method: method
              rel: rel
              href: href
              type: type
            items:
            - database: database
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
            - database: database
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
            properties:
              key: properties
        - roles:
            totalResults: 0
            offset: 5
            hasMore: true
            count: 6
            limit: 1
            links:
            - method: method
              rel: rel
              href: href
              type: type
            - method: method
              rel: rel
              href: href
              type: type
            items:
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            properties:
              key: properties
          name: name
          filters:
            totalResults: 0
            offset: 5
            hasMore: true
            count: 6
            limit: 1
            links:
            - method: method
              rel: rel
              href: href
              type: type
            - method: method
              rel: rel
              href: href
              type: type
            items:
            - database: database
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
            - database: database
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
            properties:
              key: properties
          scripts:
            totalResults: 0
            offset: 5
            hasMore: true
            count: 6
            limit: 1
            links:
            - method: method
              rel: rel
              href: href
              type: type
            - method: method
              rel: rel
              href: href
              type: type
            items:
            - database: database
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
            - database: database
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
            properties:
              key: properties
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/ApplicationProvisionReportItem'
          type: array
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    ProvisionReportItemList:
      example:
        totalResults: 0
        offset: 5
        hasMore: true
        count: 6
        limit: 1
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        items:
        - name: name
          inheritedFromGroups:
          - inheritedFromGroups
          - inheritedFromGroups
        - name: name
          inheritedFromGroups:
          - inheritedFromGroups
          - inheritedFromGroups
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/ProvisionReportItem'
          type: array
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    MainProvisionReport:
      example:
        service:
          roles:
            totalResults: 0
            offset: 5
            hasMore: true
            count: 6
            limit: 1
            links:
            - method: method
              rel: rel
              href: href
              type: type
            - method: method
              rel: rel
              href: href
              type: type
            items:
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            - name: name
              inheritedFromGroups:
              - inheritedFromGroups
              - inheritedFromGroups
            properties:
              key: properties
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        applications:
          totalResults: 5
          offset: 9
          hasMore: true
          count: 2
          limit: 7
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          items:
          - roles:
              totalResults: 0
              offset: 5
              hasMore: true
              count: 6
              limit: 1
              links:
              - method: method
                rel: rel
                href: href
                type: type
              - method: method
                rel: rel
                href: href
                type: type
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              properties:
                key: properties
            name: name
            filters:
              totalResults: 0
              offset: 5
              hasMore: true
              count: 6
              limit: 1
              links:
              - method: method
                rel: rel
                href: href
                type: type
              - method: method
                rel: rel
                href: href
                type: type
              items:
              - database: database
                items:
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
              - database: database
                items:
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
              properties:
                key: properties
            scripts:
              totalResults: 0
              offset: 5
              hasMore: true
              count: 6
              limit: 1
              links:
              - method: method
                rel: rel
                href: href
                type: type
              - method: method
                rel: rel
                href: href
                type: type
              items:
              - database: database
                items:
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
              - database: database
                items:
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
              properties:
                key: properties
          - roles:
              totalResults: 0
              offset: 5
              hasMore: true
              count: 6
              limit: 1
              links:
              - method: method
                rel: rel
                href: href
                type: type
              - method: method
                rel: rel
                href: href
                type: type
              items:
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              - name: name
                inheritedFromGroups:
                - inheritedFromGroups
                - inheritedFromGroups
              properties:
                key: properties
            name: name
            filters:
              totalResults: 0
              offset: 5
              hasMore: true
              count: 6
              limit: 1
              links:
              - method: method
                rel: rel
                href: href
                type: type
              - method: method
                rel: rel
                href: href
                type: type
              items:
              - database: database
                items:
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
              - database: database
                items:
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
              properties:
                key: properties
            scripts:
              totalResults: 0
              offset: 5
              hasMore: true
              count: 6
              limit: 1
              links:
              - method: method
                rel: rel
                href: href
                type: type
              - method: method
                rel: rel
                href: href
                type: type
              items:
              - database: database
                items:
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
              - database: database
                items:
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
                - name: name
                  inheritedFromGroups:
                  - inheritedFromGroups
                  - inheritedFromGroups
              properties:
                key: properties
          properties:
            key: properties
      properties:
        service:
          $ref: '#/components/schemas/ServiceProvisionReportItem'
        applications:
          $ref: '#/components/schemas/ApplicationProvisionReportItemList'
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    ServiceProvisionReportItem:
      example:
        roles:
          totalResults: 0
          offset: 5
          hasMore: true
          count: 6
          limit: 1
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          items:
          - name: name
            inheritedFromGroups:
            - inheritedFromGroups
            - inheritedFromGroups
          - name: name
            inheritedFromGroups:
            - inheritedFromGroups
            - inheritedFromGroups
          properties:
            key: properties
      properties:
        roles:
          $ref: '#/components/schemas/ProvisionReportItemList'
      type: object
    RulePreviewOutput:
      example:
        data:
        - - data
          - data
        - - data
          - data
      properties:
        data:
          items:
            items:
              type: string
            type: array
          type: array
      type: object
    AttributeBuildProperties:
      example:
        removeAll: true
        useRanges: true
        rangeIncrementValue: 2.3021358869347655
        rangeStartValue: 7.061401241503109
      properties:
        rangeIncrementValue:
          format: double
          type: number
        rangeStartValue:
          format: double
          type: number
        removeAll:
          type: boolean
        useRanges:
          type: boolean
      type: object
    AttributeOptions:
      example:
        scadisAssociationMode: NOOVERWRITE
        scaassociationMode: NOOVERWRITE
        indepDimensions:
        - name: name
          type: CONTINUOUS
        - name: name
          type: CONTINUOUS
        modified: true
        type: NUMERIC
        baseDimension: baseDimension
      properties:
        indepDimensions:
          items:
            $ref: '#/components/schemas/IndepDimension'
          type: array
        type:
          enum:
          - NUMERIC
          - BOOLEAN
          - TEXT
          - DATE
          - EXISTING
          type: string
        baseDimension:
          type: string
        modified:
          type: boolean
        scadisAssociationMode:
          enum:
          - NOOVERWRITE
          - OVERWRITE
          - EXTEND
          type: string
        scaassociationMode:
          enum:
          - NOOVERWRITE
          - OVERWRITE
          type: string
      type: object
    ColumnOperation:
      example:
        updateColumns: true
        position: 6
        type: CREATE
      properties:
        updateColumns:
          type: boolean
        type:
          enum:
          - CREATE
          - JOIN
          - SPLIT
          - MOVE
          - CREATETEXT
          - SUBSTRING
          type: string
        position:
          format: int32
          type: integer
      type: object
    DataLoadOptions:
      example:
        clearCombinations:
        - clearCombinations
        - clearCombinations
        removeAll: 6
        signFlipDimension: signFlipDimension
        signFlipUDA: signFlipUDA
        option: NONE
      properties:
        clearCombinations:
          items:
            type: string
          type: array
        option:
          enum:
          - NONE
          - OVERWRITE
          - ADD
          - SUBTRACT
          type: string
        removeAll:
          format: int32
          type: integer
        signFlipDimension:
          type: string
        signFlipUDA:
          type: string
      type: object
    DataSource:
      example:
        sqlProperties:
          server: server
          database: database
          dictionary: dictionary
          select: select
          application: application
          from: from
          where: where
        name: name
        fileProperties:
          dataloadRecordNumber: 6
          headerRecordNumber: 1
          dimensionBuildRecordNumber: 7
          delimiter: delimiter
          width: 1
          lineSkipCount: 4
        header: header
        tokens:
        - tokens
        - tokens
        tokensCombineOption: AND
      properties:
        header:
          type: string
        name:
          type: string
        tokens:
          items:
            type: string
          type: array
        tokensCombineOption:
          enum:
          - AND
          - OR
          type: string
        sqlProperties:
          $ref: '#/components/schemas/SQLProperties'
        fileProperties:
          $ref: '#/components/schemas/FileProperties'
      type: object
    DimBuildOptions:
      example:
        smartLists:
        - outOfRangeName: outOfRangeName
          startNumber: 9
          name: name
          missingName: missingName
          incrementalNumber: 5
          removeUnspecified: 9
        - outOfRangeName: outOfRangeName
          startNumber: 9
          name: name
          missingName: missingName
          incrementalNumber: 5
          removeUnspecified: 9
        autoConfig: true
        aliasTable: aliasTable
        arrangeDimensions: true
      properties:
        autoConfig:
          type: boolean
        arrangeDimensions:
          type: boolean
        aliasTable:
          type: string
        smartLists:
          items:
            $ref: '#/components/schemas/SmartList'
          type: array
      type: object
    EditorOptions:
      example:
        server: server
        dataFileDatabase: dataFileDatabase
        dataFileType: NONE
        startRecord: 8
        viewGridLines: true
        viewRawData: true
        viewIgnored: true
        viewMode: DIMBUILD
        viewToolbar: true
        database: database
        application: application
        dataFileApplication: dataFileApplication
        dataFileServer: dataFileServer
        dataFile: dataFile
        viewCount: 9
        object: object
      properties:
        application:
          type: string
        database:
          type: string
        server:
          type: string
        object:
          type: string
        dataFile:
          type: string
        dataFileApplication:
          type: string
        dataFileDatabase:
          type: string
        dataFileServer:
          type: string
        startRecord:
          format: int32
          type: integer
        viewCount:
          format: int32
          type: integer
        viewGridLines:
          type: boolean
        viewIgnored:
          type: boolean
        viewRawData:
          type: boolean
        viewToolbar:
          type: boolean
        viewMode:
          enum:
          - DIMBUILD
          - DATALOAD
          type: string
        dataFileType:
          enum:
          - NONE
          - EXCEL
          - LOTUS2
          - LOTUS3
          - LOTUS4
          - TEXT
          type: string
      type: object
    EssbaseInfo:
      example:
        server: server
        database: database
        password: password
        application: application
        user: user
      properties:
        server:
          type: string
        application:
          type: string
        database:
          type: string
        user:
          type: string
        password:
          type: string
      type: object
    Field:
      example:
        dateFormat: dateFormat
        prefix: prefix
        suffix: suffix
        dataloadOptions:
          storeTypeCountMissing: true
          storeType: MIN
          data: true
          referOption: 7
          useReference: true
          referNumber: 4
          ignore: true
          scale: true
          scalingfactor: 1.2315135367772556
          referDimension: referDimension
        smartList: smartList
        dimensionBuildOptions:
          attributeBuildProperties:
            removeAll: true
            useRanges: true
            rangeIncrementValue: 2.3021358869347655
            rangeStartValue: 7.061401241503109
          generation: 2
          parent: 6
          shared: 5
          generationType: NONE
          attributeDimension: attributeDimension
          endIndepColumns:
          - 9
          - 9
          staticField: true
          referIndex: 5
          refer: 1
          startIndepColumns:
          - 3
          - 3
          alias: alias
          ignore: true
          dimension: dimension
          generationProperty: NONE
        selectFilters:
        - condition: EQUAL_TO
          caseSensitive: true
          stringFilter: true
          type: REJECT
          value: value
        - condition: EQUAL_TO
          caseSensitive: true
          stringFilter: true
          type: REJECT
          value: value
        replaceInformation:
        - matchWholeWord: true
          find: find
          caseSensitive: true
          replace: replace
          replaceAll: true
        - matchWholeWord: true
          find: find
          caseSensitive: true
          replace: replace
          replaceAll: true
        transform:
          nodes:
          - null
          - null
          type: COLUMN
        rejectFilterJoinOption: AND
        trim: true
        selectFilterJoinOption: AND
        name: name
        width: 0.8008281904610115
        convertSpaceToUnderScore: true
        case: NOOP
        rejectFilters:
        - condition: EQUAL_TO
          caseSensitive: true
          stringFilter: true
          type: REJECT
          value: value
        - condition: EQUAL_TO
          caseSensitive: true
          stringFilter: true
          type: REJECT
          value: value
        option: option
      properties:
        rejectFilters:
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        selectFilters:
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        replaceInformation:
          items:
            $ref: '#/components/schemas/ReplaceInfo'
          type: array
        selectFilterJoinOption:
          enum:
          - AND
          - OR
          type: string
        rejectFilterJoinOption:
          enum:
          - AND
          - OR
          type: string
        dateFormat:
          type: string
        name:
          type: string
        prefix:
          type: string
        suffix:
          type: string
        option:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        convertSpaceToUnderScore:
          type: boolean
        trim:
          type: boolean
        width:
          format: double
          type: number
        smartList:
          type: string
        dimensionBuildOptions:
          $ref: '#/components/schemas/FieldDimBuildOptions'
        dataloadOptions:
          $ref: '#/components/schemas/FieldDataLoadOptions'
        transform:
          $ref: '#/components/schemas/Transform'
        case:
          enum:
          - NOOP
          - LOWER_CASE
          - UPPER_CASE
          - FIRST_CAPITAL_CASE
          type: string
      type: object
    FieldDataLoadOptions:
      example:
        storeTypeCountMissing: true
        storeType: MIN
        data: true
        referOption: 7
        useReference: true
        referNumber: 4
        ignore: true
        scale: true
        scalingfactor: 1.2315135367772556
        referDimension: referDimension
      properties:
        referDimension:
          type: string
        referNumber:
          format: int32
          type: integer
        referOption:
          format: int32
          type: integer
        ignore:
          type: boolean
        scale:
          type: boolean
        useReference:
          type: boolean
        data:
          type: boolean
        scalingfactor:
          format: double
          type: number
        storeType:
          enum:
          - MIN
          - MAX
          - AVG
          - SUM
          - COUNT
          type: string
        storeTypeCountMissing:
          type: boolean
      type: object
    FieldDimBuildOptions:
      example:
        attributeBuildProperties:
          removeAll: true
          useRanges: true
          rangeIncrementValue: 2.3021358869347655
          rangeStartValue: 7.061401241503109
        generation: 2
        parent: 6
        shared: 5
        generationType: NONE
        attributeDimension: attributeDimension
        endIndepColumns:
        - 9
        - 9
        staticField: true
        referIndex: 5
        refer: 1
        startIndepColumns:
        - 3
        - 3
        alias: alias
        ignore: true
        dimension: dimension
        generationProperty: NONE
      properties:
        parent:
          format: int32
          type: integer
        generationType:
          enum:
          - NONE
          - PARENT
          - CHILD
          - GENERATION
          - LEVEL
          - ATTRIBUTE_MEMBER
          - ALIAS
          - PROPERTY
          - FORMULA
          - MEMBER_ID
          - SOLVE_ORDER
          - UDA
          - DUPGEN
          - DUPLEVEL
          - DUPGEN_ALIAS
          - DUPLEVEL_ALIAS
          - CURRENCY_NAME
          - CURRENCY_CATEGORY
          - NUMTYPES
          - ATTRIBUTE_DIM_LABEL
          - ATTRIBUTE_PARENT
          - DUPGEN_CAPTION
          - DUPLEVEL_CAPTION
          - AGGLEVELUSAGE
          - ATTR_ASSOCIATE
          - REFMEMBER
          - GEN_RIGHTJOIN
          - COMMENT
          - SHARED_GEN
          - GEN_NATUREJOIN
          - GEN_LEFTJOIN
          - GEN_OTLMBR
          - COMMENT_EX
          - REFMEMBERID
          - SMARTLISTID
          - SMARTLISTTEXT
          - FORMATSTRING
          - PROTOTYPE
          type: string
        refer:
          format: int32
          type: integer
        referIndex:
          format: int32
          type: integer
        shared:
          format: int32
          type: integer
        attributeBuildProperties:
          $ref: '#/components/schemas/AttributeBuildProperties'
        dimension:
          type: string
        attributeDimension:
          type: string
        alias:
          type: string
        endIndepColumns:
          items:
            format: int32
            type: integer
          type: array
        startIndepColumns:
          items:
            format: int32
            type: integer
          type: array
        generationProperty:
          enum:
          - NONE
          - CONSOLIDATIONTYPE
          - STORAGETYPE
          - TIMEBALANCE
          - SKIP
          - VARIANCEREPORT
          - TWOPASSCALC
          - HIERARCHYTYPE
          type: string
        generation:
          format: int32
          type: integer
        ignore:
          type: boolean
        staticField:
          type: boolean
      type: object
    FileProperties:
      example:
        dataloadRecordNumber: 6
        headerRecordNumber: 1
        dimensionBuildRecordNumber: 7
        delimiter: delimiter
        width: 1
        lineSkipCount: 4
      properties:
        delimiter:
          type: string
        width:
          format: int32
          type: integer
        dataloadRecordNumber:
          format: int32
          type: integer
        dimensionBuildRecordNumber:
          format: int32
          type: integer
        headerRecordNumber:
          format: int32
          type: integer
        lineSkipCount:
          format: int32
          type: integer
      type: object
    Filter:
      example:
        condition: EQUAL_TO
        caseSensitive: true
        stringFilter: true
        type: REJECT
        value: value
      properties:
        stringFilter:
          type: boolean
        value:
          type: string
        condition:
          enum:
          - EQUAL_TO
          - NOT_EQUAL_TO
          - GREATER_THAN
          - GREATER_THAN_EQUAL_TO
          - LESS_THAN
          - LESS_THAN_EQUAL_TO
          - CONTAIN
          - DOES_NOT_CONTAIN
          type: string
        caseSensitive:
          type: boolean
        type:
          enum:
          - REJECT
          - SELECT
          type: string
      type: object
    IndepDimension:
      example:
        name: name
        type: CONTINUOUS
      properties:
        name:
          type: string
        type:
          enum:
          - CONTINUOUS
          - DISCRETE
          type: string
      type: object
    Level:
      example:
        number: 0
        unique: true
        name: name
      properties:
        name:
          type: string
        number:
          format: int32
          type: integer
        unique:
          type: boolean
      type: object
    MeasureOptions:
      example:
        currencyName: currencyName
        timeBalanceOption: EXISTING
        twoPass: true
        skip: NONE
        currencyCategory: currencyCategory
        varianceReporting: EXISTING
        currencyConversion: EXISTING
      properties:
        currencyCategory:
          type: string
        currencyName:
          type: string
        currencyConversion:
          enum:
          - EXISTING
          - NONE
          - CATEGORY
          - NO_CONVERSION
          type: string
        skip:
          enum:
          - NONE
          - NA
          - MISSING
          - ZERO
          - MISSING_ZERO
          type: string
        timeBalanceOption:
          enum:
          - EXISTING
          - NONE
          - FIRST
          - LAST
          - AVERAGE
          type: string
        varianceReporting:
          enum:
          - EXISTING
          - NON_EXPENSE
          - EXPENSE
          type: string
        twoPass:
          type: boolean
      type: object
    ReplaceInfo:
      example:
        matchWholeWord: true
        find: find
        caseSensitive: true
        replace: replace
        replaceAll: true
      properties:
        find:
          type: string
        replace:
          type: string
        matchWholeWord:
          type: boolean
        replaceAll:
          type: boolean
        caseSensitive:
          type: boolean
      type: object
    RulePreviewInput:
      example:
        data:
        - - data
          - data
        - - data
          - data
        rules:
          studio: true
          dataLoadOptions:
            clearCombinations:
            - clearCombinations
            - clearCombinations
            removeAll: 6
            signFlipDimension: signFlipDimension
            signFlipUDA: signFlipUDA
            option: NONE
          editorOptions:
            server: server
            dataFileDatabase: dataFileDatabase
            dataFileType: NONE
            startRecord: 8
            viewGridLines: true
            viewRawData: true
            viewIgnored: true
            viewMode: DIMBUILD
            viewToolbar: true
            database: database
            application: application
            dataFileApplication: dataFileApplication
            dataFileServer: dataFileServer
            dataFile: dataFile
            viewCount: 9
            object: object
          xolap: true
          encoding: NONE
          locale: locale
          bibpm: true
          dimensionBuildOptions:
            smartLists:
            - outOfRangeName: outOfRangeName
              startNumber: 9
              name: name
              missingName: missingName
              incrementalNumber: 5
              removeUnspecified: 9
            - outOfRangeName: outOfRangeName
              startNumber: 9
              name: name
              missingName: missingName
              incrementalNumber: 5
              removeUnspecified: 9
            autoConfig: true
            aliasTable: aliasTable
            arrangeDimensions: true
          flatFileBased: true
          timeStamp: 1
          essbaseInfo:
            server: server
            database: database
            password: password
            application: application
            user: user
          name: name
          columnOperations:
          - updateColumns: true
            position: 6
            type: CREATE
          - updateColumns: true
            position: 6
            type: CREATE
          fields:
          - dateFormat: dateFormat
            prefix: prefix
            suffix: suffix
            dataloadOptions:
              storeTypeCountMissing: true
              storeType: MIN
              data: true
              referOption: 7
              useReference: true
              referNumber: 4
              ignore: true
              scale: true
              scalingfactor: 1.2315135367772556
              referDimension: referDimension
            smartList: smartList
            dimensionBuildOptions:
              attributeBuildProperties:
                removeAll: true
                useRanges: true
                rangeIncrementValue: 2.3021358869347655
                rangeStartValue: 7.061401241503109
              generation: 2
              parent: 6
              shared: 5
              generationType: NONE
              attributeDimension: attributeDimension
              endIndepColumns:
              - 9
              - 9
              staticField: true
              referIndex: 5
              refer: 1
              startIndepColumns:
              - 3
              - 3
              alias: alias
              ignore: true
              dimension: dimension
              generationProperty: NONE
            selectFilters:
            - condition: EQUAL_TO
              caseSensitive: true
              stringFilter: true
              type: REJECT
              value: value
            - condition: EQUAL_TO
              caseSensitive: true
              stringFilter: true
              type: REJECT
              value: value
            replaceInformation:
            - matchWholeWord: true
              find: find
              caseSensitive: true
              replace: replace
              replaceAll: true
            - matchWholeWord: true
              find: find
              caseSensitive: true
              replace: replace
              replaceAll: true
            transform:
              nodes:
              - null
              - null
              type: COLUMN
            rejectFilterJoinOption: AND
            trim: true
            selectFilterJoinOption: AND
            name: name
            width: 0.8008281904610115
            convertSpaceToUnderScore: true
            case: NOOP
            rejectFilters:
            - condition: EQUAL_TO
              caseSensitive: true
              stringFilter: true
              type: REJECT
              value: value
            - condition: EQUAL_TO
              caseSensitive: true
              stringFilter: true
              type: REJECT
              value: value
            option: option
          - dateFormat: dateFormat
            prefix: prefix
            suffix: suffix
            dataloadOptions:
              storeTypeCountMissing: true
              storeType: MIN
              data: true
              referOption: 7
              useReference: true
              referNumber: 4
              ignore: true
              scale: true
              scalingfactor: 1.2315135367772556
              referDimension: referDimension
            smartList: smartList
            dimensionBuildOptions:
              attributeBuildProperties:
                removeAll: true
                useRanges: true
                rangeIncrementValue: 2.3021358869347655
                rangeStartValue: 7.061401241503109
              generation: 2
              parent: 6
              shared: 5
              generationType: NONE
              attributeDimension: attributeDimension
              endIndepColumns:
              - 9
              - 9
              staticField: true
              referIndex: 5
              refer: 1
              startIndepColumns:
              - 3
              - 3
              alias: alias
              ignore: true
              dimension: dimension
              generationProperty: NONE
            selectFilters:
            - condition: EQUAL_TO
              caseSensitive: true
              stringFilter: true
              type: REJECT
              value: value
            - condition: EQUAL_TO
              caseSensitive: true
              stringFilter: true
              type: REJECT
              value: value
            replaceInformation:
            - matchWholeWord: true
              find: find
              caseSensitive: true
              replace: replace
              replaceAll: true
            - matchWholeWord: true
              find: find
              caseSensitive: true
              replace: replace
              replaceAll: true
            transform:
              nodes:
              - null
              - null
              type: COLUMN
            rejectFilterJoinOption: AND
            trim: true
            selectFilterJoinOption: AND
            name: name
            width: 0.8008281904610115
            convertSpaceToUnderScore: true
            case: NOOP
            rejectFilters:
            - condition: EQUAL_TO
              caseSensitive: true
              stringFilter: true
              type: REJECT
              value: value
            - condition: EQUAL_TO
              caseSensitive: true
              stringFilter: true
              type: REJECT
              value: value
            option: option
          dataSource:
            sqlProperties:
              server: server
              database: database
              dictionary: dictionary
              select: select
              application: application
              from: from
              where: where
            name: name
            fileProperties:
              dataloadRecordNumber: 6
              headerRecordNumber: 1
              dimensionBuildRecordNumber: 7
              delimiter: delimiter
              width: 1
              lineSkipCount: 4
            header: header
            tokens:
            - tokens
            - tokens
            tokensCombineOption: AND
          dimensions:
          - sortOption: NONE
            hierarchyType: EXISTING
            added: true
            generations:
            - number: 0
              unique: true
              name: name
            - number: 0
              unique: true
              name: name
            memberName: memberName
            aggregateLevelUsage: 6
            allowUDAChanges: true
            configOption: EXISTING
            type: EXISTING
            allowFormulaChanges: true
            allowPropertyChanges: true
            addMemberOption: GENERATION
            allowassociationChanges: true
            share: true
            incrementalSort: true
            measureOptions:
              currencyName: currencyName
              timeBalanceOption: EXISTING
              twoPass: true
              skip: NONE
              currencyCategory: currencyCategory
              varianceReporting: EXISTING
              currencyConversion: EXISTING
            dimensionSolveOrder: 5
            updateOption: MERGE
            autoFixSharedMember: true
            flexible: true
            unique: EXISTING
            name: name
            attributeOptions:
              scadisAssociationMode: NOOVERWRITE
              scaassociationMode: NOOVERWRITE
              indepDimensions:
              - name: name
                type: CONTINUOUS
              - name: name
                type: CONTINUOUS
              modified: true
              type: NUMERIC
              baseDimension: baseDimension
            storageType: EXISTING
            createAttributeMembers: true
            levels:
            - number: 0
              unique: true
              name: name
            - number: 0
              unique: true
              name: name
            allowMoves: NOTOK
            solveOrder: 1
          - sortOption: NONE
            hierarchyType: EXISTING
            added: true
            generations:
            - number: 0
              unique: true
              name: name
            - number: 0
              unique: true
              name: name
            memberName: memberName
            aggregateLevelUsage: 6
            allowUDAChanges: true
            configOption: EXISTING
            type: EXISTING
            allowFormulaChanges: true
            allowPropertyChanges: true
            addMemberOption: GENERATION
            allowassociationChanges: true
            share: true
            incrementalSort: true
            measureOptions:
              currencyName: currencyName
              timeBalanceOption: EXISTING
              twoPass: true
              skip: NONE
              currencyCategory: currencyCategory
              varianceReporting: EXISTING
              currencyConversion: EXISTING
            dimensionSolveOrder: 5
            updateOption: MERGE
            autoFixSharedMember: true
            flexible: true
            unique: EXISTING
            name: name
            attributeOptions:
              scadisAssociationMode: NOOVERWRITE
              scaassociationMode: NOOVERWRITE
              indepDimensions:
              - name: name
                type: CONTINUOUS
              - name: name
                type: CONTINUOUS
              modified: true
              type: NUMERIC
              baseDimension: baseDimension
            storageType: EXISTING
            createAttributeMembers: true
            levels:
            - number: 0
              unique: true
              name: name
            - number: 0
              unique: true
              name: name
            allowMoves: NOTOK
            solveOrder: 1
      properties:
        data:
          items:
            items:
              type: string
            type: array
          type: array
        rules:
          $ref: '#/components/schemas/Rules'
      type: object
    Rules:
      example:
        studio: true
        dataLoadOptions:
          clearCombinations:
          - clearCombinations
          - clearCombinations
          removeAll: 6
          signFlipDimension: signFlipDimension
          signFlipUDA: signFlipUDA
          option: NONE
        editorOptions:
          server: server
          dataFileDatabase: dataFileDatabase
          dataFileType: NONE
          startRecord: 8
          viewGridLines: true
          viewRawData: true
          viewIgnored: true
          viewMode: DIMBUILD
          viewToolbar: true
          database: database
          application: application
          dataFileApplication: dataFileApplication
          dataFileServer: dataFileServer
          dataFile: dataFile
          viewCount: 9
          object: object
        xolap: true
        encoding: NONE
        locale: locale
        bibpm: true
        dimensionBuildOptions:
          smartLists:
          - outOfRangeName: outOfRangeName
            startNumber: 9
            name: name
            missingName: missingName
            incrementalNumber: 5
            removeUnspecified: 9
          - outOfRangeName: outOfRangeName
            startNumber: 9
            name: name
            missingName: missingName
            incrementalNumber: 5
            removeUnspecified: 9
          autoConfig: true
          aliasTable: aliasTable
          arrangeDimensions: true
        flatFileBased: true
        timeStamp: 1
        essbaseInfo:
          server: server
          database: database
          password: password
          application: application
          user: user
        name: name
        columnOperations:
        - updateColumns: true
          position: 6
          type: CREATE
        - updateColumns: true
          position: 6
          type: CREATE
        fields:
        - dateFormat: dateFormat
          prefix: prefix
          suffix: suffix
          dataloadOptions:
            storeTypeCountMissing: true
            storeType: MIN
            data: true
            referOption: 7
            useReference: true
            referNumber: 4
            ignore: true
            scale: true
            scalingfactor: 1.2315135367772556
            referDimension: referDimension
          smartList: smartList
          dimensionBuildOptions:
            attributeBuildProperties:
              removeAll: true
              useRanges: true
              rangeIncrementValue: 2.3021358869347655
              rangeStartValue: 7.061401241503109
            generation: 2
            parent: 6
            shared: 5
            generationType: NONE
            attributeDimension: attributeDimension
            endIndepColumns:
            - 9
            - 9
            staticField: true
            referIndex: 5
            refer: 1
            startIndepColumns:
            - 3
            - 3
            alias: alias
            ignore: true
            dimension: dimension
            generationProperty: NONE
          selectFilters:
          - condition: EQUAL_TO
            caseSensitive: true
            stringFilter: true
            type: REJECT
            value: value
          - condition: EQUAL_TO
            caseSensitive: true
            stringFilter: true
            type: REJECT
            value: value
          replaceInformation:
          - matchWholeWord: true
            find: find
            caseSensitive: true
            replace: replace
            replaceAll: true
          - matchWholeWord: true
            find: find
            caseSensitive: true
            replace: replace
            replaceAll: true
          transform:
            nodes:
            - null
            - null
            type: COLUMN
          rejectFilterJoinOption: AND
          trim: true
          selectFilterJoinOption: AND
          name: name
          width: 0.8008281904610115
          convertSpaceToUnderScore: true
          case: NOOP
          rejectFilters:
          - condition: EQUAL_TO
            caseSensitive: true
            stringFilter: true
            type: REJECT
            value: value
          - condition: EQUAL_TO
            caseSensitive: true
            stringFilter: true
            type: REJECT
            value: value
          option: option
        - dateFormat: dateFormat
          prefix: prefix
          suffix: suffix
          dataloadOptions:
            storeTypeCountMissing: true
            storeType: MIN
            data: true
            referOption: 7
            useReference: true
            referNumber: 4
            ignore: true
            scale: true
            scalingfactor: 1.2315135367772556
            referDimension: referDimension
          smartList: smartList
          dimensionBuildOptions:
            attributeBuildProperties:
              removeAll: true
              useRanges: true
              rangeIncrementValue: 2.3021358869347655
              rangeStartValue: 7.061401241503109
            generation: 2
            parent: 6
            shared: 5
            generationType: NONE
            attributeDimension: attributeDimension
            endIndepColumns:
            - 9
            - 9
            staticField: true
            referIndex: 5
            refer: 1
            startIndepColumns:
            - 3
            - 3
            alias: alias
            ignore: true
            dimension: dimension
            generationProperty: NONE
          selectFilters:
          - condition: EQUAL_TO
            caseSensitive: true
            stringFilter: true
            type: REJECT
            value: value
          - condition: EQUAL_TO
            caseSensitive: true
            stringFilter: true
            type: REJECT
            value: value
          replaceInformation:
          - matchWholeWord: true
            find: find
            caseSensitive: true
            replace: replace
            replaceAll: true
          - matchWholeWord: true
            find: find
            caseSensitive: true
            replace: replace
            replaceAll: true
          transform:
            nodes:
            - null
            - null
            type: COLUMN
          rejectFilterJoinOption: AND
          trim: true
          selectFilterJoinOption: AND
          name: name
          width: 0.8008281904610115
          convertSpaceToUnderScore: true
          case: NOOP
          rejectFilters:
          - condition: EQUAL_TO
            caseSensitive: true
            stringFilter: true
            type: REJECT
            value: value
          - condition: EQUAL_TO
            caseSensitive: true
            stringFilter: true
            type: REJECT
            value: value
          option: option
        dataSource:
          sqlProperties:
            server: server
            database: database
            dictionary: dictionary
            select: select
            application: application
            from: from
            where: where
          name: name
          fileProperties:
            dataloadRecordNumber: 6
            headerRecordNumber: 1
            dimensionBuildRecordNumber: 7
            delimiter: delimiter
            width: 1
            lineSkipCount: 4
          header: header
          tokens:
          - tokens
          - tokens
          tokensCombineOption: AND
        dimensions:
        - sortOption: NONE
          hierarchyType: EXISTING
          added: true
          generations:
          - number: 0
            unique: true
            name: name
          - number: 0
            unique: true
            name: name
          memberName: memberName
          aggregateLevelUsage: 6
          allowUDAChanges: true
          configOption: EXISTING
          type: EXISTING
          allowFormulaChanges: true
          allowPropertyChanges: true
          addMemberOption: GENERATION
          allowassociationChanges: true
          share: true
          incrementalSort: true
          measureOptions:
            currencyName: currencyName
            timeBalanceOption: EXISTING
            twoPass: true
            skip: NONE
            currencyCategory: currencyCategory
            varianceReporting: EXISTING
            currencyConversion: EXISTING
          dimensionSolveOrder: 5
          updateOption: MERGE
          autoFixSharedMember: true
          flexible: true
          unique: EXISTING
          name: name
          attributeOptions:
            scadisAssociationMode: NOOVERWRITE
            scaassociationMode: NOOVERWRITE
            indepDimensions:
            - name: name
              type: CONTINUOUS
            - name: name
              type: CONTINUOUS
            modified: true
            type: NUMERIC
            baseDimension: baseDimension
          storageType: EXISTING
          createAttributeMembers: true
          levels:
          - number: 0
            unique: true
            name: name
          - number: 0
            unique: true
            name: name
          allowMoves: NOTOK
          solveOrder: 1
        - sortOption: NONE
          hierarchyType: EXISTING
          added: true
          generations:
          - number: 0
            unique: true
            name: name
          - number: 0
            unique: true
            name: name
          memberName: memberName
          aggregateLevelUsage: 6
          allowUDAChanges: true
          configOption: EXISTING
          type: EXISTING
          allowFormulaChanges: true
          allowPropertyChanges: true
          addMemberOption: GENERATION
          allowassociationChanges: true
          share: true
          incrementalSort: true
          measureOptions:
            currencyName: currencyName
            timeBalanceOption: EXISTING
            twoPass: true
            skip: NONE
            currencyCategory: currencyCategory
            varianceReporting: EXISTING
            currencyConversion: EXISTING
          dimensionSolveOrder: 5
          updateOption: MERGE
          autoFixSharedMember: true
          flexible: true
          unique: EXISTING
          name: name
          attributeOptions:
            scadisAssociationMode: NOOVERWRITE
            scaassociationMode: NOOVERWRITE
            indepDimensions:
            - name: name
              type: CONTINUOUS
            - name: name
              type: CONTINUOUS
            modified: true
            type: NUMERIC
            baseDimension: baseDimension
          storageType: EXISTING
          createAttributeMembers: true
          levels:
          - number: 0
            unique: true
            name: name
          - number: 0
            unique: true
            name: name
          allowMoves: NOTOK
          solveOrder: 1
      properties:
        dimensions:
          items:
            $ref: '#/components/schemas/Dimension'
          type: array
        fields:
          items:
            $ref: '#/components/schemas/Field'
          type: array
        timeStamp:
          format: int64
          type: integer
        dataSource:
          $ref: '#/components/schemas/DataSource'
        dimensionBuildOptions:
          $ref: '#/components/schemas/DimBuildOptions'
        dataLoadOptions:
          $ref: '#/components/schemas/DataLoadOptions'
        editorOptions:
          $ref: '#/components/schemas/EditorOptions'
        encoding:
          enum:
          - NONE
          - NONUNICODE
          - UTF8
          type: string
        name:
          type: string
        locale:
          type: string
        studio:
          type: boolean
        bibpm:
          type: boolean
        xolap:
          type: boolean
        flatFileBased:
          type: boolean
        essbaseInfo:
          $ref: '#/components/schemas/EssbaseInfo'
        columnOperations:
          items:
            $ref: '#/components/schemas/ColumnOperation'
          type: array
      type: object
    SQLProperties:
      example:
        server: server
        database: database
        dictionary: dictionary
        select: select
        application: application
        from: from
        where: where
      properties:
        server:
          type: string
        application:
          type: string
        database:
          type: string
        dictionary:
          type: string
        select:
          type: string
        from:
          type: string
        where:
          type: string
      type: object
    SmartList:
      example:
        outOfRangeName: outOfRangeName
        startNumber: 9
        name: name
        missingName: missingName
        incrementalNumber: 5
        removeUnspecified: 9
      properties:
        incrementalNumber:
          format: int32
          type: integer
        startNumber:
          format: int32
          type: integer
        missingName:
          type: string
        name:
          type: string
        outOfRangeName:
          type: string
        removeUnspecified:
          format: int32
          type: integer
      type: object
    Transform:
      example:
        nodes:
        - null
        - null
        type: COLUMN
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/Transform'
          type: array
        type:
          enum:
          - COLUMN
          - SUBSTR
          - CONCAT
          - STATICSTR
          - IGNORE
          type: string
      type: object
    RuleError:
      properties:
        field:
          type: string
        error:
          type: string
      type: object
    RuleErrorList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/RuleError'
          type: array
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        hasMore:
          type: boolean
        count:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
    SandboxDetail:
      example:
        total: 0
        available: 6
        assigned: 1
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        total:
          format: int32
          type: integer
        available:
          format: int32
          type: integer
        assigned:
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    SandboxRequestPayload:
      example:
        size: 0
      properties:
        size:
          format: int32
          type: integer
      type: object
    ScriptBean:
      example:
        type: REFRESH
        content: content
      properties:
        content:
          type: string
        type:
          enum:
          - REFRESH
          - CLEAR
          - APPLY
          type: string
      type: object
      xml:
        name: Script
    ScriptListResponse:
      example:
        totalResults: 0
        offset: 5
        hasMore: true
        count: 6
        limit: 1
        items:
        - type: REFRESH
          content: content
        - type: REFRESH
          content: content
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/ScriptBean'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
      xml:
        name: Comments
    ApproverBean:
      example:
        approved: true
        name: name
        time: 0
        id: id
        email: email
      properties:
        email:
          type: string
        approved:
          type: boolean
        time:
          format: int64
          type: integer
        id:
          type: string
        name:
          type: string
      type: object
      xml:
        name: Approver
    ApproverListResponse:
      example:
        totalResults: 6
        offset: 5
        hasMore: true
        count: 1
        limit: 5
        items:
        - approved: true
          name: name
          time: 0
          id: id
          email: email
        - approved: true
          name: name
          time: 0
          id: id
          email: email
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/ApproverBean'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
      xml:
        name: Approvers
    CommentBean:
      example:
        owner:
          name: name
          id: id
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        time: 0
        id: 6
        message: message
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        owner:
          $ref: '#/components/schemas/Owner'
        time:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
        message:
          type: string
      type: object
      xml:
        name: Comment
    Owner:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
      xml:
        name: Owner
    ParticipantBean:
      example:
        name: name
        id: id
        email: email
      properties:
        email:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
      xml:
        name: Participant
    ScenarioBean:
      example:
        owner: owner
        appliedTime: 5
        submittedTime: 1
        dueDate: 0
        sandbox: sandbox
        approvers:
        - approved: true
          name: name
          time: 0
          id: id
          email: email
        - approved: true
          name: name
          time: 0
          id: id
          email: email
        description: description
        useCalculatedValues: true
        priority: LOW
        scenarioUser: true
        database: database
        refreshedTime: 5
        overdue: true
        application: application
        commentsCount: 2
        name: name
        createdTime: 6
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        state: NEW
        id: 7
        scripts:
        - type: REFRESH
          content: content
        - type: REFRESH
          content: content
        participants:
        - name: name
          id: id
          email: email
        - name: name
          id: id
          email: email
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        scenarioUser:
          type: boolean
        database:
          type: string
        scripts:
          items:
            $ref: '#/components/schemas/ScriptBean'
          type: array
        approvers:
          items:
            $ref: '#/components/schemas/ApproverBean'
          type: array
        sandbox:
          type: string
        dueDate:
          format: int64
          type: integer
        useCalculatedValues:
          type: boolean
        overdue:
          type: boolean
        createdTime:
          format: int64
          type: integer
        submittedTime:
          format: int64
          type: integer
        appliedTime:
          format: int64
          type: integer
        refreshedTime:
          format: int64
          type: integer
        commentsCount:
          format: int32
          type: integer
        application:
          type: string
        description:
          type: string
        participants:
          items:
            $ref: '#/components/schemas/ParticipantBean'
          type: array
        owner:
          type: string
        state:
          enum:
          - NEW
          - SUBMITTED
          - APPROVED
          - REJECTED
          - APPLIED
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        priority:
          enum:
          - LOW
          - MEDIUM
          - HIGH
          type: string
      type: object
      xml:
        name: Scenario
    CopyOptions:
      example:
        comments: true
        data: true
        keyMetrics: true
        slice: true
        approvers: true
        layouts: true
        properties: true
        tasks: true
        participants: true
      properties:
        properties:
          type: boolean
        comments:
          type: boolean
        data:
          type: boolean
        tasks:
          type: boolean
        keyMetrics:
          type: boolean
        slice:
          type: boolean
        layouts:
          type: boolean
        approvers:
          type: boolean
        participants:
          type: boolean
      type: object
    ScenarioActionPayload:
      example:
        comment: comment
        to: to
        copyOptions:
          comments: true
          data: true
          keyMetrics: true
          slice: true
          approvers: true
          layouts: true
          properties: true
          tasks: true
          participants: true
      properties:
        comment:
          type: string
        to:
          type: string
        copyOptions:
          $ref: '#/components/schemas/CopyOptions'
      type: object
    ScenarioCollectionResponse:
      example:
        totalResults: 0
        offset: 1
        limit: 6
        hasMore: true
        count: 5
        items:
        - owner: owner
          appliedTime: 5
          submittedTime: 1
          dueDate: 0
          sandbox: sandbox
          approvers:
          - approved: true
            name: name
            time: 0
            id: id
            email: email
          - approved: true
            name: name
            time: 0
            id: id
            email: email
          description: description
          useCalculatedValues: true
          priority: LOW
          scenarioUser: true
          database: database
          refreshedTime: 5
          overdue: true
          application: application
          commentsCount: 2
          name: name
          createdTime: 6
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          state: NEW
          id: 7
          scripts:
          - type: REFRESH
            content: content
          - type: REFRESH
            content: content
          participants:
          - name: name
            id: id
            email: email
          - name: name
            id: id
            email: email
        - owner: owner
          appliedTime: 5
          submittedTime: 1
          dueDate: 0
          sandbox: sandbox
          approvers:
          - approved: true
            name: name
            time: 0
            id: id
            email: email
          - approved: true
            name: name
            time: 0
            id: id
            email: email
          description: description
          useCalculatedValues: true
          priority: LOW
          scenarioUser: true
          database: database
          refreshedTime: 5
          overdue: true
          application: application
          commentsCount: 2
          name: name
          createdTime: 6
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          state: NEW
          id: 7
          scripts:
          - type: REFRESH
            content: content
          - type: REFRESH
            content: content
          participants:
          - name: name
            id: id
            email: email
          - name: name
            id: id
            email: email
        properties:
          key: properties
      properties:
        totalResults:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        items:
          items:
            $ref: '#/components/schemas/ScenarioBean'
          type: array
        hasMore:
          type: boolean
        count:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
      xml:
        name: Scenarios
    ScenarioCubes:
      example:
        databases:
        - databases
        - databases
        application: application
        databaseAdmin: true
        easManagedApp: true
        participateInScenario: true
        createScenario: true
      properties:
        application:
          type: string
        databases:
          items:
            type: string
          type: array
        createScenario:
          type: boolean
        participateInScenario:
          type: boolean
        databaseAdmin:
          type: boolean
        easManagedApp:
          type: boolean
      type: object
      xml:
        name: Database
    ScenarioCubesList:
      example:
        totalResults: 0
        offset: 5
        hasMore: true
        count: 6
        limit: 1
        items:
        - databases:
          - databases
          - databases
          application: application
          databaseAdmin: true
          easManagedApp: true
          participateInScenario: true
          createScenario: true
        - databases:
          - databases
          - databases
          application: application
          databaseAdmin: true
          easManagedApp: true
          participateInScenario: true
          createScenario: true
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/ScenarioCubes'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
      xml:
        name: Databases
    ScenarioChangesListResponse:
      example:
        totalResults: 0
        offset: 5
        hasMore: true
        count: 6
        limit: 1
        items:
        - key: "{}"
        - key: "{}"
        properties:
          key: properties
      properties:
        items:
          items:
            additionalProperties:
              properties: {}
              type: object
            type: object
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
      xml:
        name: ScenarioChanges
    ParticipantListResponse:
      example:
        totalResults: 0
        offset: 5
        hasMore: true
        count: 6
        limit: 1
        items:
        - name: name
          id: id
          email: email
        - name: name
          id: id
          email: email
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/ParticipantBean'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
      xml:
        name: Participants
    CommentListResponse:
      example:
        totalResults: 0
        offset: 5
        hasMore: true
        count: 6
        limit: 1
        items:
        - owner:
            name: name
            id: id
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          time: 0
          id: 6
          message: message
        - owner:
            name: name
            id: id
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          time: 0
          id: 6
          message: message
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/CommentBean'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
      xml:
        name: Comments
    ScenarioEditBean:
      example:
        owner: owner
        dueDate: 0
        description: description
        priority: LOW
      properties:
        dueDate:
          format: int64
          type: integer
        priority:
          enum:
          - LOW
          - MEDIUM
          - HIGH
          type: string
        owner:
          type: string
        description:
          type: string
      type: object
    Script:
      example:
        modifiedTime: 0
        sizeInBytes: 6
        lockedBy: lockedBy
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        locked: true
        content: content
        lockedTime: 1
      properties:
        content:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        modifiedTime:
          format: int64
          type: integer
        sizeInBytes:
          format: int64
          type: integer
        lockedBy:
          type: string
        lockedTime:
          format: int64
          type: integer
        locked:
          type: boolean
        name:
          type: string
      type: object
    ScriptList:
      example:
        totalResults: 5
        offset: 7
        hasMore: true
        count: 5
        limit: 2
        items:
        - modifiedTime: 0
          sizeInBytes: 6
          lockedBy: lockedBy
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          locked: true
          content: content
          lockedTime: 1
        - modifiedTime: 0
          sizeInBytes: 6
          lockedBy: lockedBy
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          locked: true
          content: content
          lockedTime: 1
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/Script'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    ScriptCopy:
      example:
        from: from
        to: to
      properties:
        from:
          type: string
        to:
          type: string
      required:
      - from
      - to
      type: object
    RTSVList:
      example:
        totalResults: 0
        offset: 5
        count: 6
        limit: 1
        hasMore: true
        items:
        - singleChoice: true
          name: name
          allowMissing: true
          limit: limit
          description: description
          type: STRING
          dimension: dimension
          value: "{}"
        - singleChoice: true
          name: name
          allowMissing: true
          limit: limit
          description: description
          type: STRING
          dimension: dimension
          value: "{}"
        properties:
          key: properties
      properties:
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
        items:
          items:
            $ref: '#/components/schemas/RTSV'
          type: array
        hasMore:
          type: boolean
        properties:
          additionalProperties:
            type: string
          type: object
      type: object
      xml:
        name: result
    SessionAttributes:
      example:
        request: request
        database: database
        requestTimeInSeconds: requestTimeInSeconds
        connectionSource: connectionSource
        application: application
        requestState: requestState
        loginTimeInSeconds: loginTimeInSeconds
        dbConnectTimeInSeconds: dbConnectTimeInSeconds
        sessionId: sessionId
        userId: userId
      properties:
        userId:
          type: string
        sessionId:
          type: string
        loginTimeInSeconds:
          type: string
        application:
          type: string
        database:
          type: string
        dbConnectTimeInSeconds:
          type: string
        request:
          type: string
        requestTimeInSeconds:
          type: string
        connectionSource:
          type: string
        requestState:
          type: string
      type: object
    StreamProcessStartResponse:
      example:
        streamId: streamId
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        streamId:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    StreamProcessEndResponse:
      example:
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        status: status
      properties:
        status:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    DataLoadStartPayload:
      example:
        delimiter: delimiter
        ruleFileName: ruleFileName
      properties:
        ruleFileName:
          type: string
        delimiter:
          description: Currently only Comma is supported as delimiter
          type: string
      type: object
    DimBuildStartPayload:
      example:
        restructureOption: PRESERVE_ALL_DATA
      properties:
        restructureOption:
          enum:
          - PRESERVE_ALL_DATA
          - PRESERVE_LEAFLEVEL_DATA
          - PRESERVE_INPUT_DATA
          - PRESERVE_NO_DATA
          type: string
      type: object
    Variable:
      example:
        appName: appName
        dbName: dbName
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        value: value
      properties:
        name:
          type: string
        value:
          type: string
        appName:
          type: string
        dbName:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    VariableList:
      example:
        totalResults: 0
        offset: 5
        hasMore: true
        count: 6
        limit: 1
        items:
        - appName: appName
          dbName: dbName
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          value: value
        - appName: appName
          dbName: dbName
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          value: value
        properties:
          key: properties
      properties:
        items:
          items:
            $ref: '#/components/schemas/Variable'
          type: array
        hasMore:
          type: boolean
        totalResults:
          format: int64
          type: integer
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    SystemMaintainableResource:
      properties:
        available:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        id:
          type: string
      type: object
    SystemMaintenanceLimits:
      properties:
        disk:
          $ref: '#/components/schemas/SystemMaintainableResource'
        ram:
          $ref: '#/components/schemas/SystemMaintainableResource'
      type: object
    Limit:
      example:
        unlimited: true
        name: name
        description: description
        showUnlimited: true
        maximum: 6
        id: id
        value: value
        minimum: 0
      properties:
        id:
          type: string
        name:
          type: string
        value:
          type: string
        description:
          type: string
        unlimited:
          type: boolean
        showUnlimited:
          type: boolean
        minimum:
          format: int64
          type: integer
        maximum:
          format: int64
          type: integer
      type: object
    Limits:
      example:
        dataSegmentSize:
          unlimited: true
          name: name
          description: description
          showUnlimited: true
          maximum: 6
          id: id
          value: value
          minimum: 0
        virtualMemorySize:
          unlimited: true
          name: name
          description: description
          showUnlimited: true
          maximum: 6
          id: id
          value: value
          minimum: 0
        webLogicHeapSize:
          unlimited: true
          name: name
          description: description
          showUnlimited: true
          maximum: 6
          id: id
          value: value
          minimum: 0
        openFiles:
          unlimited: true
          name: name
          description: description
          showUnlimited: true
          maximum: 6
          id: id
          value: value
          minimum: 0
        maxMemory:
          unlimited: true
          name: name
          description: description
          showUnlimited: true
          maximum: 6
          id: id
          value: value
          minimum: 0
        userMaxProcesses:
          unlimited: true
          name: name
          description: description
          showUnlimited: true
          maximum: 6
          id: id
          value: value
          minimum: 0
        coreFileSize:
          unlimited: true
          name: name
          description: description
          showUnlimited: true
          maximum: 6
          id: id
          value: value
          minimum: 0
      properties:
        coreFileSize:
          $ref: '#/components/schemas/Limit'
        dataSegmentSize:
          $ref: '#/components/schemas/Limit'
        maxMemory:
          $ref: '#/components/schemas/Limit'
        openFiles:
          $ref: '#/components/schemas/Limit'
        userMaxProcesses:
          $ref: '#/components/schemas/Limit'
        virtualMemorySize:
          $ref: '#/components/schemas/Limit'
        webLogicHeapSize:
          $ref: '#/components/schemas/Limit'
      type: object
    DatabaseSettings:
      example:
        password: password
        user: user
      properties:
        user:
          type: string
        password:
          type: string
      type: object
    ODLLogHandlerSetting:
      example:
        logType: logType
        rotationPeriod: rotationPeriod
        retentionPeriodCustom: retentionPeriodCustom
        maxLogSize: maxLogSize
        rotationPeriodCustom: rotationPeriodCustom
        handlerName: handlerName
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        maxAllLogSize: maxAllLogSize
        retentionPeriod: retentionPeriod
      properties:
        handlerName:
          type: string
        logType:
          type: string
        maxLogSize:
          type: string
        maxAllLogSize:
          type: string
        rotationPeriod:
          type: string
        rotationPeriodCustom:
          type: string
        retentionPeriod:
          type: string
        retentionPeriodCustom:
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    Settings:
      example:
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
    AboutInstance:
      example:
        provisioningSupported: true
        resetPasswordSupported: true
        easInstalled: true
      properties:
        provisioningSupported:
          type: boolean
        resetPasswordSupported:
          type: boolean
        easInstalled:
          type: boolean
      type: object
      xml:
        name: aboutInstance
    EssbaseURL:
      example:
        application: application
        url: url
      properties:
        application:
          type: string
        url:
          type: string
      type: object
    EssbaseURLList:
      example:
        items:
        - application: application
          url: url
        - application: application
          url: url
      properties:
        items:
          items:
            $ref: '#/components/schemas/EssbaseURL'
          type: array
      type: object
    FileBean:
      example:
        fullPath: fullPath
        permissions:
          addFolder: true
          addFile: true
        name: name
        links:
        - method: method
          rel: rel
          href: href
          type: type
        - method: method
          rel: rel
          href: href
          type: type
        type: type
      properties:
        name:
          type: string
        fullPath:
          type: string
        type:
          type: string
        permissions:
          $ref: '#/components/schemas/FileBean_permissions'
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
      type: object
      xml:
        name: File
    FileCollectionResponse:
      example:
        totalResults: 6
        offset: 5
        count: 0
        hasMore: true
        limit: 1
        items:
        - fullPath: fullPath
          permissions:
            addFolder: true
            addFile: true
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          type: type
        - fullPath: fullPath
          permissions:
            addFolder: true
            addFile: true
          name: name
          links:
          - method: method
            rel: rel
            href: href
            type: type
          - method: method
            rel: rel
            href: href
            type: type
          type: type
        properties:
          key: properties
      properties:
        count:
          format: int64
          type: integer
        items:
          items:
            $ref: '#/components/schemas/FileBean'
          type: array
        totalResults:
          format: int64
          type: integer
        hasMore:
          type: boolean
        limit:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
          type: object
        offset:
          format: int64
          type: integer
      type: object
    FileBean_permissions:
      example:
        addFolder: true
        addFile: true
      properties:
        addFolder:
          type: boolean
        addFile:
          type: boolean
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
x-original-swagger-version: "2.0"

