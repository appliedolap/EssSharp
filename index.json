{
  "api/EssSharp.Abstractions/EssSharp.DatabaseType.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.DatabaseType.html",
    "title": "Enum DatabaseType",
    "keywords": "Enum DatabaseType Namespace EssSharp Assembly EssSharp.Abstractions.dll public enum DatabaseType Fields ASO = 0 BSO = 1"
  },
  "api/EssSharp.Abstractions/EssSharp.EssAggregateClear.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssAggregateClear.html",
    "title": "Enum EssAggregateClear",
    "keywords": "Enum EssAggregateClear Namespace EssSharp Assembly EssSharp.Abstractions.dll public enum EssAggregateClear Fields ALL_AGGREGATIONS = 2 all aggrefated data is cleared ALL_DATA = 0 All data, linked objects, and the outline are cleared PARTIAL_DATA = 1 only specified data region(s) cleared"
  },
  "api/EssSharp.Abstractions/EssSharp.EssApplicationStatus.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssApplicationStatus.html",
    "title": "Enum EssApplicationStatus",
    "keywords": "Enum EssApplicationStatus Namespace EssSharp Assembly EssSharp.Abstractions.dll public enum EssApplicationStatus Fields Started = 2 Stopped = 1 Unknown = 0"
  },
  "api/EssSharp.Abstractions/EssSharp.EssBuildMethod.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssBuildMethod.html",
    "title": "Enum EssBuildMethod",
    "keywords": "Enum EssBuildMethod Namespace EssSharp Assembly EssSharp.Abstractions.dll Defines BuildMethod public enum EssBuildMethod Fields Generation = 2 Enum GENERATION for value: GENERATION ParentChild = 1 Enum PARENTCHILD for value: PARENT-CHILD"
  },
  "api/EssSharp.Abstractions/EssSharp.EssBuildOption.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssBuildOption.html",
    "title": "Enum EssBuildOption",
    "keywords": "Enum EssBuildOption Namespace EssSharp Assembly EssSharp.Abstractions.dll Defines BuildOption public enum EssBuildOption Fields NONE = 1 Enum NONE for value: NONE REMOVEALLDATA = 5 Enum REMOVEALLDATA for value: REMOVE_ALL_DATA RETAINALLDATA = 2 Enum RETAINALLDATA for value: RETAIN_ALL_DATA RETAININPUTDATA = 3 Enum RETAININPUTDATA for value: RETAIN_INPUT_DATA RETAINLEAFDATA = 4 Enum RETAINLEAFDATA for value: RETAIN_LEAF_DATA"
  },
  "api/EssSharp.Abstractions/EssSharp.EssClearOption.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssClearOption.html",
    "title": "Enum EssClearOption",
    "keywords": "Enum EssClearOption Namespace EssSharp Assembly EssSharp.Abstractions.dll Defines ClearOptions public enum EssClearOption Fields ALL_AGGREGATIONS = 5 all aggrefated data is cleared ALL_DATA = 0 All data, linked objects, and the outline are cleared LEVEL_ZERO_BLOCKS = 2 Level zero blocks are cleared NON_INPUT_BLOCKS = 3 Non input blocks are cleared PARTIAL_DATA = 4 only specified data region(s) cleared UPPER_LEVEL_BLOCKS = 1 Upper lever blocks are cleared"
  },
  "api/EssSharp.Abstractions/EssSharp.EssCubeType.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssCubeType.html",
    "title": "Enum EssCubeType",
    "keywords": "Enum EssCubeType Namespace EssSharp Assembly EssSharp.Abstractions.dll public enum EssCubeType Fields ASO = 1 BSO = 2 CURRENCY = 3 Unknown = 0"
  },
  "api/EssSharp.Abstractions/EssSharp.EssDatabaseCreationOptions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssDatabaseCreationOptions.html",
    "title": "Class EssDatabaseCreationOptions",
    "keywords": "Class EssDatabaseCreationOptions Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssDatabaseCreationOptions Inheritance object EssDatabaseCreationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EssDatabaseCreationOptions(DatabaseType, bool, bool) public EssDatabaseCreationOptions(DatabaseType dbType = DatabaseType.BSO, bool enableScenarios = false, bool allowDuplicates = false) Parameters dbType DatabaseType enableScenarios bool allowDuplicates bool Properties AllowDuplicates public bool AllowDuplicates { get; set; } Property Value bool DatabaseType public DatabaseType DatabaseType { get; set; } Property Value DatabaseType EnableScenarios public bool EnableScenarios { get; set; } Property Value bool"
  },
  "api/EssSharp.Abstractions/EssSharp.EssDatasourceConnectionSubtype.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssDatasourceConnectionSubtype.html",
    "title": "Enum EssDatasourceConnectionSubtype",
    "keywords": "Enum EssDatasourceConnectionSubtype Namespace EssSharp Assembly EssSharp.Abstractions.dll Defines EssDatasourceConnectionSubtype public enum EssDatasourceConnectionSubtype Fields BI = 6 Enum BI for value: BI DB = 3 Enum DB for value: DB DB2 = 12 Enum DB2 for value: DB2 DELIMITEDFILE = 4 Enum DELIMITEDFILE for value: DELIMITEDFILE ESSBASE = 7 Enum ESSBASE for value: ESSBASE EXCELFILE = 2 Enum EXCELFILE for value: EXCELFILE FILE = 14 Enum FILE for value: FILE FIXEDWIDTHFILE = 5 Enum FIXEDWIDTHFILE for value: FIXEDWIDTHFILE JDBC = 8 Enum JDBC for value: JDBC MSSQL = 10 Enum MSSQL for value: MS_SQL MYSQL = 11 Enum MYSQL for value: MYSQL ORACLE = 13 Enum ORACLE for value: ORACLE SPARK = 9 Enum SPARK for value: SPARK TEMPLATE = 1 Enum TEMPLATE for value: TEMPLATE UNKNOWN = 0 Enum UNKNOWN for value: UNKNOWN"
  },
  "api/EssSharp.Abstractions/EssSharp.EssDatasourceConnectionType.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssDatasourceConnectionType.html",
    "title": "Enum EssDatasourceConnectionType",
    "keywords": "Enum EssDatasourceConnectionType Namespace EssSharp Assembly EssSharp.Abstractions.dll Defines Type public enum EssDatasourceConnectionType Fields BI = 4 Enum BI for value: BI DB = 2 Enum DB for value: DB ESSBASE = 3 Enum ESSBASE for value: ESSBASE FILE = 1 Enum FILE for value: FILE UNKNOWN = 0 Enum UNKNOWN for value: UNKNOWN"
  },
  "api/EssSharp.Abstractions/EssSharp.EssDatasourceQueryInfo.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssDatasourceQueryInfo.html",
    "title": "Class EssDatasourceQueryInfo",
    "keywords": "Class EssDatasourceQueryInfo Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssDatasourceQueryInfo : IEssDatasourceQueryInfo Inheritance object EssDatasourceQueryInfo Implements IEssDatasourceQueryInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EssDatasourceQueryInfo() Initializes a new instance of the EssDatasourceQueryInfo class. public EssDatasourceQueryInfo() EssDatasourceQueryInfo(IEssDatasource, string, string, string, Dictionary<string, List<string>>) Initializes a new instance of the EssDatasourceQueryInfo class with a datasource and select clause. public EssDatasourceQueryInfo(IEssDatasource datasource, string select, string where = null, string delimiter = \",\", Dictionary<string, List<string>> parameters = null) Parameters datasource IEssDatasource The IEssDatasource against which the query will be executed. select string The select clause of the query, with or without the SELECT keyword. where string (optional) The where clause of the query, with or without the WHERE keyword. delimiter string (optional) The delimiter for the query results. parameters Dictionary<string, List<string>> (optional) The query parameters. Exceptions ArgumentNullException EssDatasourceQueryInfo(string, string, Dictionary<string, List<string>>) Initializes a new instance of the EssDatasourceQueryInfo class with a fully articulated query. public EssDatasourceQueryInfo(string query, string delimiter = \",\", Dictionary<string, List<string>> parameters = null) Parameters query string The datasource query. delimiter string (optional) The delimiter for the query results. parameters Dictionary<string, List<string>> (optional) The query parameters. Properties Delimiter Returns or sets the delimiter for the query results. public string Delimiter { get; set; } Property Value string Parameters Returns or sets the query parameter dictionary for the query. public Dictionary<string, List<string>> Parameters { get; set; } Property Value Dictionary<string, List<string>> Query Returns or sets the query. public string Query { get; set; } Property Value string"
  },
  "api/EssSharp.Abstractions/EssSharp.EssDatasourceType.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssDatasourceType.html",
    "title": "Enum EssDatasourceType",
    "keywords": "Enum EssDatasourceType Namespace EssSharp Assembly EssSharp.Abstractions.dll Defines the type of an IEssDatasource. public enum EssDatasourceType Fields BI = 6 Enum BI for value: BI DB = 3 Enum DB for value: DB DB2 = 12 Enum DB2 for value: DB2 DELIMITEDFILE = 4 Enum DELIMITEDFILE for value: DELIMITEDFILE ESSBASE = 7 Enum ESSBASE for value: ESSBASE EXCELFILE = 2 Enum EXCELFILE for value: EXCELFILE FILE = 14 Enum FILE for value: FILE FIXEDWIDTHFILE = 5 Enum FIXEDWIDTHFILE for value: FIXEDWIDTHFILE JDBC = 8 Enum JDBC for value: JDBC MSSQL = 10 Enum MSSQL for value: MS_SQL MYSQL = 11 Enum MYSQL for value: MYSQL ORACLE = 13 Enum ORACLE for value: ORACLE SPARK = 9 Enum SPARK for value: SPARK TEMPLATE = 1 Enum TEMPLATE for value: TEMPLATE UNKNOWN = 0 Enum UNKNOWN for value: UNKNOWN"
  },
  "api/EssSharp.Abstractions/EssSharp.EssDrillthroughOptions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssDrillthroughOptions.html",
    "title": "Class EssDrillthroughOptions",
    "keywords": "Class EssDrillthroughOptions Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssDrillthroughOptions : IEssDrillthroughOptions Inheritance object EssDrillthroughOptions Implements IEssDrillthroughOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EssDrillthroughOptions() Initializes a new instance of the EssDrillthroughOptions class. public EssDrillthroughOptions() EssDrillthroughOptions(string, bool, bool, bool, bool) Initializes a new instance of the EssDrillthroughOptions class. public EssDrillthroughOptions(string aliasTable = null, bool includeColumnHeaders = true, bool includeMetadataOnly = false, bool returnTypedValues = false, bool prefixStringValuesForExcel = false) Parameters aliasTable string (optional) The alias table that was used to produce the associated drillthrough ranges. includeColumnHeaders bool (optional) Whether to include column headers in the report. includeMetadataOnly bool (optional) Whether to include only column types and, optionally, column headers in the report. returnTypedValues bool (optional) Whether report values should be converted to the column types indicated by the server. prefixStringValuesForExcel bool (optional) Whether to prefix string values with an apostrophe (') for use in Excel. Properties AliasTable Returns or sets the alias table that was used to produce the associated drillthrough ranges. public string AliasTable { get; set; } Property Value string IncludeColumnHeaders Returns or sets whether to include column headers in the report. public bool IncludeColumnHeaders { get; set; } Property Value bool IncludeMetadataOnly Returns or sets whether to include only column types and, optionally, column headers in the report. public bool IncludeMetadataOnly { get; set; } Property Value bool PrefixStringValuesForExcel Returns or sets the whether to prefix string values with an apostrophe (') for use in Excel. public bool PrefixStringValuesForExcel { get; set; } Property Value bool ReturnTypedValues Returns or sets the whether report values should be converted to the column types indicated by the server. public bool ReturnTypedValues { get; set; } Property Value bool"
  },
  "api/EssSharp.Abstractions/EssSharp.EssDrillthroughRange.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssDrillthroughRange.html",
    "title": "Class EssDrillthroughRange",
    "keywords": "Class EssDrillthroughRange Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssDrillthroughRange : IEssDrillthroughRange Inheritance object EssDrillthroughRange Implements IEssDrillthroughRange Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EssDrillthroughRange() public EssDrillthroughRange() EssDrillthroughRange(Dictionary<string, List<string>>) public EssDrillthroughRange(Dictionary<string, List<string>> dimensionMemberSets) Parameters dimensionMemberSets Dictionary<string, List<string>> EssDrillthroughRange(Dictionary<string, string>) public EssDrillthroughRange(Dictionary<string, string> dimensionMemberSet) Parameters dimensionMemberSet Dictionary<string, string> Properties DimensionMemberSets Returns or sets the list of values for each member in the contiguous drill-through range. public Dictionary<string, List<string>> DimensionMemberSets { get; set; } Property Value Dictionary<string, List<string>>"
  },
  "api/EssSharp.Abstractions/EssSharp.EssGridDimension.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssGridDimension.html",
    "title": "Class EssGridDimension",
    "keywords": "Class EssGridDimension Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssGridDimension Inheritance object EssGridDimension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Column public int Column { get; set; } Property Value int DisplayName public string DisplayName { get; set; } Property Value string Expanded public bool Expanded { get; set; } Property Value bool Hidden public bool Hidden { get; set; } Property Value bool Name public string Name { get; set; } Property Value string Pov public string Pov { get; set; } Property Value string Row public int Row { get; set; } Property Value int"
  },
  "api/EssSharp.Abstractions/EssSharp.EssGridRange.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssGridRange.html",
    "title": "Class EssGridRange",
    "keywords": "Class EssGridRange Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssGridRange Inheritance object EssGridRange Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DataFormats public List<string> DataFormats { get; set; } Property Value List<string> End public int End { get; set; } Property Value int EnumIds public List<string> EnumIds { get; set; } Property Value List<string> Filters public List<string> Filters { get; set; } Property Value List<string> Start public int Start { get; set; } Property Value int Statuses public List<string> Statuses { get; set; } Property Value List<string> Texts public List<string> Texts { get; set; } Property Value List<string> Types public List<string> Types { get; set; } Property Value List<string> Values public List<string> Values { get; set; } Property Value List<string>"
  },
  "api/EssSharp.Abstractions/EssSharp.EssGridSlice.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssGridSlice.html",
    "title": "Class EssGridSlice",
    "keywords": "Class EssGridSlice Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssGridSlice Inheritance object EssGridSlice Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Columns public int Columns { get; set; } Property Value int Data public EssGridSliceData Data { get; set; } Property Value EssGridSliceData DirtyCells public List<int> DirtyCells { get; set; } Property Value List<int> DirtyTexts public List<int> DirtyTexts { get; set; } Property Value List<int> Rows public int Rows { get; set; } Property Value int"
  },
  "api/EssSharp.Abstractions/EssSharp.EssGridSliceData.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssGridSliceData.html",
    "title": "Class EssGridSliceData",
    "keywords": "Class EssGridSliceData Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssGridSliceData Inheritance object EssGridSliceData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ranges public List<EssGridRange> Ranges { get; set; } Property Value List<EssGridRange>"
  },
  "api/EssSharp.Abstractions/EssSharp.EssJobClearDataOptions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssJobClearDataOptions.html",
    "title": "Class EssJobClearDataOptions",
    "keywords": "Class EssJobClearDataOptions Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssJobClearDataOptions : EssJobOptions, IEssJobOptions Inheritance object EssJobOptions EssJobClearDataOptions Implements IEssJobOptions Inherited Members EssJobOptions.ApplicationName EssJobOptions.CubeName EssJobOptions.JobType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EssJobClearDataOptions(string, string, EssClearOption, string) public EssJobClearDataOptions(string applicationName = null, string cubeName = null, EssClearOption option = EssClearOption.ALL_DATA, string dataExpression = null) Parameters applicationName string cubeName string option EssClearOption dataExpression string Properties Option Returns or sets the clear option for an Clear job. public EssClearOption? Option { get; set; } Property Value EssClearOption? PartialDataExpression Returns or sets the mdx expression specifying the region to clear for an ASO cube when the PARTIAL_DATA is used for an Clear job. public string PartialDataExpression { get; set; } Property Value string"
  },
  "api/EssSharp.Abstractions/EssSharp.EssJobExecuteMDXOptions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssJobExecuteMDXOptions.html",
    "title": "Class EssJobExecuteMDXOptions",
    "keywords": "Class EssJobExecuteMDXOptions Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssJobExecuteMDXOptions : EssJobOptions, IEssJobOptions Inheritance object EssJobOptions EssJobExecuteMDXOptions Implements IEssJobOptions Inherited Members EssJobOptions.ApplicationName EssJobOptions.CubeName EssJobOptions.JobType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EssJobExecuteMDXOptions(string, string, string) public EssJobExecuteMDXOptions(string scriptName, string applicationName = null, string cubeName = null) Parameters scriptName string The name of script to execute. Maps to . applicationName string cubeName string"
  },
  "api/EssSharp.Abstractions/EssSharp.EssJobExportExcelOptions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssJobExportExcelOptions.html",
    "title": "Class EssJobExportExcelOptions",
    "keywords": "Class EssJobExportExcelOptions Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssJobExportExcelOptions : EssJobOptions, IEssJobOptions Inheritance object EssJobOptions EssJobExportExcelOptions Implements IEssJobOptions Inherited Members EssJobOptions.ApplicationName EssJobOptions.CubeName EssJobOptions.JobType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EssJobExportExcelOptions(string, EssBuildMethod?, bool?, string, bool?, bool?) public EssJobExportExcelOptions(string applicationName = null, EssBuildMethod? buildMethod = EssBuildMethod.ParentChild, bool? calc = false, string cubeName = null, bool? data = false, bool? memberIds = false) Parameters applicationName string buildMethod EssBuildMethod? calc bool? cubeName string data bool? memberIds bool? Properties BuildMethod Returns or sets the build method for an ExportExcel job. public EssBuildMethod? BuildMethod { get; set; } Property Value EssBuildMethod? Calc Returns or sets the include calc option for an ExportExcel job. public bool? Calc { get; set; } Property Value bool? Data Returns or sets the include data option for an ExportExcel job. public bool? Data { get; set; } Property Value bool? MemberIds Returns or sets the inlcude member IDs options for an ExportExcel job. public bool? MemberIds { get; set; } Property Value bool?"
  },
  "api/EssSharp.Abstractions/EssSharp.EssJobImportExcelOptions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssJobImportExcelOptions.html",
    "title": "Class EssJobImportExcelOptions",
    "keywords": "Class EssJobImportExcelOptions Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssJobImportExcelOptions : EssJobOptions, IEssJobOptions Inheritance object EssJobOptions EssJobImportExcelOptions Implements IEssJobOptions Inherited Members EssJobOptions.ApplicationName EssJobOptions.CubeName EssJobOptions.JobType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EssJobImportExcelOptions(IEssFile, string, EssBuildOption?, bool?, string, bool?, bool?, bool?, bool?, bool?) public EssJobImportExcelOptions(IEssFile essFile, string applicationName = null, EssBuildOption? buildOption = null, bool? createFiles = true, string cubeName = null, bool? deleteExcelOnSuccess = null, bool? executeScripts = true, bool? loadData = true, bool? overwrite = null, bool? recreateApp = false) Parameters essFile IEssFile applicationName string buildOption EssBuildOption? createFiles bool? cubeName string deleteExcelOnSuccess bool? executeScripts bool? loadData bool? overwrite bool? recreateApp bool? EssJobImportExcelOptions(string, EssBuildOption?, string, bool?, string, bool?, bool?, string, bool?, bool?, bool?) public EssJobImportExcelOptions(string applicationName = null, EssBuildOption? buildOption = null, string catalogExcelPath = null, bool? createFiles = true, string cubeName = null, bool? deleteExcelOnSuccess = null, bool? executeScripts = true, string importExcelFilename = null, bool? loadData = true, bool? overwrite = null, bool? recreateApp = false) Parameters applicationName string buildOption EssBuildOption? catalogExcelPath string createFiles bool? cubeName string deleteExcelOnSuccess bool? executeScripts bool? importExcelFilename string loadData bool? overwrite bool? recreateApp bool? Properties BuildOption Returns or sets the build option for an ImportExcel job. public EssBuildOption? BuildOption { get; set; } Property Value EssBuildOption? CatalogExcelPath Returns or sets the catalog excel path option for an ImportExcel job. public string CatalogExcelPath { get; set; } Property Value string CreateFiles Returns or sets the create files option for an ImportExcel job. public bool? CreateFiles { get; set; } Property Value bool? DeleteExcelOnSuccess Returns or sets the delete excel file (on success) option for an ImportExcel job. public bool? DeleteExcelOnSuccess { get; set; } Property Value bool? ExecuteScripts Returns or sets the execute scripts option for an ImportExcel job. public bool? ExecuteScripts { get; set; } Property Value bool? ImportExcelFilename Returns or sets the import excel file name option for an ImportExcel job. public string ImportExcelFilename { get; set; } Property Value string LoadData Returns or sets the load data option for an ImportExcel job. public bool? LoadData { get; set; } Property Value bool? Overwrite Returns or sets the overwrite option for an ImportExcel job. public bool? Overwrite { get; set; } Property Value bool? RecreateApp Returns or sets the recreate app option for an ImportExcel job. public bool? RecreateApp { get; set; } Property Value bool?"
  },
  "api/EssSharp.Abstractions/EssSharp.EssJobLoadDataOptions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssJobLoadDataOptions.html",
    "title": "Class EssJobLoadDataOptions",
    "keywords": "Class EssJobLoadDataOptions Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssJobLoadDataOptions : EssJobOptions, IEssJobOptions Inheritance object EssJobOptions EssJobLoadDataOptions Implements IEssJobOptions Inherited Members EssJobOptions.ApplicationName EssJobOptions.CubeName EssJobOptions.JobType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EssJobLoadDataOptions(IEssFile, IEssFile, string, string, bool?) public EssJobLoadDataOptions(IEssFile essDataFile, IEssFile essRuleFile = null, string applicationName = null, string cubeName = null, bool? abortOnError = false) Parameters essDataFile IEssFile essRuleFile IEssFile applicationName string cubeName string abortOnError bool? EssJobLoadDataOptions(FileStream, FileStream, string, string, bool?) public EssJobLoadDataOptions(FileStream localDataFileStream, FileStream localRuleFileStream = null, string applicationName = null, string cubeName = null, bool? abortOnError = false) Parameters localDataFileStream FileStream localRuleFileStream FileStream applicationName string cubeName string abortOnError bool? EssJobLoadDataOptions(string, string, string, string, bool?) public EssJobLoadDataOptions(string dataFilePath = null, string ruleFilePath = null, string applicationName = null, string cubeName = null, bool? abortOnError = false) Parameters dataFilePath string ruleFilePath string applicationName string cubeName string abortOnError bool? Properties AbortOnError Returns or sets whether to abort the data load if an error is encountered for an Dataload job. public bool? AbortOnError { get; set; } Property Value bool? File public List<string> File { get; set; } Property Value List<string> LocalDataFilePath public string LocalDataFilePath { get; set; } Property Value string LocalDataFileStream public FileStream LocalDataFileStream { get; set; } Property Value FileStream LocalRuleFilePath public string LocalRuleFilePath { get; set; } Property Value string LocalRuleFileStream public FileStream LocalRuleFileStream { get; set; } Property Value FileStream Rule Returns or sets the rule file (or files) to use for an Dataload job. public List<string> Rule { get; set; } Property Value List<string>"
  },
  "api/EssSharp.Abstractions/EssSharp.EssJobOptions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssJobOptions.html",
    "title": "Class EssJobOptions",
    "keywords": "Class EssJobOptions Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssJobOptions : IEssJobOptions Inheritance object EssJobOptions Implements IEssJobOptions Derived EssJobClearDataOptions EssJobExecuteMDXOptions EssJobExportExcelOptions EssJobImportExcelOptions EssJobLoadDataOptions EssJobScriptOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EssJobOptions(EssJobType) public EssJobOptions(EssJobType jobType) Parameters jobType EssJobType Properties ApplicationName The name of the application on which to perform the job. public string ApplicationName { get; set; } Property Value string CubeName Returns or sets the name of the cube on which to perform the job. public string CubeName { get; set; } Property Value string JobType Returns the job type. public EssJobType JobType { get; protected set; } Property Value EssJobType"
  },
  "api/EssSharp.Abstractions/EssSharp.EssJobScriptOptions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssJobScriptOptions.html",
    "title": "Class EssJobScriptOptions",
    "keywords": "Class EssJobScriptOptions Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssJobScriptOptions : EssJobOptions, IEssJobOptions Inheritance object EssJobOptions EssJobScriptOptions Implements IEssJobOptions Inherited Members EssJobOptions.ApplicationName EssJobOptions.CubeName EssJobOptions.JobType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EssJobScriptOptions(IEssScript, string, string) public EssJobScriptOptions(IEssScript essScript, string applicationName = null, string cubeName = null) Parameters essScript IEssScript applicationName string cubeName string EssJobScriptOptions(string, string, string) public EssJobScriptOptions(string fileName, string applicationName = null, string cubeName = null) Parameters fileName string applicationName string cubeName string Properties Script Returns or sets the file to execute for an Calc job or the file (or files) to load for an Dataload job. public string Script { get; set; } Property Value string"
  },
  "api/EssSharp.Abstractions/EssSharp.EssJobStatus.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssJobStatus.html",
    "title": "Enum EssJobStatus",
    "keywords": "Enum EssJobStatus Namespace EssSharp Assembly EssSharp.Abstractions.dll public enum EssJobStatus Fields Completed = 1 Completed CompletedWithWarnings = 2 Completed With Warnings Failed = 3 Failed InProgress = 4 In Progress New = -1 New Unknown = 0 Unknown"
  },
  "api/EssSharp.Abstractions/EssSharp.EssJobType.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssJobType.html",
    "title": "Enum EssJobType",
    "keywords": "Enum EssJobType Namespace EssSharp Assembly EssSharp.Abstractions.dll public enum EssJobType Fields [EnumMember(Value = \"asoBufferCommit\")] AsoBufferCommit = 12 ASO Buffer Commit [EnumMember(Value = \"asoBufferDataLoad\")] AsoBufferDataLoad = 11 ASO Buffer Data Load BuildAggregation = 10 Build Aggregation Calc = 3 Calc Execution Clear = 4 Clear Data ClearAggregation = 9 Clear Aggregation Dataload = 1 Data Load Dimbuild = 2 Dimension Build ExportData = 13 Export Data ExportExcel = 6 Export Excel ImportExcel = 5 Import Excel LcmExport = 7 LCM Export LcmImport = 8 LCM Import MAXLScript = 16 MAXL Script MdxScript = 14 MDX Script ReportScript = 15 Report Script Unknown = 0 Unknown"
  },
  "api/EssSharp.Abstractions/EssSharp.EssLockedFileType.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssLockedFileType.html",
    "title": "Enum EssLockedFileType",
    "keywords": "Enum EssLockedFileType Namespace EssSharp Assembly EssSharp.Abstractions.dll public enum EssLockedFileType Fields ALIAS = 5 Enum ALIAS for value: ALIAS ALL = 34 Enum ALL for value: ALL ASCBACKUP = 7 Enum ASCBACKUP for value: ASCBACKUP BACKUP = 27 Enum BACKUP for value: BACKUP BINBACKUP = 8 Enum BINBACKUP for value: BINBACKUP CALCSCRIPT = 2 Enum CALCSCRIPT for value: CALCSCRIPT CSV = 14 Enum CSV for value: CSV DATA = 29 Enum DATA for value: DATA DRILLTHROUGH = 33 Enum DRILLTHROUGH for value: DRILLTHROUGH EQD = 23 Enum EQD for value: EQD ERROR = 30 Enum ERROR for value: ERROR EXCEL = 9 Enum EXCEL for value: EXCEL GROOVY = 32 Enum GROOVY for value: GROOVY JAVACDF = 25 Enum JAVACDF for value: JAVA_CDF LOTUS2 = 15 Enum LOTUS2 for value: LOTUS2 LOTUS3 = 16 Enum LOTUS3 for value: LOTUS3 LOTUS4 = 18 Enum LOTUS4 for value: LOTUS4 LRO = 22 Enum LRO for value: LRO MAX = 26 Enum MAX for value: MAX MAXL = 12 Enum MAXL for value: MAXL MDX = 35 Enum MDX for value: MDX OUT = 31 Enum OUT for value: OUT OUTLINE = 1 Enum OUTLINE for value: OUTLINE PARTITION = 20 Enum PARTITION for value: PARTITION REPORT = 3 Enum REPORT for value: REPORT RULES = 4 Enum RULES for value: RULES SELECTION = 21 Enum SELECTION for value: SELECTION STRUCTURE = 6 Enum STRUCTURE for value: STRUCTURE TEXT = 17 Enum TEXT for value: TEXT UNKNOWN = 0 Enum UNKNOWN for for value: UNKNOWN WIZARD = 19 Enum WIZARD for value: WIZARD WORKSHEET = 28 Enum WORKSHEET for value: WORKSHEET XLSM = 11 Enum XLSM for value: XLSM XLSX = 10 Enum XLSX for value: XLSX XML = 24 Enum XML for value: XML ZIP = 13 Enum ZIP for value: ZIP"
  },
  "api/EssSharp.Abstractions/EssSharp.EssLockOptions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssLockOptions.html",
    "title": "Class EssLockOptions",
    "keywords": "Class EssLockOptions Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssLockOptions Inheritance object EssLockOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EssLockOptions(IEssFile, EssLockedFileType?) public EssLockOptions(IEssFile lockObject, EssLockedFileType? lockFileType) Parameters lockObject IEssFile lockFileType EssLockedFileType? EssLockOptions(string, EssLockedFileType?) public EssLockOptions(string fileName, EssLockedFileType? lockFileType) Parameters fileName string lockFileType EssLockedFileType? Properties LockObjectName public string LockObjectName { get; } Property Value string LockedFileType public EssLockedFileType? LockedFileType { get; } Property Value EssLockedFileType?"
  },
  "api/EssSharp.Abstractions/EssSharp.EssLockType.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssLockType.html",
    "title": "Enum EssLockType",
    "keywords": "Enum EssLockType Namespace EssSharp Assembly EssSharp.Abstractions.dll public enum EssLockType Fields Block = 2 Enum Blocked for for value: Blocked Object = 1 Enum Object for for value: Object Unknown = 0 Enum UNKNOWN for for value: UNKNOWN"
  },
  "api/EssSharp.Abstractions/EssSharp.EssMemberIdentifierType.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssMemberIdentifierType.html",
    "title": "Enum EssMemberIdentifierType",
    "keywords": "Enum EssMemberIdentifierType Namespace EssSharp Assembly EssSharp.Abstractions.dll Defines MemberIdentifierType public enum EssMemberIdentifierType Fields ALIAS = 2 Enum ALIAS for value: ALIAS NAME = 1 Enum NAME for value: NAME UNIQUENAME = 3 Enum UNIQUENAME for value: UNIQUE_NAME"
  },
  "api/EssSharp.Abstractions/EssSharp.EssNamedQuery.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssNamedQuery.html",
    "title": "Class EssNamedQuery",
    "keywords": "Class EssNamedQuery Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssNamedQuery Inheritance object EssNamedQuery Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties QueryName public string QueryName { get; set; } Property Value string QueryType public NamedQueryType QueryType { get; set; } Property Value NamedQueryType query public EssQuery query { get; set; } Property Value EssQuery"
  },
  "api/EssSharp.Abstractions/EssSharp.EssQuery.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssQuery.html",
    "title": "Class EssQuery",
    "keywords": "Class EssQuery Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssQuery Inheritance object EssQuery Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EssQuery(string, string, EssQueryPreferences) public EssQuery(string discription = null, string spec = null, EssQueryPreferences preferences = null) Parameters discription string spec string preferences EssQueryPreferences Properties Discription public string Discription { get; set; } Property Value string Preferences public EssQueryPreferences Preferences { get; set; } Property Value EssQueryPreferences Spec public string Spec { get; set; } Property Value string"
  },
  "api/EssSharp.Abstractions/EssSharp.EssQueryPreferences.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssQueryPreferences.html",
    "title": "Class EssQueryPreferences",
    "keywords": "Class EssQueryPreferences Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssQueryPreferences Inheritance object EssQueryPreferences Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EssQueryPreferences(bool, bool, bool, bool, bool, bool, bool, bool, EssMemberIdentifierType?) public EssQueryPreferences(bool dataless = false, bool hideRestrictedData = false, bool cellAttributes = false, bool formatString = false, bool formatValues = false, bool meaninglessCells = false, bool textList = false, bool urlDrillThrough = false, EssMemberIdentifierType? memberIdentifierType = null) Parameters dataless bool hideRestrictedData bool cellAttributes bool formatString bool formatValues bool meaninglessCells bool textList bool urlDrillThrough bool memberIdentifierType EssMemberIdentifierType? Properties CellAttributes Gets or Sets CellAttributes public bool CellAttributes { get; set; } Property Value bool Dataless Gets or Sets Dataless public bool Dataless { get; set; } Property Value bool FormatString Gets or Sets FormatString public bool FormatString { get; set; } Property Value bool FormatValues Gets or Sets FormatValues public bool FormatValues { get; set; } Property Value bool HideRestrictedData Gets or Sets HideRestrictedData public bool HideRestrictedData { get; set; } Property Value bool MeaninglessCells Gets or Sets MeaninglessCells public bool MeaninglessCells { get; set; } Property Value bool MemberIdentifierType Gets or Sets Member identifier Type public EssMemberIdentifierType? MemberIdentifierType { get; set; } Property Value EssMemberIdentifierType? TextList Gets or Sets TextList public bool TextList { get; set; } Property Value bool UrlDrillThrough Gets or Sets UrlDrillThrough public bool UrlDrillThrough { get; set; } Property Value bool"
  },
  "api/EssSharp.Abstractions/EssSharp.EssQueryReport.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssQueryReport.html",
    "title": "Class EssQueryReport",
    "keywords": "Class EssQueryReport Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssQueryReport Inheritance object EssQueryReport Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Data public object[,] Data { get; set; } Property Value object[,] Metadata public EssQueryReport.ReportMetadata Metadata { get; set; } Property Value EssQueryReport.ReportMetadata"
  },
  "api/EssSharp.Abstractions/EssSharp.EssQueryReport.ReportMetadata.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssQueryReport.ReportMetadata.html",
    "title": "Class EssQueryReport.ReportMetadata",
    "keywords": "Class EssQueryReport.ReportMetadata Namespace EssSharp Assembly EssSharp.Abstractions.dll public class EssQueryReport.ReportMetadata Inheritance object EssQueryReport.ReportMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ColumnDimensionMembers public List<string> ColumnDimensionMembers { get; set; } Property Value List<string> PageDimensionMembers public List<string> PageDimensionMembers { get; set; } Property Value List<string> RowDimensionMembers public List<string> RowDimensionMembers { get; set; } Property Value List<string>"
  },
  "api/EssSharp.Abstractions/EssSharp.EssScriptType.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssScriptType.html",
    "title": "Enum EssScriptType",
    "keywords": "Enum EssScriptType Namespace EssSharp Assembly EssSharp.Abstractions.dll public enum EssScriptType Fields Calc = 1 MDX = 3 MaxL = 2 Report = 4 Unknown = 0"
  },
  "api/EssSharp.Abstractions/EssSharp.EssType.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.EssType.html",
    "title": "Enum EssType",
    "keywords": "Enum EssType Namespace EssSharp Assembly EssSharp.Abstractions.dll public enum EssType Fields Application = 0 ApplicationConfiguration = 1 Cube = 2 Datasource = 3 DatasourceConnection = 4 Dimension = 21 DrillthroughReport = 5 File = 6 Folder = 7 Generation = 22 Grid = 8 Group = 9 Job = 10 Level = 23 Lock = 24 Member = 11 Outline = 12 Scenario = 13 Script = 14 Server = 15 Session = 16 Url = 17 User = 18 Utility = 19 Variable = 20"
  },
  "api/EssSharp.Abstractions/EssSharp.FluentIEssCubeExtensions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.FluentIEssCubeExtensions.html",
    "title": "Class FluentIEssCubeExtensions",
    "keywords": "Class FluentIEssCubeExtensions Namespace EssSharp Assembly EssSharp.Abstractions.dll Fluent extensions for IEssCube. public static class FluentIEssCubeExtensions Inheritance object FluentIEssCubeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateScriptAsync<T>(Task<IEssCube>, string, string, CancellationToken) Asynchronously creates a script with the given name (and type T) on the cube. public static Task<T> CreateScriptAsync<T>(this Task<IEssCube> cubeTask, string name, string content = null, CancellationToken cancellationToken = default) where T : class, IEssScript Parameters cubeTask Task<IEssCube> name string The name of the script. content string (optional) The content of the new script. cancellationToken CancellationToken Returns Task<T> Type Parameters T Remarks Creates an IEssScript of the specific type T. GetDrillthroughReportAsync(Task<IEssCube>, string, bool, CancellationToken) Asynchronously gets the drillthrough report with the given name. public static Task<IEssDrillthroughReport> GetDrillthroughReportAsync(this Task<IEssCube> cubeTask, string reportName, bool getDetails = false, CancellationToken cancellationToken = default) Parameters cubeTask Task<IEssCube> reportName string The name of the report. getDetails bool (optional) Whether to get the full report specification (or only summary details). cancellationToken CancellationToken Returns Task<IEssDrillthroughReport> GetDrillthroughReportsAsync(Task<IEssCube>, bool, CancellationToken) Asynchronously gets the list of drillthrough reports. public static Task<List<IEssDrillthroughReport>> GetDrillthroughReportsAsync(this Task<IEssCube> cubeTask, bool getDetails = false, CancellationToken cancellationToken = default) Parameters cubeTask Task<IEssCube> getDetails bool (optional) Whether to get the full report specification (or only summary details). cancellationToken CancellationToken Returns Task<List<IEssDrillthroughReport>> GetLockedObjectAsync(Task<IEssCube>, string, CancellationToken) Asynchronously gets the locked object with the given name. public static Task<IEssLockObject> GetLockedObjectAsync(this Task<IEssCube> cubeTask, string name, CancellationToken cancellationToken = default) Parameters cubeTask Task<IEssCube> name string cancellationToken CancellationToken Returns Task<IEssLockObject> GetScriptAsync<T>(Task<IEssCube>, string, bool, CancellationToken) Asynchronously gets the script with the given name (and type T) from the cube. public static Task<T> GetScriptAsync<T>(this Task<IEssCube> cubeTask, string scriptName, bool getContent = false, CancellationToken cancellationToken = default) where T : class, IEssScript Parameters cubeTask Task<IEssCube> scriptName string The name of the script. getContent bool Whether to get the full script, including content, or only summary details. cancellationToken CancellationToken Returns Task<T> Type Parameters T Remarks Returns an IEssScript of the specific given type T."
  },
  "api/EssSharp.Abstractions/EssSharp.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.html",
    "title": "Namespace EssSharp",
    "keywords": "Namespace EssSharp Classes EssDatabaseCreationOptions EssDatasourceQueryInfo EssDrillthroughOptions EssDrillthroughRange EssGridDimension EssGridRange EssGridSlice EssGridSliceData EssJobClearDataOptions EssJobExecuteMDXOptions EssJobExportExcelOptions EssJobImportExcelOptions EssJobLoadDataOptions EssJobOptions EssJobScriptOptions EssLockOptions EssNamedQuery EssQuery EssQueryPreferences EssQueryReport EssQueryReport.ReportMetadata FluentIEssCubeExtensions Fluent extensions for IEssCube. IEssApplicationExtensions Fluent extensions for IEssApplication. IEssDatasourceExtensions Fluent extensions for IEssDatasource. IEssDrillthroughReportExtensions Fluent extensions for IEssDrillthroughReport. IEssFileExtensions Fluent extensions for IEssFile. IEssFolderExtensions Fluent extensions for IEssFolder. IEssJobExtensions Fluent extensions for IEssJob. Interfaces IEssAbout IEssAboutInstance IEssApplication IEssApplicationConfiguration IEssApplicationDatasource IEssApplicationDatasourceConnection IEssApplicationVariable IEssCalcScript IEssCube IEssCubeVariable IEssDatasource IEssDatasourceConnection IEssDatasourceQueryInfo IEssDimension IEssDrillthroughOptions IEssDrillthroughRange IEssDrillthroughReport IEssFile IEssFolder IEssGrid IEssGroup IEssJob IEssJobOptions IEssLock IEssLockBlock IEssLockObject IEssMaxlScript IEssMdxScript IEssObject IEssReportScript IEssScript IEssServer IEssServerFactory IEssServerVariable IEssSession IEssUrl IEssUser IEssUserSession IEssUtility Enums DatabaseType EssAggregateClear EssApplicationStatus EssBuildMethod Defines BuildMethod EssBuildOption Defines BuildOption EssClearOption Defines ClearOptions EssCubeType EssDatasourceConnectionSubtype Defines EssDatasourceConnectionSubtype EssDatasourceConnectionType Defines Type EssDatasourceType Defines the type of an IEssDatasource. EssJobStatus EssJobType EssLockType EssLockedFileType EssMemberIdentifierType Defines MemberIdentifierType EssScriptType EssType NamedQueryType Defines Type VariableScope The IEssServerVariable scope."
  },
  "api/EssSharp.Abstractions/EssSharp.IEssAbout.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssAbout.html",
    "title": "Interface IEssAbout",
    "keywords": "Interface IEssAbout Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssAbout Properties Build Returns the server build revision. string Build { get; } Property Value string Description Returns the server description. string Description { get; } Property Value string Version Returns the server version. string Version { get; } Property Value string"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssAboutInstance.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssAboutInstance.html",
    "title": "Interface IEssAboutInstance",
    "keywords": "Interface IEssAboutInstance Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssAboutInstance Properties EasInstalled Returns whether EAS is installed for the server. bool EasInstalled { get; } Property Value bool ProvisioningSupported Returns whether provisioning is supported by the server. bool ProvisioningSupported { get; } Property Value bool ResetPasswordSupported Returns whether password reset is supported by the server for the current user. bool ResetPasswordSupported { get; } Property Value bool"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssApplication.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssApplication.html",
    "title": "Interface IEssApplication",
    "keywords": "Interface IEssApplication Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssApplication : IEssObject Inherited Members IEssObject.Name IEssObject.Type Properties CreatedDate Returns the date and time the application was created. DateTime CreatedDate { get; } Property Value DateTime ModifiedDate Returns the date and time the application was last modified. DateTime ModifiedDate { get; } Property Value DateTime Server Returns the server that contains this application. IEssServer Server { get; } Property Value IEssServer The server that contains this application. Status Returns the status of the application. EssApplicationStatus Status { get; } Property Value EssApplicationStatus Methods Copy(string) Copy The Application. void Copy(string copyName) Parameters copyName string CopyAsync(string, CancellationToken) Copy the application. Task CopyAsync(string copyName, CancellationToken cancellationToken = default) Parameters copyName string cancellationToken CancellationToken Returns Task CreateApplicationVariable(string, string) Create an application variable IEssApplicationVariable CreateApplicationVariable(string varName, string value) Parameters varName string value string Returns IEssApplicationVariable CreateApplicationVariableAsync(string, string, CancellationToken) Create an application variable Task<IEssApplicationVariable> CreateApplicationVariableAsync(string varName, string value, CancellationToken cancellationToken = default) Parameters varName string value string cancellationToken CancellationToken Returns Task<IEssApplicationVariable> CreateCube(string, EssDatabaseCreationOptions) Create a new cube on an Application IEssCube CreateCube(string cubeName, EssDatabaseCreationOptions options = null) Parameters cubeName string options EssDatabaseCreationOptions Returns IEssCube CreateCubeAsync(string, EssDatabaseCreationOptions, CancellationToken) Create a new cube on an Application Task<IEssCube> CreateCubeAsync(string cubeName, EssDatabaseCreationOptions options = null, CancellationToken cancellationToken = default) Parameters cubeName string options EssDatabaseCreationOptions cancellationToken CancellationToken Returns Task<IEssCube> CreateCubeFromWorkbook(string, EssJobImportExcelOptions) Creates a new cube (and application) from an existing server file. IEssCube CreateCubeFromWorkbook(string cubeName, EssJobImportExcelOptions options) Parameters cubeName string options EssJobImportExcelOptions Returns IEssCube CreateCubeFromWorkbook(string, Stream, EssJobImportExcelOptions) Creates a new cube (and application) from a workbook stream. IEssCube CreateCubeFromWorkbook(string cubeName, Stream stream, EssJobImportExcelOptions options = null) Parameters cubeName string stream Stream options EssJobImportExcelOptions Returns IEssCube CreateCubeFromWorkbook(string, string, EssJobImportExcelOptions) Creates a new cube (and application) from a local workbook file path. IEssCube CreateCubeFromWorkbook(string cubeName, string localWorkbookPath, EssJobImportExcelOptions options = null) Parameters cubeName string localWorkbookPath string options EssJobImportExcelOptions Returns IEssCube CreateCubeFromWorkbookAsync(string, EssJobImportExcelOptions, CancellationToken) Asynchronously creates a new cube (and application) from a server file. Task<IEssCube> CreateCubeFromWorkbookAsync(string cubeName, EssJobImportExcelOptions options = null, CancellationToken cancellationToken = default) Parameters cubeName string options EssJobImportExcelOptions cancellationToken CancellationToken Returns Task<IEssCube> CreateCubeFromWorkbookAsync(string, Stream, EssJobImportExcelOptions, CancellationToken) Asynchronously creates a new cube (and application) from a workbook stream. Task<IEssCube> CreateCubeFromWorkbookAsync(string cubeName, Stream stream, EssJobImportExcelOptions options = null, CancellationToken cancellationToken = default) Parameters cubeName string stream Stream options EssJobImportExcelOptions cancellationToken CancellationToken Returns Task<IEssCube> CreateCubeFromWorkbookAsync(string, string, EssJobImportExcelOptions, CancellationToken) Asynchronously creates a new cube (and application) from a local workbook file path. Task<IEssCube> CreateCubeFromWorkbookAsync(string cubeName, string localWorkbookPath, EssJobImportExcelOptions options = null, CancellationToken cancellationToken = default) Parameters cubeName string localWorkbookPath string options EssJobImportExcelOptions cancellationToken CancellationToken Returns Task<IEssCube> Delete() Deletes The Application. void Delete() DeleteAsync(CancellationToken) Delete the application. Task DeleteAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task DownloadLatestLogFile() Downloads the latest log file for this application. Stream DownloadLatestLogFile() Returns Stream A Stream containing the log file content. DownloadLatestLogFileAsync(CancellationToken) Asynchronously downloads the latest log file for this application. Task<Stream> DownloadLatestLogFileAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<Stream> A Stream containing the log file content. DownloadLatestLogFileString() Downloads the latest log file for this application. string DownloadLatestLogFileString() Returns string A string containing the log file content. DownloadLatestLogFileStringAsync(CancellationToken) Asynchronously downloads the latest log file for this application. Task<string> DownloadLatestLogFileStringAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> A string containing the log file content. ExportCubeToWorkbook(string, EssJobExportExcelOptions) Exports a cube to an excel workbook Stream ExportCubeToWorkbook(string cubeName, EssJobExportExcelOptions options = null) Parameters cubeName string options EssJobExportExcelOptions Returns Stream ExportCubeToWorkbookAsync(string, EssJobExportExcelOptions, CancellationToken) Asynchronously Exports a cube to an excel workbook Task<Stream> ExportCubeToWorkbookAsync(string cubeName, EssJobExportExcelOptions options = null, CancellationToken cancellationToken = default) Parameters cubeName string options EssJobExportExcelOptions cancellationToken CancellationToken Returns Task<Stream> GetConfigurations() Returns a list of configurations for this application List<IEssApplicationConfiguration> GetConfigurations() Returns List<IEssApplicationConfiguration> GetConfigurationsAsync(CancellationToken) returns a list of configurations for this application Task<List<IEssApplicationConfiguration>> GetConfigurationsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssApplicationConfiguration>> GetConnection(string) IEssApplicationDatasourceConnection GetConnection(string appConnectionName) Parameters appConnectionName string Returns IEssApplicationDatasourceConnection GetConnectionAsync(string, CancellationToken) Task<IEssApplicationDatasourceConnection> GetConnectionAsync(string appConnectionName, CancellationToken cancellationToken = default) Parameters appConnectionName string cancellationToken CancellationToken Returns Task<IEssApplicationDatasourceConnection> GetConnections() List<IEssApplicationDatasourceConnection> GetConnections() Returns List<IEssApplicationDatasourceConnection> GetConnectionsAsync(CancellationToken) Task<List<IEssApplicationDatasourceConnection>> GetConnectionsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssApplicationDatasourceConnection>> GetCube(string) Gets the cube with the given name. IEssCube GetCube(string cubeName) Parameters cubeName string Returns IEssCube GetCubeAsync(string, CancellationToken) Asynchronously gets the cube with the given name. Task<IEssCube> GetCubeAsync(string cubeName, CancellationToken cancellationToken = default) Parameters cubeName string cancellationToken CancellationToken Returns Task<IEssCube> GetCubes() Gets the list of cubes for this application available to the currently connected user. List<IEssCube> GetCubes() Returns List<IEssCube> GetCubesAsync(CancellationToken) Asynchronously gets the list of cubes for this application available to the currently connected user. Task<List<IEssCube>> GetCubesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssCube>> GetVariables() Gets the list of application-scoped variables available to the connected user. List<IEssApplicationVariable> GetVariables() Returns List<IEssApplicationVariable> A list of IEssServerVariable objects. GetVariablesAsync(CancellationToken) Asynchronously gets the list of application-scoped variables available to the connected user. Task<List<IEssApplicationVariable>> GetVariablesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssApplicationVariable>> A list of IEssServerVariable objects. Start() Start The Application. void Start() StartAsync(CancellationToken) Asynchronously starts the application. Task StartAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task Stop() Stop The Application. void Stop() StopAsync(CancellationToken) Asynchronously stops the application. Task StopAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssApplicationConfiguration.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssApplicationConfiguration.html",
    "title": "Interface IEssApplicationConfiguration",
    "keywords": "Interface IEssApplicationConfiguration Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssApplicationConfiguration : IEssObject Inherited Members IEssObject.Name IEssObject.Type Properties Application Returns the application that this configuration is associated with IEssApplication Application { get; } Property Value IEssApplication Key Returns the key for this configuration string Key { get; } Property Value string Value returns the value for this configuration!No, nNnn string Value { get; } Property Value string"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssApplicationDatasource.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssApplicationDatasource.html",
    "title": "Interface IEssApplicationDatasource",
    "keywords": "Interface IEssApplicationDatasource Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssApplicationDatasource : IEssDatasource, IEssObject Inherited Members IEssDatasource.Server IEssDatasource.ConnectionName IEssDatasource.DatasourceType IEssDatasource.GetConnection() IEssDatasource.GetConnectionAsync(CancellationToken) IEssDatasource.Query(IEssDatasourceQueryInfo) IEssDatasource.QueryAsync(IEssDatasourceQueryInfo, CancellationToken) IEssObject.Name IEssObject.Type Properties Application Returns the application that contains this datasource. IEssApplication Application { get; } Property Value IEssApplication"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssApplicationDatasourceConnection.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssApplicationDatasourceConnection.html",
    "title": "Interface IEssApplicationDatasourceConnection",
    "keywords": "Interface IEssApplicationDatasourceConnection Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssApplicationDatasourceConnection : IEssDatasourceConnection, IEssObject Inherited Members IEssDatasourceConnection.Server IEssDatasourceConnection.ConnectionType IEssDatasourceConnection.ConnectionSubtype IEssDatasourceConnection.Description IEssDatasourceConnection.Path IEssDatasourceConnection.Catalog IEssDatasourceConnection.Host IEssDatasourceConnection.Port IEssDatasourceConnection.User IEssDatasourceConnection.Encrypted IEssDatasourceConnection.Token IEssDatasourceConnection.Sid IEssDatasourceConnection.Service IEssDatasourceConnection.Schema IEssDatasourceConnection.DbURL IEssDatasourceConnection.DbDriver IEssDatasourceConnection.DatasourceName IEssDatasourceConnection.WalletPath IEssDatasourceConnection.RepoWallet IEssDatasourceConnection.MinPoolSize IEssDatasourceConnection.MaxPoolSize IEssDatasourceConnection.TestConnection() IEssDatasourceConnection.TestConnectionAsync(CancellationToken) IEssDatasourceConnection.DeleteConnection() IEssDatasourceConnection.DeleteConnectionAsync(CancellationToken) IEssObject.Name IEssObject.Type Properties Application Returns the parent application of the connection. IEssApplication Application { get; } Property Value IEssApplication"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssApplicationExtensions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssApplicationExtensions.html",
    "title": "Class IEssApplicationExtensions",
    "keywords": "Class IEssApplicationExtensions Namespace EssSharp Assembly EssSharp.Abstractions.dll Fluent extensions for IEssApplication. public static class IEssApplicationExtensions Inheritance object IEssApplicationExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetCubeAsync(Task<IEssApplication>, string, CancellationToken) Asynchronously gets the cube with the given name. public static Task<IEssCube> GetCubeAsync(this Task<IEssApplication> applicationTask, string cubeName, CancellationToken cancellationToken = default) Parameters applicationTask Task<IEssApplication> cubeName string cancellationToken CancellationToken Returns Task<IEssCube>"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssApplicationVariable.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssApplicationVariable.html",
    "title": "Interface IEssApplicationVariable",
    "keywords": "Interface IEssApplicationVariable Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssApplicationVariable : IEssServerVariable, IEssObject Inherited Members IEssServerVariable.Delete() IEssServerVariable.DeleteAsync(CancellationToken) IEssServerVariable.Scope IEssServerVariable.Value IEssObject.Name IEssObject.Type Properties Application Returns the application of this variable. IEssApplication Application { get; } Property Value IEssApplication"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssCalcScript.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssCalcScript.html",
    "title": "Interface IEssCalcScript",
    "keywords": "Interface IEssCalcScript Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssCalcScript : IEssScript, IEssObject Inherited Members IEssScript.Content IEssScript.Cube IEssScript.ModifiedTime IEssScript.Size IEssScript.ScriptType IEssScript.Delete() IEssScript.DeleteAsync(CancellationToken) IEssScript.Execute() IEssScript.ExecuteAsync(CancellationToken) IEssScript.GetContent() IEssScript.GetContentAsync(CancellationToken) IEssScript.Save<T>() IEssScript.SaveAsync<T>(CancellationToken) IEssObject.Name IEssObject.Type"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssCube.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssCube.html",
    "title": "Interface IEssCube",
    "keywords": "Interface IEssCube Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssCube : IEssObject Inherited Members IEssObject.Name IEssObject.Type Properties Application Returns the parent application of the cube. IEssApplication Application { get; } Property Value IEssApplication CubeType Returns the type of the cube. EssCubeType CubeType { get; } Property Value EssCubeType Methods ClearDataFromCube(EssJobClearDataOptions) Clears data from a cube void ClearDataFromCube(EssJobClearDataOptions options = null) Parameters options EssJobClearDataOptions ClearDataFromCubeAsync(EssJobClearDataOptions, CancellationToken) Clears data from a cube Task ClearDataFromCubeAsync(EssJobClearDataOptions options = null, CancellationToken cancellationToken = default) Parameters options EssJobClearDataOptions cancellationToken CancellationToken Returns Task CreateCubeVariable(string, string) Create a cube variable IEssCubeVariable CreateCubeVariable(string name, string value) Parameters name string value string Returns IEssCubeVariable CreateCubeVariableAsync(string, string, CancellationToken) Create a cube variable Task<IEssCubeVariable> CreateCubeVariableAsync(string name, string value, CancellationToken cancellationToken = default) Parameters name string value string cancellationToken CancellationToken Returns Task<IEssCubeVariable> CreateLockObject(EssLockOptions) Synchronously lock an object on the server. IEssLockObject CreateLockObject(EssLockOptions lockOptions) Parameters lockOptions EssLockOptions Returns IEssLockObject CreateLockObjectAsync(EssLockOptions, CancellationToken) Asynchronously lock an object on the server. Task<IEssLockObject> CreateLockObjectAsync(EssLockOptions lockOptions, CancellationToken cancellationToken = default) Parameters lockOptions EssLockOptions cancellationToken CancellationToken Returns Task<IEssLockObject> CreateScriptAsync<T>(string, string, CancellationToken) Asynchronously creates a script with the given name (and type T) on the cube. Task<T> CreateScriptAsync<T>(string name, string content = null, CancellationToken cancellationToken = default) where T : class, IEssScript Parameters name string The name of the script. content string (optional) The content of the new script. cancellationToken CancellationToken Returns Task<T> Type Parameters T Remarks Creates an IEssScript of the specific type T. CreateScript<T>(string, string) Creates a script with the given name (and type T) on the cube. T CreateScript<T>(string name, string content = null) where T : class, IEssScript Parameters name string The name of the script. content string (optional) The content of the new script. Returns T Type Parameters T Remarks Creates an IEssScript of the specific given type T. ExecuteMDXQuery(string, EssQueryPreferences) EssQueryReport ExecuteMDXQuery(string query, EssQueryPreferences preferences = null) Parameters query string preferences EssQueryPreferences Returns EssQueryReport ExecuteMDXQueryAsync(string, EssQueryPreferences, CancellationToken) Task<EssQueryReport> ExecuteMDXQueryAsync(string query, EssQueryPreferences preferences = null, CancellationToken cancellationToken = default) Parameters query string preferences EssQueryPreferences cancellationToken CancellationToken Returns Task<EssQueryReport> ExecuteScript(EssJobScriptOptions) Executes a script (Calc or MDX) on a cube void ExecuteScript(EssJobScriptOptions options) Parameters options EssJobScriptOptions ExecuteScriptAsync(EssJobScriptOptions, CancellationToken) Executes a script (Calc or MDX) on a cube Task ExecuteScriptAsync(EssJobScriptOptions options, CancellationToken cancellationToken = default) Parameters options EssJobScriptOptions cancellationToken CancellationToken Returns Task ExportCubeToWorkbook(EssJobExportExcelOptions) Exports a cube to an excel workbook Stream ExportCubeToWorkbook(EssJobExportExcelOptions options = null) Parameters options EssJobExportExcelOptions Returns Stream ExportCubeToWorkbookAsync(EssJobExportExcelOptions, CancellationToken) Exports a cube to an excel workbook Task<Stream> ExportCubeToWorkbookAsync(EssJobExportExcelOptions options = null, CancellationToken cancellationToken = default) Parameters options EssJobExportExcelOptions cancellationToken CancellationToken Returns Task<Stream> GetActiveAlias() Returns the active alias of the cube. string GetActiveAlias() Returns string GetActiveAliasAsync(CancellationToken) Returns the active alias of the cube. Task<string> GetActiveAliasAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> GetAliases() Returns a list of aliases on a cube. List<string> GetAliases() Returns List<string> GetAliasesAsync(CancellationToken) Returns a list of aliases on a cube. Task<List<string>> GetAliasesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<string>> GetDefaultGrid(bool) Returns the default grid of a cube IEssGrid GetDefaultGrid(bool reset = false) Parameters reset bool Returns IEssGrid GetDefaultGridAsync(bool, CancellationToken) Returns the default grid of a cube Task<IEssGrid> GetDefaultGridAsync(bool reset = false, CancellationToken cancellationToken = default) Parameters reset bool cancellationToken CancellationToken Returns Task<IEssGrid> GetDimensions() Gets the list of dimensions. List<IEssDimension> GetDimensions() Returns List<IEssDimension> GetDimensionsAsync(CancellationToken) Gets the list of dimensions. Task<List<IEssDimension>> GetDimensionsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssDimension>> GetDrillthroughReport(string, bool) Gets the drillthrough report with the given name. IEssDrillthroughReport GetDrillthroughReport(string reportName, bool getDetails = false) Parameters reportName string The name of the report getDetails bool (optional) Whether to get the full report specification (or only summary details). Returns IEssDrillthroughReport GetDrillthroughReportAsync(string, bool, CancellationToken) Asynchronously gets the drillthrough report with the given name. Task<IEssDrillthroughReport> GetDrillthroughReportAsync(string reportName, bool getDetails = false, CancellationToken cancellationToken = default) Parameters reportName string The name of the report. getDetails bool (optional) Whether to get the full report specification (or only summary details). cancellationToken CancellationToken Returns Task<IEssDrillthroughReport> GetDrillthroughReports(bool) Gets the list of drillthrough reports for this cube. List<IEssDrillthroughReport> GetDrillthroughReports(bool getDetails = false) Parameters getDetails bool (optional) Whether to get the full report specification (or only summary details). Returns List<IEssDrillthroughReport> GetDrillthroughReportsAsync(bool, CancellationToken) Asynchronously gets the list of drillthrough reports for this cube. Task<List<IEssDrillthroughReport>> GetDrillthroughReportsAsync(bool getDetails = false, CancellationToken cancellationToken = default) Parameters getDetails bool (optional) Whether to get the full report specification (or only summary details). cancellationToken CancellationToken Returns Task<List<IEssDrillthroughReport>> GetFile(string) IEssFile GetFile(string fileName) Parameters fileName string Returns IEssFile GetFileAsync(string, CancellationToken) Task<IEssFile> GetFileAsync(string fileName, CancellationToken cancellationToken = default) Parameters fileName string cancellationToken CancellationToken Returns Task<IEssFile> GetFiles() List<IEssFile> GetFiles() Returns List<IEssFile> GetFilesAsync(CancellationToken) Task<List<IEssFile>> GetFilesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssFile>> GetFolder() IEssFolder GetFolder() Returns IEssFolder GetFolderAsync(CancellationToken) Task<IEssFolder> GetFolderAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssFolder> GetLockedBlocks() List<IEssLockBlock> GetLockedBlocks() Returns List<IEssLockBlock> GetLockedBlocksAsync(CancellationToken) Task<List<IEssLockBlock>> GetLockedBlocksAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssLockBlock>> GetLockedObject(string) Gets the locked object with the given name. IEssLockObject GetLockedObject(string name) Parameters name string Returns IEssLockObject GetLockedObjectAsync(string, CancellationToken) Asynchronously gets the locked object with the given name. Task<IEssLockObject> GetLockedObjectAsync(string name, CancellationToken cancellationToken = default) Parameters name string cancellationToken CancellationToken Returns Task<IEssLockObject> GetLockedObjects() Gets the list of locked objects. List<IEssLockObject> GetLockedObjects() Returns List<IEssLockObject> GetLockedObjectsAsync(CancellationToken) Asynchronously gets the list of locked objects. Task<List<IEssLockObject>> GetLockedObjectsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssLockObject>> GetScriptAsync<T>(string, bool, CancellationToken) Asynchronously gets the script with the given name (and type T) from the cube. Task<T> GetScriptAsync<T>(string scriptName, bool getContent = false, CancellationToken cancellationToken = default) where T : class, IEssScript Parameters scriptName string The name of the script. getContent bool Whether to get the full script, including content, or only summary details. cancellationToken CancellationToken Returns Task<T> Type Parameters T Remarks Returns an IEssScript of the specific given type T. GetScript<T>(string, bool) Gets the script with the given name (and type T) from the cube. T GetScript<T>(string scriptName, bool getContent = false) where T : class, IEssScript Parameters scriptName string The name of the script. getContent bool Whether to get the full script, including content, or only summary details. Returns T Type Parameters T Remarks Returns an IEssScript of the specific given type T. GetScriptsAsync<T>(bool, CancellationToken) Asynchronously gets the list of scripts with the given type T from the cube. Task<List<T>> GetScriptsAsync<T>(bool getContent = false, CancellationToken cancellationToken = default) where T : class, IEssScript Parameters getContent bool Whether to get the full scripts, including content, or only summary details. cancellationToken CancellationToken Returns Task<List<T>> Type Parameters T Remarks Returns a list of IEssScript objects of the specific given type T. GetScripts<T>(bool) Gets the list of scripts with the given type T from the cube. List<T> GetScripts<T>(bool getContent = false) where T : class, IEssScript Parameters getContent bool Whether to get the full scripts, including content, or only summary details. Returns List<T> Type Parameters T Remarks Returns a list of IEssScript objects of the specific given type T. GetVariables() Gets the list of cube-scoped variables available to the connected user. List<IEssCubeVariable> GetVariables() Returns List<IEssCubeVariable> GetVariablesAsync(CancellationToken) Asynchronously gets the list of cube-scoped variables available to the connected user. Task<List<IEssCubeVariable>> GetVariablesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssCubeVariable>> LoadDataToCube(EssJobLoadDataOptions) Loads data to a cube from a file on the Server void LoadDataToCube(EssJobLoadDataOptions options) Parameters options EssJobLoadDataOptions LoadDataToCubeAsync(EssJobLoadDataOptions, CancellationToken) Loads data to a cube from a file on the Server Task LoadDataToCubeAsync(EssJobLoadDataOptions options, CancellationToken cancellationToken = default) Parameters options EssJobLoadDataOptions cancellationToken CancellationToken Returns Task UnlockAsync<T>(List<T>, CancellationToken) Task UnlockAsync<T>(List<T> lockedList, CancellationToken cancellationToken = default) where T : class, IEssLock Parameters lockedList List<T> cancellationToken CancellationToken Returns Task Type Parameters T Unlock<T>(List<T>) void Unlock<T>(List<T> lockedList) where T : class, IEssLock Parameters lockedList List<T> Type Parameters T isScenariosEnabled() Returns true if this cube has scenarios are enabled, else false bool isScenariosEnabled() Returns bool isScenariosEnabledAsync() Returns true if this cube has scenarios are enabled, else false Task<bool> isScenariosEnabledAsync() Returns Task<bool>"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssCubeVariable.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssCubeVariable.html",
    "title": "Interface IEssCubeVariable",
    "keywords": "Interface IEssCubeVariable Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssCubeVariable : IEssApplicationVariable, IEssServerVariable, IEssObject Inherited Members IEssApplicationVariable.Application IEssServerVariable.Delete() IEssServerVariable.DeleteAsync(CancellationToken) IEssServerVariable.Scope IEssServerVariable.Value IEssObject.Name IEssObject.Type Properties Cube Returns the cube of this variable. IEssCube Cube { get; } Property Value IEssCube"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssDatasource.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssDatasource.html",
    "title": "Interface IEssDatasource",
    "keywords": "Interface IEssDatasource Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssDatasource : IEssObject Inherited Members IEssObject.Name IEssObject.Type Properties ConnectionName Returns the name of the Connection string ConnectionName { get; } Property Value string DatasourceType Returns the Datasource type EssDatasourceType DatasourceType { get; } Property Value EssDatasourceType Server Returns the server that contains this job. IEssServer Server { get; } Property Value IEssServer Methods GetConnection() IEssDatasourceConnection GetConnection() Returns IEssDatasourceConnection GetConnectionAsync(CancellationToken) Task<IEssDatasourceConnection> GetConnectionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssDatasourceConnection> Query(IEssDatasourceQueryInfo) string Query(IEssDatasourceQueryInfo queryInfo) Parameters queryInfo IEssDatasourceQueryInfo Returns string QueryAsync(IEssDatasourceQueryInfo, CancellationToken) Task<string> QueryAsync(IEssDatasourceQueryInfo queryInfo, CancellationToken cancellationToken = default) Parameters queryInfo IEssDatasourceQueryInfo cancellationToken CancellationToken Returns Task<string>"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssDatasourceConnection.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssDatasourceConnection.html",
    "title": "Interface IEssDatasourceConnection",
    "keywords": "Interface IEssDatasourceConnection Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssDatasourceConnection : IEssObject Inherited Members IEssObject.Name IEssObject.Type Properties Catalog bool Catalog { get; } Property Value bool ConnectionSubtype Returns the Connection Subtype EssDatasourceConnectionSubtype ConnectionSubtype { get; } Property Value EssDatasourceConnectionSubtype ConnectionType Returns the Connection Type EssDatasourceConnectionType ConnectionType { get; } Property Value EssDatasourceConnectionType DatasourceName string DatasourceName { get; } Property Value string DbDriver string DbDriver { get; } Property Value string DbURL string DbURL { get; } Property Value string Description string Description { get; } Property Value string Encrypted bool Encrypted { get; } Property Value bool Host string Host { get; } Property Value string MaxPoolSize int MaxPoolSize { get; } Property Value int MinPoolSize int MinPoolSize { get; } Property Value int Path string Path { get; } Property Value string Port int Port { get; } Property Value int RepoWallet bool RepoWallet { get; } Property Value bool Schema string Schema { get; } Property Value string Server Returns the server that contains this job. IEssServer Server { get; } Property Value IEssServer Service string Service { get; } Property Value string Sid string Sid { get; } Property Value string Token string Token { get; } Property Value string User string User { get; } Property Value string WalletPath string WalletPath { get; } Property Value string Methods DeleteConnection() Delete a connection void DeleteConnection() DeleteConnectionAsync(CancellationToken) Delete a connection Task DeleteConnectionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task TestConnection() Tests the connection void TestConnection() TestConnectionAsync(CancellationToken) Tests the connection Task TestConnectionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssDatasourceExtensions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssDatasourceExtensions.html",
    "title": "Class IEssDatasourceExtensions",
    "keywords": "Class IEssDatasourceExtensions Namespace EssSharp Assembly EssSharp.Abstractions.dll Fluent extensions for IEssDatasource. public static class IEssDatasourceExtensions Inheritance object IEssDatasourceExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods QueryAsync(Task<IEssDatasource>, IEssDatasourceQueryInfo, CancellationToken) Asynchronously executes the datasource query and returns the records. public static Task<string> QueryAsync(this Task<IEssDatasource> datasourceTask, IEssDatasourceQueryInfo queryInfo, CancellationToken cancellationToken = default) Parameters datasourceTask Task<IEssDatasource> queryInfo IEssDatasourceQueryInfo cancellationToken CancellationToken Returns Task<string>"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssDatasourceQueryInfo.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssDatasourceQueryInfo.html",
    "title": "Interface IEssDatasourceQueryInfo",
    "keywords": "Interface IEssDatasourceQueryInfo Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssDatasourceQueryInfo Properties Delimiter Returns or sets the delimiter for the query results. string Delimiter { get; set; } Property Value string Parameters Returns or sets the query parameter dictionary for the query. Dictionary<string, List<string>> Parameters { get; set; } Property Value Dictionary<string, List<string>> Query Returns or sets the query. string Query { get; set; } Property Value string"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssDimension.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssDimension.html",
    "title": "Interface IEssDimension",
    "keywords": "Interface IEssDimension Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssDimension Properties Members int Members { get; } Property Value int Name Gets the Name as a string string Name { get; } Property Value string StoredMembers int StoredMembers { get; } Property Value int Type string Type { get; } Property Value string"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssDrillthroughOptions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssDrillthroughOptions.html",
    "title": "Interface IEssDrillthroughOptions",
    "keywords": "Interface IEssDrillthroughOptions Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssDrillthroughOptions Properties AliasTable Returns or sets the alias table that was used to produce the associated drillthrough ranges. string AliasTable { get; set; } Property Value string IncludeColumnHeaders Returns or sets whether to include column headers in the report. bool IncludeColumnHeaders { get; set; } Property Value bool IncludeMetadataOnly Returns or sets whether to include only column types and, optionally, column headers in the report. bool IncludeMetadataOnly { get; set; } Property Value bool PrefixStringValuesForExcel Returns or sets the whether to prefix string values with an apostrophe (') for use in Excel. bool PrefixStringValuesForExcel { get; set; } Property Value bool ReturnTypedValues Returns or sets the whether report values should be converted to the column types indicated by the server. bool ReturnTypedValues { get; set; } Property Value bool"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssDrillthroughRange.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssDrillthroughRange.html",
    "title": "Interface IEssDrillthroughRange",
    "keywords": "Interface IEssDrillthroughRange Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssDrillthroughRange Properties DimensionMemberSets Returns or sets the list of values for each member in the contiguous drill-through range. Dictionary<string, List<string>> DimensionMemberSets { get; set; } Property Value Dictionary<string, List<string>>"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssDrillthroughReport.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssDrillthroughReport.html",
    "title": "Interface IEssDrillthroughReport",
    "keywords": "Interface IEssDrillthroughReport Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssDrillthroughReport : IEssObject Inherited Members IEssObject.Name IEssObject.Type Properties Cube Returns the cube of this report. IEssCube Cube { get; } Property Value IEssCube Methods Execute(IEssDrillthroughRange, IEssDrillthroughOptions) Executes the drillthrough report and returns records. (object[,] report, string[] columnTypes) Execute(IEssDrillthroughRange context, IEssDrillthroughOptions options) Parameters context IEssDrillthroughRange options IEssDrillthroughOptions Returns (object[,] report, string[] columnTypes) Execute(IEnumerable<IEssDrillthroughRange>, IEssDrillthroughOptions) Executes the drillthrough report and returns records. (object[,] report, string[] columnTypes) Execute(IEnumerable<IEssDrillthroughRange> context, IEssDrillthroughOptions options) Parameters context IEnumerable<IEssDrillthroughRange> options IEssDrillthroughOptions Returns (object[,] report, string[] columnTypes) ExecuteAsync(IEssDrillthroughRange, IEssDrillthroughOptions, CancellationToken) Asynchronously executes the drillthrough report and returns records. Task<(object[,] report, string[] columnTypes)> ExecuteAsync(IEssDrillthroughRange context, IEssDrillthroughOptions options = null, CancellationToken cancellationToken = default) Parameters context IEssDrillthroughRange options IEssDrillthroughOptions cancellationToken CancellationToken Returns Task<(object[,] report, string[] columnTypes)> ExecuteAsync(IEnumerable<IEssDrillthroughRange>, IEssDrillthroughOptions, CancellationToken) Asynchronously executes the drillthrough report and returns records. Task<(object[,] report, string[] columnTypes)> ExecuteAsync(IEnumerable<IEssDrillthroughRange> context, IEssDrillthroughOptions options = null, CancellationToken cancellationToken = default) Parameters context IEnumerable<IEssDrillthroughRange> options IEssDrillthroughOptions cancellationToken CancellationToken Returns Task<(object[,] report, string[] columnTypes)> GetDetails() Gets the full report specification. void GetDetails() GetDetailsAsync(CancellationToken) Asynchronously gets the full report specification. Task GetDetailsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssDrillthroughReportExtensions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssDrillthroughReportExtensions.html",
    "title": "Class IEssDrillthroughReportExtensions",
    "keywords": "Class IEssDrillthroughReportExtensions Namespace EssSharp Assembly EssSharp.Abstractions.dll Fluent extensions for IEssDrillthroughReport. public static class IEssDrillthroughReportExtensions Inheritance object IEssDrillthroughReportExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ExecuteAsync(Task<IEssDrillthroughReport>, IEssDrillthroughRange, IEssDrillthroughOptions, CancellationToken) Asynchronously executes the drill-through report and returns records. public static Task<(object[,] report, string[] columnTypes)> ExecuteAsync(this Task<IEssDrillthroughReport> drillthroughReportTask, IEssDrillthroughRange context, IEssDrillthroughOptions options = null, CancellationToken cancellationToken = default) Parameters drillthroughReportTask Task<IEssDrillthroughReport> context IEssDrillthroughRange options IEssDrillthroughOptions cancellationToken CancellationToken Returns Task<(object[,] report, string[] columnTypes)> ExecuteAsync(Task<IEssDrillthroughReport>, IEnumerable<IEssDrillthroughRange>, IEssDrillthroughOptions, CancellationToken) Asynchronously executes the drill-through report and returns records. public static Task<(object[,] report, string[] columnTypes)> ExecuteAsync(this Task<IEssDrillthroughReport> drillthroughReportTask, IEnumerable<IEssDrillthroughRange> context, IEssDrillthroughOptions options = null, CancellationToken cancellationToken = default) Parameters drillthroughReportTask Task<IEssDrillthroughReport> context IEnumerable<IEssDrillthroughRange> options IEssDrillthroughOptions cancellationToken CancellationToken Returns Task<(object[,] report, string[] columnTypes)>"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssFile.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssFile.html",
    "title": "Interface IEssFile",
    "keywords": "Interface IEssFile Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssFile : IEssObject Inherited Members IEssObject.Name IEssObject.Type Properties FullPath Returns the full path of the file. string FullPath { get; } Property Value string ParentPath Returns the full path of the parent folder. string ParentPath { get; } Property Value string Server Returns the server that contains this file. IEssServer Server { get; } Property Value IEssServer Methods Copy(string, bool) Copy a file from source to destination void Copy(string newFilePath, bool overwrite = false) Parameters newFilePath string overwrite bool CopyAsync(string, bool, CancellationToken) Copy a file from source to destination Task CopyAsync(string newFilePath, bool overwrite = false, CancellationToken cancellationToken = default) Parameters newFilePath string overwrite bool cancellationToken CancellationToken Returns Task Delete() Delete a specific file void Delete() DeleteAsync(CancellationToken) Delete a specific file Task DeleteAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task Download() Downloads a file to a stream. Stream Download() Returns Stream DownloadAsync(CancellationToken) Asynchronously downloads a file to a stream. Task<Stream> DownloadAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<Stream> Extract(bool) Extract a zip file on same location void Extract(bool overwrite = false) Parameters overwrite bool ExtractAsync(bool, CancellationToken) Extract a zip file on same location Task ExtractAsync(bool overwrite = false, CancellationToken cancellationToken = default) Parameters overwrite bool cancellationToken CancellationToken Returns Task Move(string, bool) Moves a file from source to destination void Move(string newFilePath, bool overwrite = false) Parameters newFilePath string overwrite bool MoveAsync(string, bool, CancellationToken) Task MoveAsync(string newFilePath, bool overwrite = false, CancellationToken cancellationToken = default) Parameters newFilePath string overwrite bool cancellationToken CancellationToken Returns Task Rename(string, bool) Renames a file or folder void Rename(string newFileName, bool overwrite = false) Parameters newFileName string overwrite bool RenameAsync(string, bool, CancellationToken) Renames a file or folder Task RenameAsync(string newFilePath, bool overwrite = false, CancellationToken cancellationToken = default) Parameters newFilePath string overwrite bool cancellationToken CancellationToken Returns Task"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssFileExtensions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssFileExtensions.html",
    "title": "Class IEssFileExtensions",
    "keywords": "Class IEssFileExtensions Namespace EssSharp Assembly EssSharp.Abstractions.dll Fluent extensions for IEssFile. public static class IEssFileExtensions Inheritance object IEssFileExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DownloadAsync(Task<IEssFile>, CancellationToken) Asynchronously downloads a file to a stream. public static Task<Stream> DownloadAsync(this Task<IEssFile> fileTask, CancellationToken cancellationToken = default) Parameters fileTask Task<IEssFile> cancellationToken CancellationToken Returns Task<Stream>"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssFolder.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssFolder.html",
    "title": "Interface IEssFolder",
    "keywords": "Interface IEssFolder Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssFolder : IEssFile, IEssObject Inherited Members IEssFile.Server IEssFile.FullPath IEssFile.ParentPath IEssFile.Copy(string, bool) IEssFile.CopyAsync(string, bool, CancellationToken) IEssFile.Download() IEssFile.DownloadAsync(CancellationToken) IEssFile.Delete() IEssFile.DeleteAsync(CancellationToken) IEssFile.Move(string, bool) IEssFile.MoveAsync(string, bool, CancellationToken) IEssFile.Rename(string, bool) IEssFile.RenameAsync(string, bool, CancellationToken) IEssFile.Extract(bool) IEssFile.ExtractAsync(bool, CancellationToken) IEssObject.Name IEssObject.Type Methods CreateSubfolder(string) Creates a subfolder with the given subfolderName if it does not already exist. If the subfolder already exists, it is returned. IEssFolder CreateSubfolder(string subfolderName) Parameters subfolderName string Returns IEssFolder CreateSubfolderAsync(string, CancellationToken) Asynchronously creates a subfolder with the given subfolderName if it does not already exist. If the subfolder already exists, it is returned. Task<IEssFolder> CreateSubfolderAsync(string subfolderName, CancellationToken cancellationToken = default) Parameters subfolderName string cancellationToken CancellationToken Returns Task<IEssFolder> GetFile(string) Gets the immediate file of this folder with the given filename. IEssFile GetFile(string filename) Parameters filename string Returns IEssFile GetFileAsync(string, CancellationToken) Asynchronously gets the immediate file of this folder with the given filename. Task<IEssFile> GetFileAsync(string filename, CancellationToken cancellationToken = default) Parameters filename string cancellationToken CancellationToken Returns Task<IEssFile> GetFiles(string) Gets a list of the immediate files of this folder, optionally matching a given nameFilter. List<IEssFile> GetFiles(string nameFilter = null) Parameters nameFilter string Returns List<IEssFile> GetFilesAsync(string, CancellationToken) Asynchronously gets a list of the immediate files of this folder, optionally matching a given nameFilter. Task<List<IEssFile>> GetFilesAsync(string nameFilter = null, CancellationToken cancellationToken = default) Parameters nameFilter string cancellationToken CancellationToken Returns Task<List<IEssFile>> GetFolder(string) Gets the immediate subfolder of this folder with the given folderName. IEssFolder GetFolder(string folderName) Parameters folderName string Returns IEssFolder GetFolderAsync(string, CancellationToken) Asynchronously gets the immediate subfolder of this folder with the given folderName. Task<IEssFolder> GetFolderAsync(string folderName, CancellationToken cancellationToken = default) Parameters folderName string cancellationToken CancellationToken Returns Task<IEssFolder> GetFolders(string) Gets a list of the immediate subfolders of this folder, optionally matching a given nameFilter. List<IEssFolder> GetFolders(string nameFilter = null) Parameters nameFilter string Returns List<IEssFolder> GetFoldersAsync(string, CancellationToken) Asynchronously gets a list of the immediate subfolders of this folder, optionally matching a given nameFilter. Task<List<IEssFolder>> GetFoldersAsync(string nameFilter = null, CancellationToken cancellationToken = default) Parameters nameFilter string cancellationToken CancellationToken Returns Task<List<IEssFolder>> UploadFile(FileStream, string, bool) Uploads a local file stream to the server with the given filename, optionally overwriting an existing file on the server if it already exists. IEssFile UploadFile(FileStream stream, string filename = null, bool overwrite = false) Parameters stream FileStream filename string overwrite bool Returns IEssFile UploadFile(Stream, string, bool) Upload file to Server using Stream IEssFile UploadFile(Stream stream, string filename = null, bool overwrite = false) Parameters stream Stream filename string overwrite bool Returns IEssFile UploadFile(string, string, bool) Uploads a local file with the given path to the server with the given filename, optionally overwriting an existing file on the server if it already exists. IEssFile UploadFile(string path, string filename = null, bool overwrite = false) Parameters path string filename string overwrite bool Returns IEssFile UploadFileAsync(FileStream, string, bool, CancellationToken) Asynchronously uploads a local file stream to the server with the given filename, optionally overwriting an existing file on the server if it already exists. Task<IEssFile> UploadFileAsync(FileStream stream, string filename = null, bool overwrite = false, CancellationToken cancellationToken = default) Parameters stream FileStream filename string overwrite bool cancellationToken CancellationToken Returns Task<IEssFile> UploadFileAsync(Stream, string, bool, CancellationToken) Asynchronously uploads an arbitrary stream to the server with the given filename, optionally overwriting an existing file on the server if it already exists. Task<IEssFile> UploadFileAsync(Stream stream, string filename = null, bool overwrite = false, CancellationToken cancellationToken = default) Parameters stream Stream filename string overwrite bool cancellationToken CancellationToken Returns Task<IEssFile> UploadFileAsync(string, string, bool, CancellationToken) Asynchronously uploads a local file with the given path to the server with the given filename, optionally overwriting an existing file on the server if it already exists. Task<IEssFile> UploadFileAsync(string path, string filename = null, bool overwrite = false, CancellationToken cancellationToken = default) Parameters path string filename string overwrite bool cancellationToken CancellationToken Returns Task<IEssFile>"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssFolderExtensions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssFolderExtensions.html",
    "title": "Class IEssFolderExtensions",
    "keywords": "Class IEssFolderExtensions Namespace EssSharp Assembly EssSharp.Abstractions.dll Fluent extensions for IEssFolder. public static class IEssFolderExtensions Inheritance object IEssFolderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateSubfolderAsync(Task<IEssFolder>, string, CancellationToken) Asynchronously creates a subfolder with the given subfolderName if it does not already exist. If the subfolder already exists, it is returned. public static Task<IEssFolder> CreateSubfolderAsync(this Task<IEssFolder> folderTask, string subfolderName, CancellationToken cancellationToken = default) Parameters folderTask Task<IEssFolder> subfolderName string cancellationToken CancellationToken Returns Task<IEssFolder> UploadFileAsync(Task<IEssFolder>, FileStream, string, bool, CancellationToken) Asynchronously uploads a local file stream to the server with the given filename, optionally overwriting an existing file on the server if it already exists. public static Task<IEssFile> UploadFileAsync(this Task<IEssFolder> folderTask, FileStream stream, string filename = null, bool overwrite = false, CancellationToken cancellationToken = default) Parameters folderTask Task<IEssFolder> stream FileStream filename string overwrite bool cancellationToken CancellationToken Returns Task<IEssFile> UploadFileAsync(Task<IEssFolder>, Stream, string, bool, CancellationToken) Asynchronously uploads an arbitrary stream to the server with the given filename, optionally overwriting an existing file on the server if it already exists. public static Task<IEssFile> UploadFileAsync(this Task<IEssFolder> folderTask, Stream stream, string filename = null, bool overwrite = false, CancellationToken cancellationToken = default) Parameters folderTask Task<IEssFolder> stream Stream filename string overwrite bool cancellationToken CancellationToken Returns Task<IEssFile> UploadFileAsync(Task<IEssFolder>, string, string, bool, CancellationToken) Asynchronously uploads a local file with the given path to the server with the given filename, optionally overwriting an existing file on the server if it already exists. public static Task<IEssFile> UploadFileAsync(this Task<IEssFolder> folderTask, string path, string filename = null, bool overwrite = false, CancellationToken cancellationToken = default) Parameters folderTask Task<IEssFolder> path string filename string overwrite bool cancellationToken CancellationToken Returns Task<IEssFile>"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssGrid.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssGrid.html",
    "title": "Interface IEssGrid",
    "keywords": "Interface IEssGrid Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssGrid : IEssObject Inherited Members IEssObject.Name IEssObject.Type Properties Alias Gets the Name as a string string Alias { get; } Property Value string Cube IEssCube Cube { get; } Property Value IEssCube Dimensions List<EssGridDimension> Dimensions { get; } Property Value List<EssGridDimension> Slice EssGridSlice Slice { get; } Property Value EssGridSlice"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssGroup.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssGroup.html",
    "title": "Interface IEssGroup",
    "keywords": "Interface IEssGroup Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssGroup : IEssObject Inherited Members IEssObject.Name IEssObject.Type Properties Description Returns the description of the group string Description { get; } Property Value string GroupNames Returns the groups in this Group List<string> GroupNames { get; } Property Value List<string> Role Returns the role of this group string Role { get; } Property Value string Server Returns the Server associated with the group IEssServer Server { get; } Property Value IEssServer Methods GetGroups() Get child groups of a parent Group List<IEssGroup> GetGroups() Returns List<IEssGroup> GetGroupsAsync(CancellationToken) Gets child groups of a parent group Task<List<IEssGroup>> GetGroupsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssGroup>> GetUsers() Returns a list of IEssUser objects. List<IEssUser> GetUsers() Returns List<IEssUser> GetUsersAsync(CancellationToken) Returns a list of IEssUser objects. Task<List<IEssUser>> GetUsersAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssUser>>"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssJob.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssJob.html",
    "title": "Interface IEssJob",
    "keywords": "Interface IEssJob Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssJob : IEssObject Inherited Members IEssObject.Name IEssObject.Type Properties ErrorMessage Returns the error message of this job (if available). string ErrorMessage { get; } Property Value string InfoMessage Returns the info message of this job (if available). string InfoMessage { get; } Property Value string JobID Returns the ID of this job. long JobID { get; } Property Value long JobOutputInfo Returns the output information dictionary of this job (if available). Dictionary<string, object> JobOutputInfo { get; } Property Value Dictionary<string, object> JobStatus Returns the status of this job. EssJobStatus JobStatus { get; } Property Value EssJobStatus JobType Returns the type of this job. EssJobType JobType { get; } Property Value EssJobType Server Returns the server that contains this job. IEssServer Server { get; } Property Value IEssServer StatusMessage Returns the status message of this job (if available). string StatusMessage { get; } Property Value string Methods Execute() Executes (or re-runs) this job, updating its status and returning the updated job. IEssJob Execute() Returns IEssJob ExecuteAsync(CancellationToken) Asynchronously executes (or re-runs) this job, updating its status and returning the updated job. Task<IEssJob> ExecuteAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssJob> ReRun() Re-runs an already executed job, returning the new job. IEssJob ReRun() Returns IEssJob ReRunAsync(CancellationToken) Asynchronously re-runs an already executed job, returning the new job. Task<IEssJob> ReRunAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssJob> ThrowIfFailed() Throws an Exception containing any available error message if the job failed or, otherwise, returns the job. IEssJob ThrowIfFailed() Returns IEssJob Exceptions Exception"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssJobExtensions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssJobExtensions.html",
    "title": "Class IEssJobExtensions",
    "keywords": "Class IEssJobExtensions Namespace EssSharp Assembly EssSharp.Abstractions.dll Fluent extensions for IEssJob. public static class IEssJobExtensions Inheritance object IEssJobExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ExecuteAsync(Task<IEssJob>, CancellationToken) Asynchronously executes (or re-runs) this job, updating its status and returning the updated job. public static Task<IEssJob> ExecuteAsync(this Task<IEssJob> jobTask, CancellationToken cancellationToken = default) Parameters jobTask Task<IEssJob> cancellationToken CancellationToken Returns Task<IEssJob> ReRunAsync(Task<IEssJob>, CancellationToken) Asynchronously re-runs an already executed job, returning the new job. public static Task<IEssJob> ReRunAsync(this Task<IEssJob> jobTask, CancellationToken cancellationToken = default) Parameters jobTask Task<IEssJob> cancellationToken CancellationToken Returns Task<IEssJob> ThrowIfFailed(Task<IEssJob>) Throws an Exception with any available error message if the job failed or, otherwise, returns the job. public static Task<IEssJob> ThrowIfFailed(this Task<IEssJob> jobTask) Parameters jobTask Task<IEssJob> Returns Task<IEssJob> Exceptions Exception"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssJobOptions.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssJobOptions.html",
    "title": "Interface IEssJobOptions",
    "keywords": "Interface IEssJobOptions Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssJobOptions Properties AbortOnError Returns or sets whether to abort the data load if an error is encountered for an Dataload job. bool? AbortOnError { get; set; } Property Value bool? BuildMethod Returns or sets the build method for an ExportExcel job. EssBuildMethod? BuildMethod { get; set; } Property Value EssBuildMethod? BuildOption Returns or sets the build option for an ImportExcel job. EssBuildOption? BuildOption { get; set; } Property Value EssBuildOption? Calc Returns or sets the include calc option for an ExportExcel job. bool? Calc { get; set; } Property Value bool? CatalogExcelPath Returns or sets the catalog excel path option for an ImportExcel job. string CatalogExcelPath { get; set; } Property Value string CreateFiles Returns or sets the create files option for an ImportExcel job. bool? CreateFiles { get; set; } Property Value bool? Data Returns or sets the include data option for an ExportExcel job. bool? Data { get; set; } Property Value bool? DeleteExcelOnSuccess Returns or sets the delete excel file (on success) option for an ImportExcel job. bool? DeleteExcelOnSuccess { get; set; } Property Value bool? ExecuteScripts Returns or sets the execute scripts option for an ImportExcel job. bool? ExecuteScripts { get; set; } Property Value bool? File List<string> File { get; set; } Property Value List<string> ImportExcelFilename Returns or sets the import excel file name option for an ImportExcel job. string ImportExcelFilename { get; set; } Property Value string LoadData Returns or sets the load data option for an ImportExcel job. bool? LoadData { get; set; } Property Value bool? MemberIds Returns or sets the inlcude member IDs options for an ExportExcel job. bool? MemberIds { get; set; } Property Value bool? Option Returns or sets the clear option for an Clear job. EssClearOption? Option { get; set; } Property Value EssClearOption? Overwrite Returns or sets the overwrite option for an ImportExcel job. bool? Overwrite { get; set; } Property Value bool? PartialDataExpression Returns or sets the mdx expression specifying the region to clear for an ASO cube when the PARTIAL_DATA is used for an Clear job. string PartialDataExpression { get; set; } Property Value string RecreateApp Returns or sets the recreate app option for an ImportExcel job. bool? RecreateApp { get; set; } Property Value bool? Rule Returns or sets the rule file (or files) to use for an Dataload job. List<string> Rule { get; set; } Property Value List<string> Script Returns or sets the file to execute for an Calc job or the file (or files) to load for an Dataload job. string Script { get; set; } Property Value string"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssLock.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssLock.html",
    "title": "Interface IEssLock",
    "keywords": "Interface IEssLock Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssLock : IEssObject Inherited Members IEssObject.Name IEssObject.Type Properties LockType EssLockType LockType { get; } Property Value EssLockType Methods Unlock() void Unlock() UnlockAsync(CancellationToken) Task UnlockAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssLockBlock.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssLockBlock.html",
    "title": "Interface IEssLockBlock",
    "keywords": "Interface IEssLockBlock Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssLockBlock : IEssLock, IEssObject Inherited Members IEssLock.LockType IEssLock.Unlock() IEssLock.UnlockAsync(CancellationToken) IEssObject.Name IEssObject.Type Properties Count int Count { get; } Property Value int Duration Returns the time int Duration { get; } Property Value int User Returns the user string User { get; } Property Value string"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssLockObject.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssLockObject.html",
    "title": "Interface IEssLockObject",
    "keywords": "Interface IEssLockObject Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssLockObject : IEssLock, IEssObject Inherited Members IEssLock.LockType IEssLock.Unlock() IEssLock.UnlockAsync(CancellationToken) IEssObject.Name IEssObject.Type Properties LockedFileType Returns the Lock Object Type EssLockedFileType LockedFileType { get; } Property Value EssLockedFileType Time Returns the time DateTime Time { get; } Property Value DateTime User Returns the user string User { get; } Property Value string"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssMaxlScript.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssMaxlScript.html",
    "title": "Interface IEssMaxlScript",
    "keywords": "Interface IEssMaxlScript Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssMaxlScript : IEssScript, IEssObject Inherited Members IEssScript.Content IEssScript.Cube IEssScript.ModifiedTime IEssScript.Size IEssScript.ScriptType IEssScript.Delete() IEssScript.DeleteAsync(CancellationToken) IEssScript.Execute() IEssScript.ExecuteAsync(CancellationToken) IEssScript.GetContent() IEssScript.GetContentAsync(CancellationToken) IEssScript.Save<T>() IEssScript.SaveAsync<T>(CancellationToken) IEssObject.Name IEssObject.Type"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssMdxScript.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssMdxScript.html",
    "title": "Interface IEssMdxScript",
    "keywords": "Interface IEssMdxScript Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssMdxScript : IEssScript, IEssObject Inherited Members IEssScript.Content IEssScript.Cube IEssScript.ModifiedTime IEssScript.Size IEssScript.ScriptType IEssScript.Delete() IEssScript.DeleteAsync(CancellationToken) IEssScript.Execute() IEssScript.ExecuteAsync(CancellationToken) IEssScript.GetContent() IEssScript.GetContentAsync(CancellationToken) IEssScript.Save<T>() IEssScript.SaveAsync<T>(CancellationToken) IEssObject.Name IEssObject.Type Methods GetGrid() IEssGrid GetGrid() Returns IEssGrid GetGridAsync(CancellationToken) Task<IEssGrid> GetGridAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssGrid> Query(EssQueryPreferences) EssQueryReport Query(EssQueryPreferences preferences = null) Parameters preferences EssQueryPreferences Returns EssQueryReport QueryAsync(EssQueryPreferences, CancellationToken) Task<EssQueryReport> QueryAsync(EssQueryPreferences preferences = null, CancellationToken cancellationToken = default) Parameters preferences EssQueryPreferences cancellationToken CancellationToken Returns Task<EssQueryReport>"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssObject.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssObject.html",
    "title": "Interface IEssObject",
    "keywords": "Interface IEssObject Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssObject Properties Name The name of the thing. string Name { get; } Property Value string Type The type of the thing. EssType Type { get; } Property Value EssType"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssReportScript.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssReportScript.html",
    "title": "Interface IEssReportScript",
    "keywords": "Interface IEssReportScript Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssReportScript : IEssScript, IEssObject Inherited Members IEssScript.Content IEssScript.Cube IEssScript.ModifiedTime IEssScript.Size IEssScript.ScriptType IEssScript.Delete() IEssScript.DeleteAsync(CancellationToken) IEssScript.Execute() IEssScript.ExecuteAsync(CancellationToken) IEssScript.GetContent() IEssScript.GetContentAsync(CancellationToken) IEssScript.Save<T>() IEssScript.SaveAsync<T>(CancellationToken) IEssObject.Name IEssObject.Type"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssScript.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssScript.html",
    "title": "Interface IEssScript",
    "keywords": "Interface IEssScript Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssScript : IEssObject Inherited Members IEssObject.Name IEssObject.Type Properties Content Returns the content of the script string Content { get; set; } Property Value string Cube Returns the cube that holds the script IEssCube Cube { get; } Property Value IEssCube ModifiedTime Returns not sure long ModifiedTime { get; } Property Value long ScriptType Returns the type of the script. EssScriptType ScriptType { get; } Property Value EssScriptType Size Returns the size of the script in bytes long Size { get; } Property Value long Methods Delete() Deletes a script from the cube void Delete() DeleteAsync(CancellationToken) Deletes a script from the cube Task DeleteAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task Execute() Executes a script IEssJob Execute() Returns IEssJob ExecuteAsync(CancellationToken) Executes a script Task<IEssJob> ExecuteAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssJob> GetContent() string GetContent() Returns string GetContentAsync(CancellationToken) Task<string> GetContentAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> SaveAsync<T>(CancellationToken) Task<T> SaveAsync<T>(CancellationToken cancellationToken = default) where T : class, IEssScript Parameters cancellationToken CancellationToken Returns Task<T> Type Parameters T Save<T>() T Save<T>() where T : class, IEssScript Returns T Type Parameters T"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssServer.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssServer.html",
    "title": "Interface IEssServer",
    "keywords": "Interface IEssServer Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssServer : IEssObject, IDisposable, IAsyncDisposable Inherited Members IEssObject.Name IEssObject.Type IDisposable.Dispose() IAsyncDisposable.DisposeAsync() Methods CreateApplication(string, string, EssDatabaseCreationOptions) Creates a new Application and database with the given name and options IEssApplication CreateApplication(string applicationName, string cubeName, EssDatabaseCreationOptions options = null) Parameters applicationName string cubeName string options EssDatabaseCreationOptions Returns IEssApplication CreateApplicationAsync(string, string, EssDatabaseCreationOptions, CancellationToken) Creates a new Application and database with the given name and options Task<IEssApplication> CreateApplicationAsync(string applicationName, string cubeName, EssDatabaseCreationOptions options = null, CancellationToken cancellationToken = default) Parameters applicationName string cubeName string options EssDatabaseCreationOptions cancellationToken CancellationToken Returns Task<IEssApplication> CreateApplicationFromWorkbook(string, string, EssJobImportExcelOptions) Creates a new application (and cube) from an existing server file. IEssApplication CreateApplicationFromWorkbook(string applicationName, string cubeName, EssJobImportExcelOptions options) Parameters applicationName string cubeName string options EssJobImportExcelOptions Returns IEssApplication CreateApplicationFromWorkbook(string, string, Stream, EssJobImportExcelOptions) Creates a new application (and cube) from a workbook stream. IEssApplication CreateApplicationFromWorkbook(string applicationName, string cubeName, Stream stream, EssJobImportExcelOptions options = null) Parameters applicationName string cubeName string stream Stream options EssJobImportExcelOptions Returns IEssApplication CreateApplicationFromWorkbook(string, string, string, EssJobImportExcelOptions) Creates a new application (and cube) from a local workbook file path. IEssApplication CreateApplicationFromWorkbook(string applicationName, string cubeName, string localWorkbookPath, EssJobImportExcelOptions options = null) Parameters applicationName string cubeName string localWorkbookPath string options EssJobImportExcelOptions Returns IEssApplication CreateApplicationFromWorkbookAsync(string, string, EssJobImportExcelOptions, CancellationToken) Asynchronously creates a new application (and cube) from an existing server file. Task<IEssApplication> CreateApplicationFromWorkbookAsync(string applicationName, string cubeName, EssJobImportExcelOptions options, CancellationToken cancellationToken = default) Parameters applicationName string cubeName string options EssJobImportExcelOptions cancellationToken CancellationToken Returns Task<IEssApplication> CreateApplicationFromWorkbookAsync(string, string, Stream, EssJobImportExcelOptions, CancellationToken) Asynchronously creates a new application (and cube) from a workbook stream. Task<IEssApplication> CreateApplicationFromWorkbookAsync(string applicationName, string cubeName, Stream stream, EssJobImportExcelOptions options = null, CancellationToken cancellationToken = default) Parameters applicationName string cubeName string stream Stream options EssJobImportExcelOptions cancellationToken CancellationToken Returns Task<IEssApplication> CreateApplicationFromWorkbookAsync(string, string, string, EssJobImportExcelOptions, CancellationToken) Asynchronously creates a new application (and cube) from a local workbook file path. Task<IEssApplication> CreateApplicationFromWorkbookAsync(string applicationName, string cubeName, string localWorkbookPath, EssJobImportExcelOptions options = null, CancellationToken cancellationToken = default) Parameters applicationName string cubeName string localWorkbookPath string options EssJobImportExcelOptions cancellationToken CancellationToken Returns Task<IEssApplication> CreateJob(IEssJobOptions) Creates a new (unstarted) job on the server. IEssJob CreateJob(IEssJobOptions options) Parameters options IEssJobOptions Returns IEssJob CreateVariable(string, string) Creates a new server variable IEssServerVariable CreateVariable(string name, string value) Parameters name string value string Returns IEssServerVariable CreateVariableAsync(string, string, CancellationToken) Create a new server variable Task<IEssServerVariable> CreateVariableAsync(string name, string value, CancellationToken cancellationToken = default) Parameters name string value string cancellationToken CancellationToken Returns Task<IEssServerVariable> GetAbout() Gets the about information of this server. IEssAbout GetAbout() Returns IEssAbout GetAboutAsync(CancellationToken) Asynchronously gets the about information of this server. Task<IEssAbout> GetAboutAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssAbout> GetAboutInstance() Gets the about information of this server. IEssAboutInstance GetAboutInstance() Returns IEssAboutInstance GetAboutInstanceAsync(CancellationToken) Gets the about information of this server Task<IEssAboutInstance> GetAboutInstanceAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssAboutInstance> GetApplication(string) Gets the application with the given name. IEssApplication GetApplication(string applicationName) Parameters applicationName string Returns IEssApplication GetApplicationAsync(string, CancellationToken) Asynchronously gets the application with the given name. Task<IEssApplication> GetApplicationAsync(string applicationName, CancellationToken cancellationToken = default) Parameters applicationName string cancellationToken CancellationToken Returns Task<IEssApplication> GetApplications() Gets the list of applications for this server available to the connected user. List<IEssApplication> GetApplications() Returns List<IEssApplication> GetApplications(int) Gets the list of applications for this server available to the connected user. List<IEssApplication> GetApplications(int applicationsLimit) Parameters applicationsLimit int The maximum number of applications to return. Returns List<IEssApplication> GetApplicationsAsync(int, CancellationToken) Asynchronously gets the list of applications for this server available to the connected user. Task<List<IEssApplication>> GetApplicationsAsync(int applicationsLimit, CancellationToken cancellationToken = default) Parameters applicationsLimit int The maximum number of applications to return. cancellationToken CancellationToken Returns Task<List<IEssApplication>> GetApplicationsAsync(CancellationToken) Asynchronously gets the list of applications for this server available to the connected user. Task<List<IEssApplication>> GetApplicationsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssApplication>> GetConnection(string) IEssDatasourceConnection GetConnection(string connectionName) Parameters connectionName string Returns IEssDatasourceConnection GetConnectionAsync(string, CancellationToken) Task<IEssDatasourceConnection> GetConnectionAsync(string connectionName, CancellationToken cancellationToken = default) Parameters connectionName string cancellationToken CancellationToken Returns Task<IEssDatasourceConnection> GetConnections() List<IEssDatasourceConnection> GetConnections() Returns List<IEssDatasourceConnection> GetConnectionsAsync(CancellationToken) Task<List<IEssDatasourceConnection>> GetConnectionsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssDatasourceConnection>> GetDatasource(string) Return a specified data source as an IEssDatasource object IEssDatasource GetDatasource(string datasourceName) Parameters datasourceName string Returns IEssDatasource GetDatasourceAsync(string, CancellationToken) Returns a specified data source as an IEssDatasource object Task<IEssDatasource> GetDatasourceAsync(string datasourceName, CancellationToken cancellationToken = default) Parameters datasourceName string cancellationToken CancellationToken Returns Task<IEssDatasource> GetDatasources() Returns a list of IEssDatasource objects List<IEssDatasource> GetDatasources() Returns List<IEssDatasource> GetDatasourcesAsync(CancellationToken) Returns a list of IEssDatasource objects Task<List<IEssDatasource>> GetDatasourcesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssDatasource>> GetFile(string) IEssFile GetFile(string path) Parameters path string Returns IEssFile GetFileAsync(string, CancellationToken) Task<IEssFile> GetFileAsync(string path, CancellationToken cancellationToken = default) Parameters path string cancellationToken CancellationToken Returns Task<IEssFile> GetFolder(string) IEssFolder GetFolder(string path) Parameters path string Returns IEssFolder GetFolderAsync(string, CancellationToken) Task<IEssFolder> GetFolderAsync(string path, CancellationToken cancellationToken = default) Parameters path string cancellationToken CancellationToken Returns Task<IEssFolder> GetFolders() Gets the list of files for this server available to the connected user. List<IEssFolder> GetFolders() Returns List<IEssFolder> GetFoldersAsync(CancellationToken) Asynchronously gets the list of files for this server available to the connected user. Task<List<IEssFolder>> GetFoldersAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssFolder>> GetGroup(string) Gets the specified group. IEssGroup GetGroup(string name) Parameters name string Returns IEssGroup GetGroupAsync(string, CancellationToken) Gets the specified group. Task<IEssGroup> GetGroupAsync(string name, CancellationToken cancellationToken = default) Parameters name string cancellationToken CancellationToken Returns Task<IEssGroup> GetGroups() Returns a list of IEssGroup objects. List<IEssGroup> GetGroups() Returns List<IEssGroup> GetGroupsAsync(CancellationToken) Returns a list of IEssGroup objects. Task<List<IEssGroup>> GetGroupsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssGroup>> GetJobs() Gets the list of jobs for this server available to the connected user. List<IEssJob> GetJobs() Returns List<IEssJob> GetJobs(long) Gets the list of jobs for this server available to the connected user. List<IEssJob> GetJobs(long jobsLimit) Parameters jobsLimit long The maximum number of jobs to return. Returns List<IEssJob> GetJobsAsync(long, CancellationToken) Asynchronously gets the list of jobs for this server available to the connected user. Task<List<IEssJob>> GetJobsAsync(long jobsLimit, CancellationToken cancellationToken = default) Parameters jobsLimit long The maximum number of jobs to return. cancellationToken CancellationToken Returns Task<List<IEssJob>> GetJobsAsync(CancellationToken) Asynchronously gets the list of jobs for this server available to the connected user. Task<List<IEssJob>> GetJobsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssJob>> GetSessions() Gets the list of server sessions available to the connected user. List<IEssSession> GetSessions() Returns List<IEssSession> GetSessionsAsync(CancellationToken) Asynchronously gets the list of server sessions available to the connected user. Task<List<IEssSession>> GetSessionsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssSession>> GetURLs() Gets the list of server URLs available to the connected user. List<IEssUrl> GetURLs() Returns List<IEssUrl> GetURLsAsync(CancellationToken) Asynchronously gets the list of server URLs available to the connected user. Task<List<IEssUrl>> GetURLsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssUrl>> GetUser(string) Gets the user with the given ID. IEssUser GetUser(string userId) Parameters userId string Returns IEssUser GetUserAsync(string, CancellationToken) Asynchronously gets the user with the given ID. Task<IEssUser> GetUserAsync(string userId, CancellationToken cancellationToken = default) Parameters userId string cancellationToken CancellationToken Returns Task<IEssUser> GetUserHomeFolder() Gets the home folder for the current user. IEssFolder GetUserHomeFolder() Returns IEssFolder GetUserHomeFolderAsync(CancellationToken) Asynchronously gets the home folder for the current user. Task<IEssFolder> GetUserHomeFolderAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssFolder> GetUserSession(bool, bool) Gets a user session from the server for the configured user. IEssUserSession GetUserSession(bool includeToken = true, bool includeGroups = true) Parameters includeToken bool Whether to capture a session token. includeGroups bool Whether to capture the user's groups. Returns IEssUserSession GetUserSessionAsync(bool, bool, CancellationToken) Asynchronously gets a user session from the server for the configured user. Task<IEssUserSession> GetUserSessionAsync(bool includeToken = true, bool includeGroups = true, CancellationToken cancellationToken = default) Parameters includeToken bool Whether to capture a session token. includeGroups bool Whether to capture the user's groups. cancellationToken CancellationToken Returns Task<IEssUserSession> GetUserSharedFolder() Gets the shared folder for the current user. IEssFolder GetUserSharedFolder() Returns IEssFolder GetUserSharedFolderAsync(CancellationToken) Asynchronously gets the shared folder for the current user. Task<IEssFolder> GetUserSharedFolderAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssFolder> GetUsers() Gets the list of all users for this server. List<IEssUser> GetUsers() Returns List<IEssUser> GetUsersAsync(CancellationToken) Gets the list of all users for this server. Task<List<IEssUser>> GetUsersAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssUser>> GetUtilities() Gets the list of server utilities available to the connected user. List<IEssUtility> GetUtilities() Returns List<IEssUtility> GetUtilitiesAsync(CancellationToken) Asynchronously gets the list of server utilities available to the connected user. Task<List<IEssUtility>> GetUtilitiesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssUtility>> GetVariables() Gets the list of server-scoped variables available to the connected user. List<IEssServerVariable> GetVariables() Returns List<IEssServerVariable> GetVariablesAsync(CancellationToken) Asynchronously gets the list of server-scoped variables available to the connected user. Task<List<IEssServerVariable>> GetVariablesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssServerVariable>> SignIn(bool, bool) Signs into the server and returns the user session for the connected user. IEssUserSession SignIn(bool includeToken = false, bool includeGroups = false) Parameters includeToken bool includeGroups bool Returns IEssUserSession SignInAsync(bool, bool, CancellationToken) Asynchronously signs into the server and returns the user session for the connected user. Task<IEssUserSession> SignInAsync(bool includeToken = false, bool includeGroups = false, CancellationToken cancellationToken = default) Parameters includeToken bool includeGroups bool cancellationToken CancellationToken Returns Task<IEssUserSession> SignOut() Signs out of the server. void SignOut() SignOutAsync(CancellationToken) Asynchronously signs out of the server. Task SignOutAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssServerFactory.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssServerFactory.html",
    "title": "Interface IEssServerFactory",
    "keywords": "Interface IEssServerFactory Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssServerFactory Methods CreateEssServer(string, string, string, bool) Creates a new server and, optionally, connects with the given credentials. IEssServer CreateEssServer(string server, string username, string password, bool connect = true) Parameters server string username string password string connect bool (optional) Whether to create a user session. Returns IEssServer A new IEssServer instance. CreateEssServerAsync(string, string, string, bool, CancellationToken) Creates a new server and, optionally, connects asynchronously with the given credentials. Task<IEssServer> CreateEssServerAsync(string server, string username, string password, bool connect = true, CancellationToken cancellationToken = default) Parameters server string username string password string connect bool (optional) Whether to asynchronously create a user session. cancellationToken CancellationToken Returns Task<IEssServer>"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssServerVariable.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssServerVariable.html",
    "title": "Interface IEssServerVariable",
    "keywords": "Interface IEssServerVariable Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssServerVariable : IEssObject Inherited Members IEssObject.Name IEssObject.Type Properties Scope Returns the scope of this variable. VariableScope Scope { get; } Property Value VariableScope Value Returns the value of this variable. string Value { get; } Property Value string Methods Delete() Deletes this variable. void Delete() DeleteAsync(CancellationToken) Asynchronously deletes this variable. Task DeleteAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssSession.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssSession.html",
    "title": "Interface IEssSession",
    "keywords": "Interface IEssSession Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssSession Properties ConnectionSource Gets or Sets ConnectionSource string ConnectionSource { get; } Property Value string LoginTimeInSeconds Gets or Sets LoginTimeInSeconds string LoginTimeInSeconds { get; } Property Value string SessionId Gets or Sets SessionId long SessionId { get; } Property Value long UserId Gets or Sets UserId string UserId { get; } Property Value string Methods KillAsync(bool, CancellationToken) Kill the session. Task KillAsync(bool logoff, CancellationToken cancellationToken = default) Parameters logoff bool cancellationToken CancellationToken Returns Task"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssUrl.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssUrl.html",
    "title": "Interface IEssUrl",
    "keywords": "Interface IEssUrl Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssUrl : IEssObject Inherited Members IEssObject.Name IEssObject.Type Properties Path Returns the URL path of the resource as a string. string Path { get; } Property Value string Url Returns the abolute URL of the resource. Uri Url { get; } Property Value Uri"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssUser.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssUser.html",
    "title": "Interface IEssUser",
    "keywords": "Interface IEssUser Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssUser : IEssObject Inherited Members IEssObject.Name IEssObject.Type Properties DisplayName Return the display name string DisplayName { get; } Property Value string Email Return the user email string Email { get; } Property Value string GroupNames List<string> GroupNames { get; } Property Value List<string> Role string Role { get; } Property Value string Server Return the server associated with the user IEssServer Server { get; } Property Value IEssServer"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssUserSession.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssUserSession.html",
    "title": "Interface IEssUserSession",
    "keywords": "Interface IEssUserSession Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssUserSession Properties Token Returns the token associated with this user session. string Token { get; } Property Value string Remarks The token is only available if explicitly captured. UserId Returns the user ID associated with this user session. string UserId { get; } Property Value string"
  },
  "api/EssSharp.Abstractions/EssSharp.IEssUtility.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.IEssUtility.html",
    "title": "Interface IEssUtility",
    "keywords": "Interface IEssUtility Namespace EssSharp Assembly EssSharp.Abstractions.dll public interface IEssUtility : IEssObject Inherited Members IEssObject.Name IEssObject.Type Properties IsDownloadable Returns whether the utility can be downloaded. bool IsDownloadable { get; } Property Value bool A bool that represents whether the utility can be downloaded. Server Returns the server that contains this job. IEssServer Server { get; } Property Value IEssServer The server that contains this job. Url Returns a url from which the utility can be downloaded. Uri Url { get; } Property Value Uri A Uri that represents the location of the utility. Methods Download() Downloads the utility. Stream Download() Returns Stream A Stream containing the utility content. DownloadAsync(CancellationToken) Asynchronously downloads the utility. Task<Stream> DownloadAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<Stream> A Stream containing the utility content."
  },
  "api/EssSharp.Abstractions/EssSharp.NamedQueryType.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.NamedQueryType.html",
    "title": "Enum NamedQueryType",
    "keywords": "Enum NamedQueryType Namespace EssSharp Assembly EssSharp.Abstractions.dll Defines Type public enum NamedQueryType Fields [EnumMember(Value = \"DATA_SOURCE\")] DATASOURCE = 2 Enum DATASOURCE for value: DATA_SOURCE [EnumMember(Value = \"MDX\")] MDX = 1 Enum MDX for value: MDX [EnumMember(Value = \"Unknown\")] Unknown = 0 Enum Unknown for value: Unknown"
  },
  "api/EssSharp.Abstractions/EssSharp.VariableScope.html": {
    "href": "api/EssSharp.Abstractions/EssSharp.VariableScope.html",
    "title": "Enum VariableScope",
    "keywords": "Enum VariableScope Namespace EssSharp Assembly EssSharp.Abstractions.dll The IEssServerVariable scope. public enum VariableScope Fields Application = 1 Cube = 2 Server = 0"
  },
  "api/EssSharp/EssSharp.EssAbout.html": {
    "href": "api/EssSharp/EssSharp.EssAbout.html",
    "title": "Class EssAbout",
    "keywords": "Class EssAbout Namespace EssSharp Assembly EssSharp.dll public class EssAbout : IEssAbout Inheritance object EssAbout Implements IEssAbout Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Build Returns the server build revision. public string Build { get; } Property Value string Description Returns the server description. public string Description { get; } Property Value string Version Returns the server version. public string Version { get; } Property Value string"
  },
  "api/EssSharp/EssSharp.EssAboutInstance.html": {
    "href": "api/EssSharp/EssSharp.EssAboutInstance.html",
    "title": "Class EssAboutInstance",
    "keywords": "Class EssAboutInstance Namespace EssSharp Assembly EssSharp.dll public class EssAboutInstance : IEssAboutInstance Inheritance object EssAboutInstance Implements IEssAboutInstance Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EasInstalled Returns whether EAS is installed for the server. public bool EasInstalled { get; } Property Value bool ProvisioningSupported Returns whether provisioning is supported by the server. public bool ProvisioningSupported { get; } Property Value bool ResetPasswordSupported Returns whether password reset is supported by the server for the current user. public bool ResetPasswordSupported { get; } Property Value bool"
  },
  "api/EssSharp/EssSharp.EssApplication.html": {
    "href": "api/EssSharp/EssSharp.EssApplication.html",
    "title": "Class EssApplication",
    "keywords": "Class EssApplication Namespace EssSharp Assembly EssSharp.dll public class EssApplication : EssObject, IEssApplication, IEssObject Inheritance object EssObject EssApplication Implements IEssApplication IEssObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CreatedDate Returns the date and time the application was created. public DateTime CreatedDate { get; } Property Value DateTime ModifiedDate Returns the date and time the application was last modified. public DateTime ModifiedDate { get; } Property Value DateTime Name The name of the thing. public override string Name { get; } Property Value string Server Returns the server that contains this application. public IEssServer Server { get; } Property Value IEssServer The server that contains this application. Status Returns the status of the application. public EssApplicationStatus Status { get; } Property Value EssApplicationStatus Type The type of the thing. public override EssType Type { get; } Property Value EssType Methods Copy(string) Copy The Application. public void Copy(string copyName) Parameters copyName string CopyAsync(string, CancellationToken) Copy the application. public Task CopyAsync(string copyName, CancellationToken cancellationToken = default) Parameters copyName string cancellationToken CancellationToken Returns Task CreateApplicationVariable(string, string) Create an application variable public IEssApplicationVariable CreateApplicationVariable(string varName, string value) Parameters varName string value string Returns IEssApplicationVariable an IEssApplicationVariable CreateApplicationVariableAsync(string, string, CancellationToken) Create an application variable public Task<IEssApplicationVariable> CreateApplicationVariableAsync(string name, string value, CancellationToken cancellationToken = default) Parameters name string value string cancellationToken CancellationToken Returns Task<IEssApplicationVariable> an IEssApplicationVariable CreateCube(string, EssDatabaseCreationOptions) Create a new cube on an Application public IEssCube CreateCube(string cubeName, EssDatabaseCreationOptions options = null) Parameters cubeName string options EssDatabaseCreationOptions Returns IEssCube An IEssCube object. CreateCubeAsync(string, EssDatabaseCreationOptions, CancellationToken) Create a new cube on an Application public Task<IEssCube> CreateCubeAsync(string cubeName, EssDatabaseCreationOptions options = null, CancellationToken cancellationToken = default) Parameters cubeName string options EssDatabaseCreationOptions cancellationToken CancellationToken Returns Task<IEssCube> An IEssCube object. CreateCubeFromWorkbook(string, EssJobImportExcelOptions) Creates a new cube (and application) from an existing server file. public IEssCube CreateCubeFromWorkbook(string cubeName, EssJobImportExcelOptions options) Parameters cubeName string options EssJobImportExcelOptions Returns IEssCube An IEssCube object. CreateCubeFromWorkbook(string, Stream, EssJobImportExcelOptions) Creates a new cube (and application) from a workbook stream. public IEssCube CreateCubeFromWorkbook(string cubeName, Stream stream, EssJobImportExcelOptions options = null) Parameters cubeName string stream Stream options EssJobImportExcelOptions Returns IEssCube An IEssCube object. CreateCubeFromWorkbook(string, string, EssJobImportExcelOptions) Creates a new cube (and application) from a local workbook file path. public IEssCube CreateCubeFromWorkbook(string cubeName, string localWorkbookPath, EssJobImportExcelOptions options = null) Parameters cubeName string localWorkbookPath string options EssJobImportExcelOptions Returns IEssCube An IEssCube object. CreateCubeFromWorkbookAsync(string, EssJobImportExcelOptions, CancellationToken) Asynchronously creates a new cube (and application) from a server file. public Task<IEssCube> CreateCubeFromWorkbookAsync(string cubeName, EssJobImportExcelOptions options, CancellationToken cancellationToken = default) Parameters cubeName string options EssJobImportExcelOptions cancellationToken CancellationToken Returns Task<IEssCube> An IEssCube object. CreateCubeFromWorkbookAsync(string, Stream, EssJobImportExcelOptions, CancellationToken) Asynchronously creates a new cube (and application) from a workbook stream. public Task<IEssCube> CreateCubeFromWorkbookAsync(string cubeName, Stream stream, EssJobImportExcelOptions options = null, CancellationToken cancellationToken = default) Parameters cubeName string stream Stream options EssJobImportExcelOptions cancellationToken CancellationToken Returns Task<IEssCube> An IEssCube object. CreateCubeFromWorkbookAsync(string, string, EssJobImportExcelOptions, CancellationToken) Asynchronously creates a new cube (and application) from a local workbook file path. public Task<IEssCube> CreateCubeFromWorkbookAsync(string cubeName, string localWorkbookPath, EssJobImportExcelOptions options = null, CancellationToken cancellationToken = default) Parameters cubeName string localWorkbookPath string options EssJobImportExcelOptions cancellationToken CancellationToken Returns Task<IEssCube> An IEssCube object. Delete() Deletes The Application. public void Delete() DeleteAsync(CancellationToken) Delete the application. public Task DeleteAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task DownloadLatestLogFile() Downloads the latest log file for this application. public Stream DownloadLatestLogFile() Returns Stream A Stream containing the log file content. DownloadLatestLogFileAsync(CancellationToken) Asynchronously downloads the latest log file for this application. public Task<Stream> DownloadLatestLogFileAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<Stream> A Stream containing the log file content. DownloadLatestLogFileString() Downloads the latest log file for this application. public string DownloadLatestLogFileString() Returns string A string containing the log file content. DownloadLatestLogFileStringAsync(CancellationToken) Asynchronously downloads the latest log file for this application. public Task<string> DownloadLatestLogFileStringAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> A string containing the log file content. ExportCubeToWorkbook(string, EssJobExportExcelOptions) Exports a cube to an excel workbook public Stream ExportCubeToWorkbook(string cubeName, EssJobExportExcelOptions options = null) Parameters cubeName string options EssJobExportExcelOptions Returns Stream ExportCubeToWorkbookAsync(string, EssJobExportExcelOptions, CancellationToken) Asynchronously Exports a cube to an excel workbook public Task<Stream> ExportCubeToWorkbookAsync(string cubeName, EssJobExportExcelOptions options = null, CancellationToken cancellationToken = default) Parameters cubeName string options EssJobExportExcelOptions cancellationToken CancellationToken Returns Task<Stream> GetConfigurations() Returns a list of configurations for this application public List<IEssApplicationConfiguration> GetConfigurations() Returns List<IEssApplicationConfiguration> A list of IEssApplicationConfiguration objects under this application. GetConfigurationsAsync(CancellationToken) returns a list of configurations for this application public Task<List<IEssApplicationConfiguration>> GetConfigurationsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssApplicationConfiguration>> A list of IEssApplicationConfiguration objects under this application. GetConnection(string) public IEssApplicationDatasourceConnection GetConnection(string appConnectionName) Parameters appConnectionName string Returns IEssApplicationDatasourceConnection GetConnectionAsync(string, CancellationToken) public Task<IEssApplicationDatasourceConnection> GetConnectionAsync(string appConnectionName, CancellationToken cancellationToken = default) Parameters appConnectionName string cancellationToken CancellationToken Returns Task<IEssApplicationDatasourceConnection> GetConnections() public List<IEssApplicationDatasourceConnection> GetConnections() Returns List<IEssApplicationDatasourceConnection> GetConnectionsAsync(CancellationToken) public Task<List<IEssApplicationDatasourceConnection>> GetConnectionsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssApplicationDatasourceConnection>> GetCube(string) Gets the cube with the given name. public IEssCube GetCube(string cubeName) Parameters cubeName string Returns IEssCube An EssCube object. GetCubeAsync(string, CancellationToken) Asynchronously gets the cube with the given name. public Task<IEssCube> GetCubeAsync(string cubeName, CancellationToken cancellationToken = default) Parameters cubeName string cancellationToken CancellationToken Returns Task<IEssCube> An EssCube object. GetCubes() Gets the list of cubes for this application available to the currently connected user. public List<IEssCube> GetCubes() Returns List<IEssCube> A list of EssCube objects under this application. GetCubesAsync(CancellationToken) Asynchronously gets the list of cubes for this application available to the currently connected user. public Task<List<IEssCube>> GetCubesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssCube>> A list of EssCube objects under this application. GetVariables() Gets the list of application-scoped variables available to the connected user. public List<IEssApplicationVariable> GetVariables() Returns List<IEssApplicationVariable> A list of IEssServerVariable objects. GetVariablesAsync(CancellationToken) Asynchronously gets the list of application-scoped variables available to the connected user. public Task<List<IEssApplicationVariable>> GetVariablesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssApplicationVariable>> A list of IEssServerVariable objects. Start() Start The Application. public void Start() StartAsync(CancellationToken) Asynchronously starts the application. public Task StartAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task Stop() Stop The Application. public void Stop() StopAsync(CancellationToken) Asynchronously stops the application. public Task StopAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task"
  },
  "api/EssSharp/EssSharp.EssApplicationConfiguration.html": {
    "href": "api/EssSharp/EssSharp.EssApplicationConfiguration.html",
    "title": "Class EssApplicationConfiguration",
    "keywords": "Class EssApplicationConfiguration Namespace EssSharp Assembly EssSharp.dll public class EssApplicationConfiguration : EssObject, IEssApplicationConfiguration, IEssObject Inheritance object EssObject EssApplicationConfiguration Implements IEssApplicationConfiguration IEssObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Application Returns the application that this configuration is associated with public IEssApplication Application { get; } Property Value IEssApplication Key Returns the key for this configuration public string Key { get; } Property Value string Name The name of the thing. public override string Name { get; } Property Value string Type The type of the thing. public override EssType Type { get; } Property Value EssType Value returns the value for this configuration!No, nNnn public string Value { get; } Property Value string"
  },
  "api/EssSharp/EssSharp.EssApplicationDatasource.html": {
    "href": "api/EssSharp/EssSharp.EssApplicationDatasource.html",
    "title": "Class EssApplicationDatasource",
    "keywords": "Class EssApplicationDatasource Namespace EssSharp Assembly EssSharp.dll public class EssApplicationDatasource : EssDatasource, IEssApplicationDatasource, IEssDatasource, IEssObject Inheritance object EssObject EssDatasource EssApplicationDatasource Implements IEssApplicationDatasource IEssDatasource IEssObject Inherited Members EssDatasource.Name EssDatasource.Type EssDatasource.Server EssDatasource.ConnectionName EssDatasource.DatasourceType EssDatasource.GetConnection() EssDatasource.GetConnectionAsync(CancellationToken) EssDatasource.Query(IEssDatasourceQueryInfo) EssDatasource.QueryAsync(IEssDatasourceQueryInfo, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Application Returns the application that contains this datasource. public IEssApplication Application { get; } Property Value IEssApplication Methods ToString() public override string ToString() Returns string Remarks Provides the name of this datasource in the following format: <datasource>."
  },
  "api/EssSharp/EssSharp.EssApplicationDatasourceConnection.html": {
    "href": "api/EssSharp/EssSharp.EssApplicationDatasourceConnection.html",
    "title": "Class EssApplicationDatasourceConnection",
    "keywords": "Class EssApplicationDatasourceConnection Namespace EssSharp Assembly EssSharp.dll public class EssApplicationDatasourceConnection : EssDatasourceConnection, IEssApplicationDatasourceConnection, IEssDatasourceConnection, IEssObject Inheritance object EssObject EssDatasourceConnection EssApplicationDatasourceConnection Implements IEssApplicationDatasourceConnection IEssDatasourceConnection IEssObject Inherited Members EssDatasourceConnection.Name EssDatasourceConnection.Type EssDatasourceConnection.Server EssDatasourceConnection.ConnectionType EssDatasourceConnection.ConnectionSubtype EssDatasourceConnection.Description EssDatasourceConnection.Path EssDatasourceConnection.Catalog EssDatasourceConnection.Host EssDatasourceConnection.Port EssDatasourceConnection.User EssDatasourceConnection.Encrypted EssDatasourceConnection.Token EssDatasourceConnection.Sid EssDatasourceConnection.Service EssDatasourceConnection.Schema EssDatasourceConnection.DbURL EssDatasourceConnection.DbDriver EssDatasourceConnection.DatasourceName EssDatasourceConnection.WalletPath EssDatasourceConnection.RepoWallet EssDatasourceConnection.MinPoolSize EssDatasourceConnection.MaxPoolSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Application Returns the parent application of the connection. public IEssApplication Application { get; } Property Value IEssApplication Methods DeleteConnection() Delete a connection public override void DeleteConnection() DeleteConnectionAsync(CancellationToken) Delete a connection public override Task DeleteConnectionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task TestConnection() Tests the connection public override void TestConnection() TestConnectionAsync(CancellationToken) Tests the connection public override Task TestConnectionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task"
  },
  "api/EssSharp/EssSharp.EssApplicationVariable.html": {
    "href": "api/EssSharp/EssSharp.EssApplicationVariable.html",
    "title": "Class EssApplicationVariable",
    "keywords": "Class EssApplicationVariable Namespace EssSharp Assembly EssSharp.dll Represents a variable that is specific to a particular application. public class EssApplicationVariable : EssServerVariable, IEssApplicationVariable, IEssServerVariable, IEssObject Inheritance object EssObject EssServerVariable EssApplicationVariable Implements IEssApplicationVariable IEssServerVariable IEssObject Derived EssCubeVariable Inherited Members EssServerVariable.Name EssServerVariable.Type EssServerVariable.Value EssServerVariable.Delete() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Application Returns the application of this variable. public IEssApplication Application { get; } Property Value IEssApplication Scope Returns the scope of this variable. public override VariableScope Scope { get; } Property Value VariableScope Methods DeleteAsync(CancellationToken) Asynchronously deletes this variable. public override Task DeleteAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task ToString() Returns a textual description of this variable. public override string ToString() Returns string"
  },
  "api/EssSharp/EssSharp.EssCalcScript.html": {
    "href": "api/EssSharp/EssSharp.EssCalcScript.html",
    "title": "Class EssCalcScript",
    "keywords": "Class EssCalcScript Namespace EssSharp Assembly EssSharp.dll public class EssCalcScript : EssScript, IEssCalcScript, IEssScript, IEssObject Inheritance object EssObject EssScript EssCalcScript Implements IEssCalcScript IEssScript IEssObject Inherited Members EssScript.Name EssScript.Type EssScript.Content EssScript.Cube EssScript.ModifiedTime EssScript.Size EssScript.Delete() EssScript.DeleteAsync(CancellationToken) EssScript.Execute() EssScript.ExecuteAsync(CancellationToken) EssScript.GetContent() EssScript.GetContentAsync(CancellationToken) EssScript.Save<T>() EssScript.SaveAsync<T>(CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ScriptType Returns the type of the script. public override EssScriptType ScriptType { get; } Property Value EssScriptType"
  },
  "api/EssSharp/EssSharp.EssCube.html": {
    "href": "api/EssSharp/EssSharp.EssCube.html",
    "title": "Class EssCube",
    "keywords": "Class EssCube Namespace EssSharp Assembly EssSharp.dll public class EssCube : EssObject, IEssCube, IEssObject Inheritance object EssObject EssCube Implements IEssCube IEssObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Application Returns the parent application of the cube. public IEssApplication Application { get; } Property Value IEssApplication CubeType Returns the type of the cube. public EssCubeType CubeType { get; } Property Value EssCubeType Name The name of the thing. public override string Name { get; } Property Value string Type The type of the thing. public override EssType Type { get; } Property Value EssType Methods ClearDataFromCube(EssJobClearDataOptions) Clears data from a cube public void ClearDataFromCube(EssJobClearDataOptions options = null) Parameters options EssJobClearDataOptions ClearDataFromCubeAsync(EssJobClearDataOptions, CancellationToken) Clears data from a cube public Task ClearDataFromCubeAsync(EssJobClearDataOptions options = null, CancellationToken cancellationToken = default) Parameters options EssJobClearDataOptions cancellationToken CancellationToken Returns Task CreateCubeVariable(string, string) Create a cube variable public IEssCubeVariable CreateCubeVariable(string name, string value) Parameters name string value string Returns IEssCubeVariable an IEssCubeVariable CreateCubeVariableAsync(string, string, CancellationToken) Create a cube variable public Task<IEssCubeVariable> CreateCubeVariableAsync(string name, string value, CancellationToken cancellationToken = default) Parameters name string value string cancellationToken CancellationToken Returns Task<IEssCubeVariable> an IEssCubeVariable CreateLockObject(EssLockOptions) Synchronously lock an object on the server. public IEssLockObject CreateLockObject(EssLockOptions lockOptions) Parameters lockOptions EssLockOptions Returns IEssLockObject CreateLockObjectAsync(EssLockOptions, CancellationToken) Asynchronously lock an object on the server. public Task<IEssLockObject> CreateLockObjectAsync(EssLockOptions lockOptions, CancellationToken cancellationToken = default) Parameters lockOptions EssLockOptions cancellationToken CancellationToken Returns Task<IEssLockObject> CreateScriptAsync<T>(string, string, CancellationToken) Asynchronously creates a script with the given name (and type ) on the cube. public Task<T> CreateScriptAsync<T>(string name, string content = null, CancellationToken cancellationToken = default) where T : class, IEssScript Parameters name string The name of the script. content string (optional) The content of the new script. cancellationToken CancellationToken Returns Task<T> Type Parameters T Remarks Creates an IEssScript of the specific type . CreateScript<T>(string, string) Creates a script with the given name (and type ) on the cube. public T CreateScript<T>(string name, string content = null) where T : class, IEssScript Parameters name string The name of the script. content string (optional) The content of the new script. Returns T Type Parameters T Remarks Creates an IEssScript of the specific given type . ExecuteMDXQuery(string, EssQueryPreferences) public EssQueryReport ExecuteMDXQuery(string query, EssQueryPreferences preferences = null) Parameters query string preferences EssQueryPreferences Returns EssQueryReport ExecuteMDXQueryAsync(string, EssQueryPreferences, CancellationToken) public Task<EssQueryReport> ExecuteMDXQueryAsync(string query, EssQueryPreferences preferences = null, CancellationToken cancellationToken = default) Parameters query string preferences EssQueryPreferences cancellationToken CancellationToken Returns Task<EssQueryReport> ExecuteScript(EssJobScriptOptions) Executes a script (Calc or MDX) on a cube public void ExecuteScript(EssJobScriptOptions options) Parameters options EssJobScriptOptions ExecuteScriptAsync(EssJobScriptOptions, CancellationToken) Executes a script (Calc or MDX) on a cube public Task ExecuteScriptAsync(EssJobScriptOptions options, CancellationToken cancellationToken = default) Parameters options EssJobScriptOptions cancellationToken CancellationToken Returns Task ExportCubeToWorkbook(EssJobExportExcelOptions) Exports a cube to an excel workbook public Stream ExportCubeToWorkbook(EssJobExportExcelOptions options = null) Parameters options EssJobExportExcelOptions Returns Stream Stream ExportCubeToWorkbookAsync(EssJobExportExcelOptions, CancellationToken) Exports a cube to an excel workbook public Task<Stream> ExportCubeToWorkbookAsync(EssJobExportExcelOptions options = null, CancellationToken cancellationToken = default) Parameters options EssJobExportExcelOptions cancellationToken CancellationToken Returns Task<Stream> Stream GetActiveAlias() Returns the active alias of the cube. public string GetActiveAlias() Returns string GetActiveAliasAsync(CancellationToken) Returns the active alias of the cube. public Task<string> GetActiveAliasAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> GetAliases() Returns a list of aliases on a cube. public List<string> GetAliases() Returns List<string> GetAliasesAsync(CancellationToken) public Task<List<string>> GetAliasesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<string>> GetDefaultGrid(bool) Returns the default grid of a cube public IEssGrid GetDefaultGrid(bool reset = false) Parameters reset bool Returns IEssGrid IEssGrid GetDefaultGridAsync(bool, CancellationToken) Returns the default grid of a cube public Task<IEssGrid> GetDefaultGridAsync(bool reset = false, CancellationToken cancellationToken = default) Parameters reset bool cancellationToken CancellationToken Returns Task<IEssGrid> IEssGrid GetDimensions() Gets the list of dimensions. public List<IEssDimension> GetDimensions() Returns List<IEssDimension> A list of EssDimension objects. GetDimensionsAsync(CancellationToken) Gets the list of dimensions. public Task<List<IEssDimension>> GetDimensionsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssDimension>> A list of EssDimension objects. GetDrillthroughReport(string, bool) Gets the drillthrough report with the given name. public IEssDrillthroughReport GetDrillthroughReport(string reportName, bool getDetails = false) Parameters reportName string The name of the report getDetails bool (optional) Whether to get the full report specification (or only summary details). Returns IEssDrillthroughReport An EssDrillthroughReport object. GetDrillthroughReportAsync(string, bool, CancellationToken) Asynchronously gets the drillthrough report with the given name. public Task<IEssDrillthroughReport> GetDrillthroughReportAsync(string reportName, bool getDetails = false, CancellationToken cancellationToken = default) Parameters reportName string The name of the report. getDetails bool (optional) Whether to get the full report specification (or only summary details). cancellationToken CancellationToken Returns Task<IEssDrillthroughReport> An EssDrillthroughReport object. GetDrillthroughReports(bool) Gets the list of drillthrough reports for this cube. public List<IEssDrillthroughReport> GetDrillthroughReports(bool getDetails = false) Parameters getDetails bool (optional) Whether to get the full report specification (or only summary details). Returns List<IEssDrillthroughReport> A list of EssDrillthroughReport objects. GetDrillthroughReportsAsync(bool, CancellationToken) Asynchronously gets the list of drillthrough reports for this cube. public Task<List<IEssDrillthroughReport>> GetDrillthroughReportsAsync(bool getDetails = false, CancellationToken cancellationToken = default) Parameters getDetails bool (optional) Whether to get the full report specification (or only summary details). cancellationToken CancellationToken Returns Task<List<IEssDrillthroughReport>> A list of EssDrillthroughReport objects. GetFile(string) public IEssFile GetFile(string fileName) Parameters fileName string Returns IEssFile GetFileAsync(string, CancellationToken) public Task<IEssFile> GetFileAsync(string fileName, CancellationToken cancellationToken = default) Parameters fileName string cancellationToken CancellationToken Returns Task<IEssFile> GetFiles() public List<IEssFile> GetFiles() Returns List<IEssFile> GetFilesAsync(CancellationToken) public Task<List<IEssFile>> GetFilesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssFile>> GetFolder() public IEssFolder GetFolder() Returns IEssFolder GetFolderAsync(CancellationToken) public Task<IEssFolder> GetFolderAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssFolder> GetLockedBlocks() public List<IEssLockBlock> GetLockedBlocks() Returns List<IEssLockBlock> A list of IEssLock objects. GetLockedBlocksAsync(CancellationToken) public Task<List<IEssLockBlock>> GetLockedBlocksAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssLockBlock>> GetLockedObject(string) Gets the locked object with the given name. public IEssLockObject GetLockedObject(string name) Parameters name string Returns IEssLockObject A list of IEssLock objects. GetLockedObjectAsync(string, CancellationToken) Asynchronously gets the locked object with the given name. public Task<IEssLockObject> GetLockedObjectAsync(string name, CancellationToken cancellationToken = default) Parameters name string cancellationToken CancellationToken Returns Task<IEssLockObject> A list of IEssLock objects. GetLockedObjects() Gets the list of locked objects. public List<IEssLockObject> GetLockedObjects() Returns List<IEssLockObject> A list of IEssLock objects. GetLockedObjectsAsync(CancellationToken) Asynchronously gets the list of locked objects. public Task<List<IEssLockObject>> GetLockedObjectsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssLockObject>> A list of IEssLock objects. GetScriptAsync<T>(string, bool, CancellationToken) Asynchronously gets the script with the given name (and type ) from the cube. public Task<T> GetScriptAsync<T>(string scriptName, bool getContent = false, CancellationToken cancellationToken = default) where T : class, IEssScript Parameters scriptName string The name of the script. getContent bool Whether to get the full script, including content, or only summary details. cancellationToken CancellationToken Returns Task<T> An EssScript object of type T. Type Parameters T Remarks Returns an IEssScript of the specific given type . GetScript<T>(string, bool) Gets the script with the given name (and type ) from the cube. public T GetScript<T>(string scriptName, bool getContent = false) where T : class, IEssScript Parameters scriptName string The name of the script. getContent bool Whether to get the full script, including content, or only summary details. Returns T A list of IEssScript objects. Type Parameters T Remarks Returns an IEssScript of the specific given type . GetScriptsAsync<T>(bool, CancellationToken) Asynchronously gets the list of scripts with the given type from the cube. public Task<List<T>> GetScriptsAsync<T>(bool getContent = false, CancellationToken cancellationToken = default) where T : class, IEssScript Parameters getContent bool Whether to get the full scripts, including content, or only summary details. cancellationToken CancellationToken Returns Task<List<T>> A list of EssScript objects. Type Parameters T Remarks Returns a list of IEssScript objects of the specific given type . GetScripts<T>(bool) Gets the list of scripts with the given type from the cube. public List<T> GetScripts<T>(bool getContent = false) where T : class, IEssScript Parameters getContent bool Whether to get the full scripts, including content, or only summary details. Returns List<T> A list of EssScript objects. Type Parameters T Remarks Returns a list of IEssScript objects of the specific given type . GetVariables() Gets the list of cube-scoped variables available to the connected user. public List<IEssCubeVariable> GetVariables() Returns List<IEssCubeVariable> A list of EssCubeVariable objects. GetVariablesAsync(CancellationToken) Asynchronously gets the list of cube-scoped variables available to the connected user. public Task<List<IEssCubeVariable>> GetVariablesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssCubeVariable>> A list of EssCubeVariable objects. LoadDataToCube(EssJobLoadDataOptions) Loads data to a cube from a file on the Server public void LoadDataToCube(EssJobLoadDataOptions options) Parameters options EssJobLoadDataOptions LoadDataToCubeAsync(EssJobLoadDataOptions, CancellationToken) Loads data to a cube from a file on the Server public Task LoadDataToCubeAsync(EssJobLoadDataOptions options, CancellationToken cancellationToken = default) Parameters options EssJobLoadDataOptions cancellationToken CancellationToken Returns Task UnlockAsync<T>(List<T>, CancellationToken) public Task UnlockAsync<T>(List<T> lockedList, CancellationToken cancellationToken = default) where T : class, IEssLock Parameters lockedList List<T> cancellationToken CancellationToken Returns Task Type Parameters T Unlock<T>(List<T>) public void Unlock<T>(List<T> lockedList) where T : class, IEssLock Parameters lockedList List<T> Type Parameters T isScenariosEnabled() Returns true if this cube has scenarios are enabled, else false public bool isScenariosEnabled() Returns bool true if scenarios are enabled, else false isScenariosEnabledAsync() Returns true if this cube has scenarios are enabled, else false public Task<bool> isScenariosEnabledAsync() Returns Task<bool> true if scenarios are enabled, else false"
  },
  "api/EssSharp/EssSharp.EssCubeVariable.html": {
    "href": "api/EssSharp/EssSharp.EssCubeVariable.html",
    "title": "Class EssCubeVariable",
    "keywords": "Class EssCubeVariable Namespace EssSharp Assembly EssSharp.dll Represents a variable that is specific to a particular cube. public class EssCubeVariable : EssApplicationVariable, IEssCubeVariable, IEssApplicationVariable, IEssServerVariable, IEssObject Inheritance object EssObject EssServerVariable EssApplicationVariable EssCubeVariable Implements IEssCubeVariable IEssApplicationVariable IEssServerVariable IEssObject Inherited Members EssApplicationVariable.Application EssServerVariable.Name EssServerVariable.Type EssServerVariable.Value EssServerVariable.Delete() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Cube Returns the cube of this variable. public IEssCube Cube { get; } Property Value IEssCube Scope Returns the scope of this variable. public override VariableScope Scope { get; } Property Value VariableScope Methods DeleteAsync(CancellationToken) Asynchronously deletes this variable. public override Task DeleteAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task ToString() Returns a textual description of this variable. public override string ToString() Returns string"
  },
  "api/EssSharp/EssSharp.EssDatasource.html": {
    "href": "api/EssSharp/EssSharp.EssDatasource.html",
    "title": "Class EssDatasource",
    "keywords": "Class EssDatasource Namespace EssSharp Assembly EssSharp.dll public class EssDatasource : EssObject, IEssDatasource, IEssObject Inheritance object EssObject EssDatasource Implements IEssDatasource IEssObject Derived EssApplicationDatasource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties ConnectionName Returns the name of the Connection public string ConnectionName { get; } Property Value string DatasourceType Returns the Datasource type public EssDatasourceType DatasourceType { get; } Property Value EssDatasourceType Name The name of the thing. public override string Name { get; } Property Value string Server Returns the server that contains this job. public IEssServer Server { get; } Property Value IEssServer Type The type of the thing. public override EssType Type { get; } Property Value EssType Methods GetConnection() public IEssDatasourceConnection GetConnection() Returns IEssDatasourceConnection An EssDatasourceConnection. GetConnectionAsync(CancellationToken) public Task<IEssDatasourceConnection> GetConnectionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssDatasourceConnection> An EssDatasourceConnection. Query(IEssDatasourceQueryInfo) public string Query(IEssDatasourceQueryInfo queryInfo) Parameters queryInfo IEssDatasourceQueryInfo Returns string QueryAsync(IEssDatasourceQueryInfo, CancellationToken) public Task<string> QueryAsync(IEssDatasourceQueryInfo queryInfo, CancellationToken cancellationToken = default) Parameters queryInfo IEssDatasourceQueryInfo cancellationToken CancellationToken Returns Task<string> ToString() public override string ToString() Returns string Remarks Provides the name of this datasource in the following format: <datasource>."
  },
  "api/EssSharp/EssSharp.EssDatasourceConnection.html": {
    "href": "api/EssSharp/EssSharp.EssDatasourceConnection.html",
    "title": "Class EssDatasourceConnection",
    "keywords": "Class EssDatasourceConnection Namespace EssSharp Assembly EssSharp.dll public class EssDatasourceConnection : EssObject, IEssDatasourceConnection, IEssObject Inheritance object EssObject EssDatasourceConnection Implements IEssDatasourceConnection IEssObject Derived EssApplicationDatasourceConnection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Catalog public bool Catalog { get; } Property Value bool ConnectionSubtype Returns the Connection Subtype public EssDatasourceConnectionSubtype ConnectionSubtype { get; } Property Value EssDatasourceConnectionSubtype ConnectionType Returns the Connection Type public EssDatasourceConnectionType ConnectionType { get; } Property Value EssDatasourceConnectionType DatasourceName public string DatasourceName { get; } Property Value string DbDriver public string DbDriver { get; } Property Value string DbURL public string DbURL { get; } Property Value string Description public string Description { get; set; } Property Value string Encrypted public bool Encrypted { get; } Property Value bool Host public string Host { get; } Property Value string MaxPoolSize public int MaxPoolSize { get; } Property Value int MinPoolSize public int MinPoolSize { get; } Property Value int Name The name of the thing. public override string Name { get; } Property Value string Path public string Path { get; } Property Value string Port public int Port { get; } Property Value int RepoWallet public bool RepoWallet { get; } Property Value bool Schema public string Schema { get; } Property Value string Server Returns the server that contains this job. public IEssServer Server { get; } Property Value IEssServer Service public string Service { get; } Property Value string Sid public string Sid { get; } Property Value string Token public string Token { get; } Property Value string Type The type of the thing. public override EssType Type { get; } Property Value EssType User public string User { get; } Property Value string WalletPath public string WalletPath { get; } Property Value string Methods DeleteConnection() Delete a connection public virtual void DeleteConnection() DeleteConnectionAsync(CancellationToken) Delete a connection public virtual Task DeleteConnectionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task TestConnection() Tests the connection public virtual void TestConnection() TestConnectionAsync(CancellationToken) Tests the connection public virtual Task TestConnectionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task"
  },
  "api/EssSharp/EssSharp.EssDimension.html": {
    "href": "api/EssSharp/EssSharp.EssDimension.html",
    "title": "Class EssDimension",
    "keywords": "Class EssDimension Namespace EssSharp Assembly EssSharp.dll public class EssDimension : IEssDimension Inheritance object EssDimension Implements IEssDimension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Members public int Members { get; } Property Value int Name Gets the Name as a string public string Name { get; } Property Value string StoredMembers public int StoredMembers { get; } Property Value int Type public string Type { get; } Property Value string"
  },
  "api/EssSharp/EssSharp.EssDrillthroughReport.html": {
    "href": "api/EssSharp/EssSharp.EssDrillthroughReport.html",
    "title": "Class EssDrillthroughReport",
    "keywords": "Class EssDrillthroughReport Namespace EssSharp Assembly EssSharp.dll public class EssDrillthroughReport : EssObject, IEssDrillthroughReport, IEssObject Inheritance object EssObject EssDrillthroughReport Implements IEssDrillthroughReport IEssObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Cube Returns the cube of this report. public IEssCube Cube { get; } Property Value IEssCube Name The name of the thing. public override string Name { get; } Property Value string Type The type of the thing. public override EssType Type { get; } Property Value EssType Methods Execute(IEssDrillthroughRange, IEssDrillthroughOptions) Executes the drillthrough report and returns records. public (object[,] report, string[] columnTypes) Execute(IEssDrillthroughRange context, IEssDrillthroughOptions options = null) Parameters context IEssDrillthroughRange options IEssDrillthroughOptions Returns (object[,] report, string[] columnTypes) Execute(IEnumerable<IEssDrillthroughRange>, IEssDrillthroughOptions) Executes the drillthrough report and returns records. public (object[,] report, string[] columnTypes) Execute(IEnumerable<IEssDrillthroughRange> context, IEssDrillthroughOptions options = null) Parameters context IEnumerable<IEssDrillthroughRange> options IEssDrillthroughOptions Returns (object[,] report, string[] columnTypes) ExecuteAsync(IEssDrillthroughRange, IEssDrillthroughOptions, CancellationToken) Asynchronously executes the drillthrough report and returns records. public Task<(object[,] report, string[] columnTypes)> ExecuteAsync(IEssDrillthroughRange context, IEssDrillthroughOptions options = null, CancellationToken cancellationToken = default) Parameters context IEssDrillthroughRange options IEssDrillthroughOptions cancellationToken CancellationToken Returns Task<(object[,] report, string[] columnTypes)> ExecuteAsync(IEnumerable<IEssDrillthroughRange>, IEssDrillthroughOptions, CancellationToken) Asynchronously executes the drillthrough report and returns records. public Task<(object[,] report, string[] columnTypes)> ExecuteAsync(IEnumerable<IEssDrillthroughRange> context, IEssDrillthroughOptions options = null, CancellationToken cancellationToken = default) Parameters context IEnumerable<IEssDrillthroughRange> options IEssDrillthroughOptions cancellationToken CancellationToken Returns Task<(object[,] report, string[] columnTypes)> GetDetails() Gets the full report specification. public void GetDetails() GetDetailsAsync(CancellationToken) Asynchronously gets the full report specification. public Task GetDetailsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task"
  },
  "api/EssSharp/EssSharp.EssFile.html": {
    "href": "api/EssSharp/EssSharp.EssFile.html",
    "title": "Class EssFile",
    "keywords": "Class EssFile Namespace EssSharp Assembly EssSharp.dll public class EssFile : EssObject, IEssFile, IEssObject Inheritance object EssObject EssFile Implements IEssFile IEssObject Derived EssFolder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FullPath Returns the full path of the file. public string FullPath { get; } Property Value string Name The name of the thing. public override string Name { get; } Property Value string ParentPath Returns the full path of the parent folder. public string ParentPath { get; } Property Value string Server Returns the server that contains this file. public IEssServer Server { get; } Property Value IEssServer Type The type of the thing. public override EssType Type { get; } Property Value EssType Methods Copy(string, bool) Copy a file from source to destination public virtual void Copy(string newFilePath, bool overwrite = false) Parameters newFilePath string overwrite bool CopyAsync(string, bool, CancellationToken) Copy a file from source to destination public virtual Task CopyAsync(string newFilePath, bool overwrite = false, CancellationToken cancellationToken = default) Parameters newFilePath string overwrite bool cancellationToken CancellationToken Returns Task Delete() Delete a specific file public void Delete() DeleteAsync(CancellationToken) Delete a specific file public Task DeleteAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task Download() Downloads a file to a stream. public Stream Download() Returns Stream A Stream object. DownloadAsync(CancellationToken) Asynchronously downloads a file to a stream. public Task<Stream> DownloadAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<Stream> A Stream object. Extract(bool) Extract a zip file on same location public virtual void Extract(bool overwrite = false) Parameters overwrite bool ExtractAsync(bool, CancellationToken) Extract a zip file on same location public virtual Task ExtractAsync(bool overwrite = false, CancellationToken cancellationToken = default) Parameters overwrite bool cancellationToken CancellationToken Returns Task Move(string, bool) Moves a file from source to destination public virtual void Move(string newFilePath, bool overwrite = false) Parameters newFilePath string overwrite bool MoveAsync(string, bool, CancellationToken) public virtual Task MoveAsync(string newFilePath, bool overwrite = false, CancellationToken cancellationToken = default) Parameters newFilePath string overwrite bool cancellationToken CancellationToken Returns Task Rename(string, bool) Renames a file or folder public void Rename(string newFilePath, bool overwrite = false) Parameters newFilePath string overwrite bool RenameAsync(string, bool, CancellationToken) Renames a file or folder public virtual Task RenameAsync(string newFileName, bool overwrite = false, CancellationToken cancellationToken = default) Parameters newFileName string overwrite bool cancellationToken CancellationToken Returns Task"
  },
  "api/EssSharp/EssSharp.EssFolder.html": {
    "href": "api/EssSharp/EssSharp.EssFolder.html",
    "title": "Class EssFolder",
    "keywords": "Class EssFolder Namespace EssSharp Assembly EssSharp.dll public class EssFolder : EssFile, IEssFolder, IEssFile, IEssObject Inheritance object EssObject EssFile EssFolder Implements IEssFolder IEssFile IEssObject Inherited Members EssFile.Name EssFile.Server EssFile.FullPath EssFile.ParentPath EssFile.Download() EssFile.DownloadAsync(CancellationToken) EssFile.Delete() EssFile.DeleteAsync(CancellationToken) EssFile.Rename(string, bool) EssFile.Extract(bool) EssFile.ExtractAsync(bool, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Type The type of the thing. public override EssType Type { get; } Property Value EssType Methods Copy(string, bool) Copy a file from source to destination public override void Copy(string newFilePath, bool overwrite = false) Parameters newFilePath string overwrite bool Exceptions NotImplementedException Copying a folder is not supported. CopyAsync(string, bool, CancellationToken) Copy a file from source to destination public override Task CopyAsync(string newFilePath, bool overwrite = false, CancellationToken cancellationToken = default) Parameters newFilePath string overwrite bool cancellationToken CancellationToken Returns Task Exceptions NotImplementedException Copying a folder is not supported. CreateSubfolder(string) Creates a subfolder with the given subfolderName if it does not already exist. If the subfolder already exists, it is returned. public IEssFolder CreateSubfolder(string subfolderName) Parameters subfolderName string Returns IEssFolder An EssFolder object. CreateSubfolderAsync(string, CancellationToken) Asynchronously creates a subfolder with the given subfolderName if it does not already exist. If the subfolder already exists, it is returned. public Task<IEssFolder> CreateSubfolderAsync(string subfolderName, CancellationToken cancellationToken = default) Parameters subfolderName string cancellationToken CancellationToken Returns Task<IEssFolder> An EssFolder object. GetFile(string) Gets the immediate file of this folder with the given filename. public IEssFile GetFile(string filename) Parameters filename string Returns IEssFile An EssFile object. GetFileAsync(string, CancellationToken) Asynchronously gets the immediate file of this folder with the given filename. public Task<IEssFile> GetFileAsync(string filename, CancellationToken cancellationToken = default) Parameters filename string cancellationToken CancellationToken Returns Task<IEssFile> An EssFile object. GetFiles(string) Gets a list of the immediate files of this folder, optionally matching a given nameFilter. public List<IEssFile> GetFiles(string nameFilter = null) Parameters nameFilter string Returns List<IEssFile> A list of EssFile objects. GetFilesAsync(string, CancellationToken) Asynchronously gets a list of the immediate files of this folder, optionally matching a given nameFilter. public Task<List<IEssFile>> GetFilesAsync(string nameFilter = null, CancellationToken cancellationToken = default) Parameters nameFilter string cancellationToken CancellationToken Returns Task<List<IEssFile>> A list of EssFile objects. GetFolder(string) Gets the immediate subfolder of this folder with the given folderName. public IEssFolder GetFolder(string folderName) Parameters folderName string Returns IEssFolder An EssFolder object. GetFolderAsync(string, CancellationToken) Asynchronously gets the immediate subfolder of this folder with the given folderName. public Task<IEssFolder> GetFolderAsync(string folderName, CancellationToken cancellationToken = default) Parameters folderName string cancellationToken CancellationToken Returns Task<IEssFolder> An EssFolder object. GetFolders(string) Gets a list of the immediate subfolders of this folder, optionally matching a given nameFilter. public List<IEssFolder> GetFolders(string nameFilter = null) Parameters nameFilter string Returns List<IEssFolder> A list of EssFolder objects. GetFoldersAsync(string, CancellationToken) Asynchronously gets a list of the immediate subfolders of this folder, optionally matching a given nameFilter. public Task<List<IEssFolder>> GetFoldersAsync(string nameFilter = null, CancellationToken cancellationToken = default) Parameters nameFilter string cancellationToken CancellationToken Returns Task<List<IEssFolder>> A list of EssFolder objects. Move(string, bool) Moves a file from source to destination public override void Move(string newFilePath, bool overwrite = false) Parameters newFilePath string overwrite bool Exceptions NotImplementedException Moving a folder is not supported. MoveAsync(string, bool, CancellationToken) public override Task MoveAsync(string newFilePath, bool overwrite = false, CancellationToken cancellationToken = default) Parameters newFilePath string overwrite bool cancellationToken CancellationToken Returns Task Exceptions NotImplementedException Moving a folder is not supported. RenameAsync(string, bool, CancellationToken) Renames a file or folder public override Task RenameAsync(string newFolderName, bool overwrite = false, CancellationToken cancellationToken = default) Parameters newFolderName string overwrite bool cancellationToken CancellationToken Returns Task UploadFile(FileStream, string, bool) Uploads a local file stream to the server with the given filename, optionally overwriting an existing file on the server if it already exists. public IEssFile UploadFile(FileStream stream, string filename = null, bool overwrite = false) Parameters stream FileStream filename string overwrite bool Returns IEssFile An EssFile object. UploadFile(Stream, string, bool) Upload file to Server using Stream public IEssFile UploadFile(Stream stream, string filename, bool overwrite = false) Parameters stream Stream filename string overwrite bool Returns IEssFile An EssFile object. UploadFile(string, string, bool) Uploads a local file with the given path to the server with the given filename, optionally overwriting an existing file on the server if it already exists. public IEssFile UploadFile(string path, string filename = null, bool overwrite = false) Parameters path string filename string overwrite bool Returns IEssFile An EssFile object. UploadFileAsync(FileStream, string, bool, CancellationToken) Asynchronously uploads a local file stream to the server with the given filename, optionally overwriting an existing file on the server if it already exists. public Task<IEssFile> UploadFileAsync(FileStream stream, string filename = null, bool overwrite = false, CancellationToken cancellationToken = default) Parameters stream FileStream filename string overwrite bool cancellationToken CancellationToken Returns Task<IEssFile> An EssFile object. UploadFileAsync(Stream, string, bool, CancellationToken) Asynchronously uploads an arbitrary stream to the server with the given filename, optionally overwriting an existing file on the server if it already exists. public Task<IEssFile> UploadFileAsync(Stream stream, string filename, bool overwrite = false, CancellationToken cancellationToken = default) Parameters stream Stream filename string overwrite bool cancellationToken CancellationToken Returns Task<IEssFile> An EssFile object. UploadFileAsync(string, string, bool, CancellationToken) Asynchronously uploads a local file with the given path to the server with the given filename, optionally overwriting an existing file on the server if it already exists. public Task<IEssFile> UploadFileAsync(string path, string filename = null, bool overwrite = false, CancellationToken cancellationToken = default) Parameters path string filename string overwrite bool cancellationToken CancellationToken Returns Task<IEssFile> An EssFile object."
  },
  "api/EssSharp/EssSharp.EssGrid.html": {
    "href": "api/EssSharp/EssSharp.EssGrid.html",
    "title": "Class EssGrid",
    "keywords": "Class EssGrid Namespace EssSharp Assembly EssSharp.dll public class EssGrid : EssObject, IEssGrid, IEssObject Inheritance object EssObject EssGrid Implements IEssGrid IEssObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Alias Gets the Name as a string public string Alias { get; } Property Value string Cube public IEssCube Cube { get; } Property Value IEssCube Dimensions public List<EssGridDimension> Dimensions { get; } Property Value List<EssGridDimension> Name The name of the thing. public override string Name { get; } Property Value string Slice public EssGridSlice Slice { get; } Property Value EssGridSlice Type The type of the thing. public override EssType Type { get; } Property Value EssType"
  },
  "api/EssSharp/EssSharp.EssGroup.html": {
    "href": "api/EssSharp/EssSharp.EssGroup.html",
    "title": "Class EssGroup",
    "keywords": "Class EssGroup Namespace EssSharp Assembly EssSharp.dll public class EssGroup : EssObject, IEssGroup, IEssObject Inheritance object EssObject EssGroup Implements IEssGroup IEssObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description Returns the description of the group public string Description { get; } Property Value string GroupNames Returns the groups in this Group public List<string> GroupNames { get; } Property Value List<string> Name The name of the thing. public override string Name { get; } Property Value string Role Returns the role of this group public string Role { get; } Property Value string Server Returns the Server associated with the group public IEssServer Server { get; } Property Value IEssServer Type The type of the thing. public override EssType Type { get; } Property Value EssType Methods GetGroups() Get child groups of a parent Group public List<IEssGroup> GetGroups() Returns List<IEssGroup> GetGroupsAsync(CancellationToken) Gets child groups of a parent group public Task<List<IEssGroup>> GetGroupsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssGroup>> GetUsers() Returns a list of IEssUser objects. public List<IEssUser> GetUsers() Returns List<IEssUser> GetUsersAsync(CancellationToken) Returns a list of IEssUser objects. public Task<List<IEssUser>> GetUsersAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssUser>>"
  },
  "api/EssSharp/EssSharp.EssJob.html": {
    "href": "api/EssSharp/EssSharp.EssJob.html",
    "title": "Class EssJob",
    "keywords": "Class EssJob Namespace EssSharp Assembly EssSharp.dll public class EssJob : EssObject, IEssJob, IEssObject Inheritance object EssObject EssJob Implements IEssJob IEssObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ErrorMessage Returns the error message of this job (if available). public string ErrorMessage { get; } Property Value string InfoMessage Returns the info message of this job (if available). public string InfoMessage { get; } Property Value string JobID Returns the ID of this job. public long JobID { get; } Property Value long JobOutputInfo Returns the output information dictionary of this job (if available). public Dictionary<string, object> JobOutputInfo { get; } Property Value Dictionary<string, object> JobStatus Returns the status of this job. public EssJobStatus JobStatus { get; } Property Value EssJobStatus JobType Returns the type of this job. public EssJobType JobType { get; } Property Value EssJobType Name The name of the thing. public override string Name { get; } Property Value string Server Returns the server that contains this job. public IEssServer Server { get; } Property Value IEssServer StatusMessage Returns the status message of this job (if available). public string StatusMessage { get; } Property Value string Type The type of the thing. public override EssType Type { get; } Property Value EssType Methods Execute() Executes (or re-runs) this job, updating its status and returning the updated job. public IEssJob Execute() Returns IEssJob An EssJob object. ExecuteAsync(CancellationToken) Asynchronously executes (or re-runs) this job, updating its status and returning the updated job. public Task<IEssJob> ExecuteAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssJob> An EssJob object. ReRun() Re-runs an already executed job, returning the new job. public IEssJob ReRun() Returns IEssJob An EssJob object. ReRunAsync(CancellationToken) Asynchronously re-runs an already executed job, returning the new job. public Task<IEssJob> ReRunAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssJob> An EssJob object. ThrowIfFailed() Throws an Exception containing any available error message if the job failed or, otherwise, returns the job. public IEssJob ThrowIfFailed() Returns IEssJob An EssJob object. Exceptions Exception"
  },
  "api/EssSharp/EssSharp.EssLock.html": {
    "href": "api/EssSharp/EssSharp.EssLock.html",
    "title": "Class EssLock",
    "keywords": "Class EssLock Namespace EssSharp Assembly EssSharp.dll public class EssLock : EssObject, IEssLock, IEssObject Inheritance object EssObject EssLock Implements IEssLock IEssObject Derived EssLockBlock EssLockObject Inherited Members EssObject.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LockType public virtual EssLockType LockType { get; } Property Value EssLockType Type The type of the thing. public override EssType Type { get; } Property Value EssType Methods Unlock() public void Unlock() UnlockAsync(CancellationToken) public Task UnlockAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task"
  },
  "api/EssSharp/EssSharp.EssLockBlock.html": {
    "href": "api/EssSharp/EssSharp.EssLockBlock.html",
    "title": "Class EssLockBlock",
    "keywords": "Class EssLockBlock Namespace EssSharp Assembly EssSharp.dll public class EssLockBlock : EssLock, IEssLockBlock, IEssLock, IEssObject Inheritance object EssObject EssLock EssLockBlock Implements IEssLockBlock IEssLock IEssObject Inherited Members EssLock.Unlock() EssLock.UnlockAsync(CancellationToken) EssObject.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count public int Count { get; } Property Value int Duration Returns the time public int Duration { get; } Property Value int LockType public override EssLockType LockType { get; } Property Value EssLockType Type The type of the thing. public override EssType Type { get; } Property Value EssType User Returns the user public string User { get; } Property Value string"
  },
  "api/EssSharp/EssSharp.EssLockObject.html": {
    "href": "api/EssSharp/EssSharp.EssLockObject.html",
    "title": "Class EssLockObject",
    "keywords": "Class EssLockObject Namespace EssSharp Assembly EssSharp.dll public class EssLockObject : EssLock, IEssLockObject, IEssLock, IEssObject Inheritance object EssObject EssLock EssLockObject Implements IEssLockObject IEssLock IEssObject Inherited Members EssLock.Type EssLock.Unlock() EssLock.UnlockAsync(CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LockType public override EssLockType LockType { get; } Property Value EssLockType LockedFileType Returns the Lock Object Type public EssLockedFileType LockedFileType { get; } Property Value EssLockedFileType Name The name of the thing. public override string Name { get; } Property Value string Time Returns the time public DateTime Time { get; } Property Value DateTime User Returns the user public string User { get; } Property Value string"
  },
  "api/EssSharp/EssSharp.EssMaxlScript.html": {
    "href": "api/EssSharp/EssSharp.EssMaxlScript.html",
    "title": "Class EssMaxlScript",
    "keywords": "Class EssMaxlScript Namespace EssSharp Assembly EssSharp.dll public class EssMaxlScript : EssScript, IEssMaxlScript, IEssScript, IEssObject Inheritance object EssObject EssScript EssMaxlScript Implements IEssMaxlScript IEssScript IEssObject Inherited Members EssScript.Name EssScript.Type EssScript.Content EssScript.Cube EssScript.ModifiedTime EssScript.Size EssScript.Delete() EssScript.DeleteAsync(CancellationToken) EssScript.Execute() EssScript.ExecuteAsync(CancellationToken) EssScript.GetContent() EssScript.GetContentAsync(CancellationToken) EssScript.Save<T>() EssScript.SaveAsync<T>(CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ScriptType Returns the type of the script. public override EssScriptType ScriptType { get; } Property Value EssScriptType"
  },
  "api/EssSharp/EssSharp.EssMdxScript.html": {
    "href": "api/EssSharp/EssSharp.EssMdxScript.html",
    "title": "Class EssMdxScript",
    "keywords": "Class EssMdxScript Namespace EssSharp Assembly EssSharp.dll public class EssMdxScript : EssScript, IEssMdxScript, IEssScript, IEssObject Inheritance object EssObject EssScript EssMdxScript Implements IEssMdxScript IEssScript IEssObject Inherited Members EssScript.Name EssScript.Type EssScript.Content EssScript.Cube EssScript.ModifiedTime EssScript.Size EssScript.Delete() EssScript.DeleteAsync(CancellationToken) EssScript.Execute() EssScript.ExecuteAsync(CancellationToken) EssScript.GetContent() EssScript.GetContentAsync(CancellationToken) EssScript.Save<T>() EssScript.SaveAsync<T>(CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ScriptType Returns the type of the script. public override EssScriptType ScriptType { get; } Property Value EssScriptType Methods GetGrid() public IEssGrid GetGrid() Returns IEssGrid IEssGrid GetGridAsync(CancellationToken) public Task<IEssGrid> GetGridAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssGrid> IEssGrid Query(EssQueryPreferences) public EssQueryReport Query(EssQueryPreferences preferences = null) Parameters preferences EssQueryPreferences Returns EssQueryReport QueryAsync(EssQueryPreferences, CancellationToken) public Task<EssQueryReport> QueryAsync(EssQueryPreferences preferences = null, CancellationToken cancellationToken = default) Parameters preferences EssQueryPreferences cancellationToken CancellationToken Returns Task<EssQueryReport> EssQueryReport"
  },
  "api/EssSharp/EssSharp.EssObject.html": {
    "href": "api/EssSharp/EssSharp.EssObject.html",
    "title": "Class EssObject",
    "keywords": "Class EssObject Namespace EssSharp Assembly EssSharp.dll public abstract class EssObject : IEssObject Inheritance object EssObject Implements IEssObject Derived EssApplication EssApplicationConfiguration EssCube EssDatasource EssDatasourceConnection EssDrillthroughReport EssFile EssGrid EssGroup EssJob EssLock EssScript EssServer EssServerVariable EssSession EssUrl EssUser EssUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name The name of the thing. public virtual string Name { get; } Property Value string Type The type of the thing. public virtual EssType Type { get; } Property Value EssType"
  },
  "api/EssSharp/EssSharp.EssReportScript.html": {
    "href": "api/EssSharp/EssSharp.EssReportScript.html",
    "title": "Class EssReportScript",
    "keywords": "Class EssReportScript Namespace EssSharp Assembly EssSharp.dll public class EssReportScript : EssScript, IEssReportScript, IEssScript, IEssObject Inheritance object EssObject EssScript EssReportScript Implements IEssReportScript IEssScript IEssObject Inherited Members EssScript.Name EssScript.Type EssScript.Content EssScript.Cube EssScript.ModifiedTime EssScript.Size EssScript.Delete() EssScript.DeleteAsync(CancellationToken) EssScript.Execute() EssScript.ExecuteAsync(CancellationToken) EssScript.GetContent() EssScript.GetContentAsync(CancellationToken) EssScript.Save<T>() EssScript.SaveAsync<T>(CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ScriptType Returns the type of the script. public override EssScriptType ScriptType { get; } Property Value EssScriptType"
  },
  "api/EssSharp/EssSharp.EssScript.html": {
    "href": "api/EssSharp/EssSharp.EssScript.html",
    "title": "Class EssScript",
    "keywords": "Class EssScript Namespace EssSharp Assembly EssSharp.dll public class EssScript : EssObject, IEssScript, IEssObject Inheritance object EssObject EssScript Implements IEssScript IEssObject Derived EssCalcScript EssMaxlScript EssMdxScript EssReportScript Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Content Returns the content of the script public string Content { get; set; } Property Value string Cube Returns the cube that holds the script public IEssCube Cube { get; } Property Value IEssCube ModifiedTime Returns not sure public long ModifiedTime { get; } Property Value long Name The name of the thing. public override string Name { get; } Property Value string ScriptType Returns the type of the script. public virtual EssScriptType ScriptType { get; } Property Value EssScriptType Size Returns the size of the script in bytes public long Size { get; } Property Value long Type The type of the thing. public override EssType Type { get; } Property Value EssType Methods Delete() Deletes a script from the cube public void Delete() DeleteAsync(CancellationToken) Deletes a script from the cube public Task DeleteAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task Execute() Executes a script public IEssJob Execute() Returns IEssJob ExecuteAsync(CancellationToken) Executes a script public Task<IEssJob> ExecuteAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssJob> Remarks TODO: FIGURE OUT HOW TO MAP SCRIPT TYPE TO JOBTYPE. GetContent() public string GetContent() Returns string GetContentAsync(CancellationToken) public Task<string> GetContentAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> SaveAsync<T>(CancellationToken) public Task<T> SaveAsync<T>(CancellationToken cancellationToken = default) where T : class, IEssScript Parameters cancellationToken CancellationToken Returns Task<T> Type Parameters T Save<T>() public T Save<T>() where T : class, IEssScript Returns T Type Parameters T"
  },
  "api/EssSharp/EssSharp.EssServer.html": {
    "href": "api/EssSharp/EssSharp.EssServer.html",
    "title": "Class EssServer",
    "keywords": "Class EssServer Namespace EssSharp Assembly EssSharp.dll public class EssServer : EssObject, IEssServer, IEssObject, IDisposable, IAsyncDisposable Inheritance object EssObject EssServer Implements IEssServer IEssObject IDisposable IAsyncDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EssServer(string, string, string) public EssServer(string server, string username, string password) Parameters server string username string password string Properties Name The name of the thing. public override string Name { get; } Property Value string Type The type of the thing. public override EssType Type { get; } Property Value EssType Methods CreateApplication(string, string, EssDatabaseCreationOptions) Creates a new Application and database with the given name and options public IEssApplication CreateApplication(string applicationName, string cubeName, EssDatabaseCreationOptions options = null) Parameters applicationName string cubeName string options EssDatabaseCreationOptions Returns IEssApplication CreateApplicationAsync(string, string, EssDatabaseCreationOptions, CancellationToken) Creates a new Application and database with the given name and options public Task<IEssApplication> CreateApplicationAsync(string applicationName, string cubeName, EssDatabaseCreationOptions options = null, CancellationToken cancellationToken = default) Parameters applicationName string cubeName string options EssDatabaseCreationOptions cancellationToken CancellationToken Returns Task<IEssApplication> CreateApplicationFromWorkbook(string, string, EssJobImportExcelOptions) Creates a new application (and cube) from an existing server file. public IEssApplication CreateApplicationFromWorkbook(string applicationName, string cubeName, EssJobImportExcelOptions options) Parameters applicationName string cubeName string options EssJobImportExcelOptions Returns IEssApplication An IEssApplication object. CreateApplicationFromWorkbook(string, string, Stream, EssJobImportExcelOptions) Creates a new application (and cube) from a workbook stream. public IEssApplication CreateApplicationFromWorkbook(string applicationName, string cubeName, Stream stream, EssJobImportExcelOptions options = null) Parameters applicationName string cubeName string stream Stream options EssJobImportExcelOptions Returns IEssApplication An IEssApplication object. CreateApplicationFromWorkbook(string, string, string, EssJobImportExcelOptions) Creates a new application (and cube) from a local workbook file path. public IEssApplication CreateApplicationFromWorkbook(string applicationName, string cubeName, string localWorkbookPath, EssJobImportExcelOptions options = null) Parameters applicationName string cubeName string localWorkbookPath string options EssJobImportExcelOptions Returns IEssApplication An IEssApplication object. CreateApplicationFromWorkbookAsync(string, string, EssJobImportExcelOptions, CancellationToken) Asynchronously creates a new application (and cube) from an existing server file. public Task<IEssApplication> CreateApplicationFromWorkbookAsync(string applicationName, string cubeName, EssJobImportExcelOptions options, CancellationToken cancellationToken = default) Parameters applicationName string cubeName string options EssJobImportExcelOptions cancellationToken CancellationToken Returns Task<IEssApplication> An IEssApplication object. CreateApplicationFromWorkbookAsync(string, string, Stream, EssJobImportExcelOptions, CancellationToken) Asynchronously creates a new application (and cube) from a workbook stream. public Task<IEssApplication> CreateApplicationFromWorkbookAsync(string applicationName, string cubeName, Stream stream, EssJobImportExcelOptions options = null, CancellationToken cancellationToken = default) Parameters applicationName string cubeName string stream Stream options EssJobImportExcelOptions cancellationToken CancellationToken Returns Task<IEssApplication> An IEssApplication object. CreateApplicationFromWorkbookAsync(string, string, string, EssJobImportExcelOptions, CancellationToken) Asynchronously creates a new application (and cube) from a local workbook file path. public Task<IEssApplication> CreateApplicationFromWorkbookAsync(string applicationName, string cubeName, string localWorkbookPath, EssJobImportExcelOptions options = null, CancellationToken cancellationToken = default) Parameters applicationName string cubeName string localWorkbookPath string options EssJobImportExcelOptions cancellationToken CancellationToken Returns Task<IEssApplication> An IEssApplication object. CreateJob(IEssJobOptions) Creates a new (unstarted) job on the server. public IEssJob CreateJob(IEssJobOptions options) Parameters options IEssJobOptions Returns IEssJob An EssJob object. CreateVariable(string, string) Creates a new server variable public IEssServerVariable CreateVariable(string name, string value) Parameters name string value string Returns IEssServerVariable An IEssServerVariable object. CreateVariableAsync(string, string, CancellationToken) Create a new server variable public Task<IEssServerVariable> CreateVariableAsync(string name, string value, CancellationToken cancellationToken = default) Parameters name string value string cancellationToken CancellationToken Returns Task<IEssServerVariable> An IEssServerVariable object. Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public ValueTask DisposeAsync() Returns ValueTask DisposeAsync(bool, CancellationToken) protected virtual Task DisposeAsync(bool disposing, CancellationToken cancellationToken = default) Parameters disposing bool cancellationToken CancellationToken Returns Task GetAbout() Gets the about information of this server. public IEssAbout GetAbout() Returns IEssAbout An EssAbout object. GetAboutAsync(CancellationToken) Asynchronously gets the about information of this server. public Task<IEssAbout> GetAboutAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssAbout> An EssAbout object. GetAboutInstance() Gets the about information of this server. public IEssAboutInstance GetAboutInstance() Returns IEssAboutInstance An EssAboutInstance object. GetAboutInstanceAsync(CancellationToken) Gets the about information of this server public Task<IEssAboutInstance> GetAboutInstanceAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssAboutInstance> An EssAboutInstance object. GetApplication(string) Gets the application with the given name. public IEssApplication GetApplication(string applicationName) Parameters applicationName string Returns IEssApplication An EssApplication object. GetApplicationAsync(string, CancellationToken) Asynchronously gets the application with the given name. public Task<IEssApplication> GetApplicationAsync(string applicationName, CancellationToken cancellationToken = default) Parameters applicationName string cancellationToken CancellationToken Returns Task<IEssApplication> An EssApplication object. GetApplications() Gets the list of applications for this server available to the connected user. public List<IEssApplication> GetApplications() Returns List<IEssApplication> A list of EssApplication objects. Remarks The number of returned applications is limited to the value of _maxApplications. GetApplications(int) Gets the list of applications for this server available to the connected user. public List<IEssApplication> GetApplications(int applicationsLimit) Parameters applicationsLimit int The maximum number of applications to return. Returns List<IEssApplication> A list of EssApplication objects. Remarks The number of returned applications is limited to the value of applicationsLimit. GetApplicationsAsync(int, CancellationToken) Asynchronously gets the list of applications for this server available to the connected user. public Task<List<IEssApplication>> GetApplicationsAsync(int applicationsLimit, CancellationToken cancellationToken = default) Parameters applicationsLimit int The maximum number of applications to return. cancellationToken CancellationToken Returns Task<List<IEssApplication>> A list of EssApplication objects. Remarks The number of returned applications is limited to the value of applicationsLimit. GetApplicationsAsync(CancellationToken) Asynchronously gets the list of applications for this server available to the connected user. public Task<List<IEssApplication>> GetApplicationsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssApplication>> A list of EssApplication objects. Remarks The number of returned applications is limited to the value of _maxApplications. GetConnection(string) public IEssDatasourceConnection GetConnection(string connectionName) Parameters connectionName string Returns IEssDatasourceConnection GetConnectionAsync(string, CancellationToken) public Task<IEssDatasourceConnection> GetConnectionAsync(string connectionName, CancellationToken cancellationToken = default) Parameters connectionName string cancellationToken CancellationToken Returns Task<IEssDatasourceConnection> GetConnections() public List<IEssDatasourceConnection> GetConnections() Returns List<IEssDatasourceConnection> GetConnectionsAsync(CancellationToken) public Task<List<IEssDatasourceConnection>> GetConnectionsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssDatasourceConnection>> GetDatasource(string) Return a specified data source as an IEssDatasource object public IEssDatasource GetDatasource(string datasourceName) Parameters datasourceName string Returns IEssDatasource GetDatasourceAsync(string, CancellationToken) Returns a specified data source as an IEssDatasource object public Task<IEssDatasource> GetDatasourceAsync(string datasourceName, CancellationToken cancellationToken = default) Parameters datasourceName string cancellationToken CancellationToken Returns Task<IEssDatasource> GetDatasources() Returns a list of IEssDatasource objects public List<IEssDatasource> GetDatasources() Returns List<IEssDatasource> A list of EssDatasource objects. GetDatasourcesAsync(CancellationToken) Returns a list of IEssDatasource objects public Task<List<IEssDatasource>> GetDatasourcesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssDatasource>> A list of EssDatasource objects. GetFile(string) public IEssFile GetFile(string path) Parameters path string Returns IEssFile GetFileAsync(string, CancellationToken) public Task<IEssFile> GetFileAsync(string path, CancellationToken cancellationToken = default) Parameters path string cancellationToken CancellationToken Returns Task<IEssFile> An IEssFile object. GetFolder(string) public IEssFolder GetFolder(string path) Parameters path string Returns IEssFolder GetFolderAsync(string, CancellationToken) public Task<IEssFolder> GetFolderAsync(string path, CancellationToken cancellationToken = default) Parameters path string cancellationToken CancellationToken Returns Task<IEssFolder> An IEssFolder object. GetFolders() Gets the list of files for this server available to the connected user. public List<IEssFolder> GetFolders() Returns List<IEssFolder> A List of IEssFolder objects. GetFoldersAsync(CancellationToken) Asynchronously gets the list of files for this server available to the connected user. public Task<List<IEssFolder>> GetFoldersAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssFolder>> A List of IEssFolder objects. GetGroup(string) Gets the specified group. public IEssGroup GetGroup(string name) Parameters name string Returns IEssGroup GetGroupAsync(string, CancellationToken) Gets the specified group. public Task<IEssGroup> GetGroupAsync(string name, CancellationToken cancellationToken = default) Parameters name string cancellationToken CancellationToken Returns Task<IEssGroup> GetGroups() Returns a list of IEssGroup objects. public List<IEssGroup> GetGroups() Returns List<IEssGroup> GetGroupsAsync(CancellationToken) Returns a list of IEssGroup objects. public Task<List<IEssGroup>> GetGroupsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssGroup>> GetJobs() Gets the list of jobs for this server available to the connected user. public List<IEssJob> GetJobs() Returns List<IEssJob> A list of EssJob objects. Remarks The number of returned jobs is limited to the value of _maxJobs. GetJobs(long) Gets the list of jobs for this server available to the connected user. public List<IEssJob> GetJobs(long jobsLimit) Parameters jobsLimit long The maximum number of jobs to return. Returns List<IEssJob> A list of EssJob objects. Remarks The number of returned jobs is limited to the value of jobsLimit. GetJobsAsync(long, CancellationToken) Asynchronously gets the list of jobs for this server available to the connected user. public Task<List<IEssJob>> GetJobsAsync(long jobsLimit, CancellationToken cancellationToken = default) Parameters jobsLimit long The maximum number of jobs to return. cancellationToken CancellationToken Returns Task<List<IEssJob>> A list of EssJob objects. Remarks The number of returned jobs is limited to the value of jobsLimit. GetJobsAsync(CancellationToken) Asynchronously gets the list of jobs for this server available to the connected user. public Task<List<IEssJob>> GetJobsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssJob>> A list of EssJob objects. Remarks The number of returned jobs is limited to the value of _maxJobs. GetSessions() Gets the list of server sessions available to the connected user. public List<IEssSession> GetSessions() Returns List<IEssSession> A list of EssSession objects. GetSessionsAsync(CancellationToken) Asynchronously gets the list of server sessions available to the connected user. public Task<List<IEssSession>> GetSessionsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssSession>> A list of EssSession objects. GetURLs() Gets the list of server URLs available to the connected user. public List<IEssUrl> GetURLs() Returns List<IEssUrl> A list of EssUrl objects. GetURLsAsync(CancellationToken) Asynchronously gets the list of server URLs available to the connected user. public Task<List<IEssUrl>> GetURLsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssUrl>> A list of EssUrl objects. GetUser(string) Gets the user with the given ID. public IEssUser GetUser(string id) Parameters id string Returns IEssUser An EssUser object GetUserAsync(string, CancellationToken) Asynchronously gets the user with the given ID. public Task<IEssUser> GetUserAsync(string id, CancellationToken cancellationToken = default) Parameters id string cancellationToken CancellationToken Returns Task<IEssUser> An EssUser object GetUserHomeFolder() Gets the home folder for the current user. public IEssFolder GetUserHomeFolder() Returns IEssFolder An EssFolder object. GetUserHomeFolderAsync(CancellationToken) Asynchronously gets the home folder for the current user. public Task<IEssFolder> GetUserHomeFolderAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssFolder> An EssFolder object. GetUserSession(bool, bool) Gets a user session from the server for the configured user. public IEssUserSession GetUserSession(bool includeToken = true, bool includeGroups = true) Parameters includeToken bool Whether to capture a session token. includeGroups bool Whether to capture the user's groups. Returns IEssUserSession An EssUserSession object. GetUserSessionAsync(bool, bool, CancellationToken) Asynchronously gets a user session from the server for the configured user. public Task<IEssUserSession> GetUserSessionAsync(bool includeToken = true, bool includeGroups = true, CancellationToken cancellationToken = default) Parameters includeToken bool Whether to capture a session token. includeGroups bool Whether to capture the user's groups. cancellationToken CancellationToken Returns Task<IEssUserSession> An EssUserSession object. GetUserSharedFolder() Gets the shared folder for the current user. public IEssFolder GetUserSharedFolder() Returns IEssFolder An EssFolder object. GetUserSharedFolderAsync(CancellationToken) Asynchronously gets the shared folder for the current user. public Task<IEssFolder> GetUserSharedFolderAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IEssFolder> An EssFolder object. GetUsers() Gets the list of all users for this server. public List<IEssUser> GetUsers() Returns List<IEssUser> GetUsersAsync(CancellationToken) Gets the list of all users for this server. public Task<List<IEssUser>> GetUsersAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssUser>> A list of EssUser objects. GetUtilities() Gets the list of server utilities available to the connected user. public List<IEssUtility> GetUtilities() Returns List<IEssUtility> A list of EssUtility objects. GetUtilitiesAsync(CancellationToken) Asynchronously gets the list of server utilities available to the connected user. public Task<List<IEssUtility>> GetUtilitiesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssUtility>> A list of EssUtility objects. GetVariables() Gets the list of server-scoped variables available to the connected user. public List<IEssServerVariable> GetVariables() Returns List<IEssServerVariable> A list of EssServerVariable objects. GetVariablesAsync(CancellationToken) Asynchronously gets the list of server-scoped variables available to the connected user. public Task<List<IEssServerVariable>> GetVariablesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<IEssServerVariable>> A list of EssServerVariable objects. SignIn(bool, bool) Signs into the server and returns the user session for the connected user. public IEssUserSession SignIn(bool includeToken = false, bool includeGroups = false) Parameters includeToken bool includeGroups bool Returns IEssUserSession An EssUserSession object, optionally containing a session token and group membership information. SignInAsync(bool, bool, CancellationToken) Asynchronously signs into the server and returns the user session for the connected user. public Task<IEssUserSession> SignInAsync(bool includeToken = false, bool includeGroups = false, CancellationToken cancellationToken = default) Parameters includeToken bool includeGroups bool cancellationToken CancellationToken Returns Task<IEssUserSession> An EssUserSession object, optionally containing a session token and group membership information. SignOut() Signs out of the server. public void SignOut() SignOutAsync(CancellationToken) Asynchronously signs out of the server. public Task SignOutAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task"
  },
  "api/EssSharp/EssSharp.EssServerFactory.html": {
    "href": "api/EssSharp/EssSharp.EssServerFactory.html",
    "title": "Class EssServerFactory",
    "keywords": "Class EssServerFactory Namespace EssSharp Assembly EssSharp.dll A factory for creating new EssServer instances. public class EssServerFactory : IEssServerFactory Inheritance object EssServerFactory Implements IEssServerFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateEssServer(string, string, string, bool) Creates a new server and, optionally, connects with the given credentials. public IEssServer CreateEssServer(string server, string username, string password, bool connect = true) Parameters server string username string password string connect bool (optional) Whether to create a user session. Returns IEssServer A new IEssServer instance. CreateEssServerAsync(string, string, string, bool, CancellationToken) Creates a new server and, optionally, connects asynchronously with the given credentials. public Task<IEssServer> CreateEssServerAsync(string server, string username, string password, bool connect = true, CancellationToken cancellationToken = default) Parameters server string username string password string connect bool (optional) Whether to asynchronously create a user session. cancellationToken CancellationToken Returns Task<IEssServer> An EssServer object."
  },
  "api/EssSharp/EssSharp.EssServerVariable.html": {
    "href": "api/EssSharp/EssSharp.EssServerVariable.html",
    "title": "Class EssServerVariable",
    "keywords": "Class EssServerVariable Namespace EssSharp Assembly EssSharp.dll Represents a variable that is specific to a particular server. public class EssServerVariable : EssObject, IEssServerVariable, IEssObject Inheritance object EssObject EssServerVariable Implements IEssServerVariable IEssObject Derived EssApplicationVariable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Name The name of the thing. public override string Name { get; } Property Value string Scope Returns the scope of this variable. public virtual VariableScope Scope { get; } Property Value VariableScope Type The type of the thing. public override EssType Type { get; } Property Value EssType Value Returns the value of this variable. public virtual string Value { get; } Property Value string Methods Delete() Deletes this variable. public virtual void Delete() DeleteAsync(CancellationToken) Asynchronously deletes this variable. public virtual Task DeleteAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task ToString() Returns a textual description of this variable. public override string ToString() Returns string"
  },
  "api/EssSharp/EssSharp.EssSession.html": {
    "href": "api/EssSharp/EssSharp.EssSession.html",
    "title": "Class EssSession",
    "keywords": "Class EssSession Namespace EssSharp Assembly EssSharp.dll public class EssSession : EssObject, IEssObject, IEssSession Inheritance object EssObject EssSession Implements IEssObject IEssSession Inherited Members EssObject.Name EssObject.Type object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EssSession(SessionAttributes) public EssSession(SessionAttributes sessionAttributes) Parameters sessionAttributes SessionAttributes Properties ConnectionSource Gets or Sets ConnectionSource public string ConnectionSource { get; } Property Value string LoginTimeInSeconds Gets or Sets LoginTimeInSeconds public string LoginTimeInSeconds { get; } Property Value string SessionId Gets or Sets SessionId public long SessionId { get; } Property Value long UserId Gets or Sets UserId public string UserId { get; } Property Value string Methods KillAsync(bool, CancellationToken) Kill the session. public Task KillAsync(bool logoff, CancellationToken cancellationToken = default) Parameters logoff bool cancellationToken CancellationToken Returns Task"
  },
  "api/EssSharp/EssSharp.EssUrl.html": {
    "href": "api/EssSharp/EssSharp.EssUrl.html",
    "title": "Class EssUrl",
    "keywords": "Class EssUrl Namespace EssSharp Assembly EssSharp.dll public class EssUrl : EssObject, IEssUrl, IEssObject Inheritance object EssObject EssUrl Implements IEssUrl IEssObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name The name of the thing. public override string Name { get; } Property Value string Path Returns the URL path of the resource as a string. public string Path { get; } Property Value string Type The type of the thing. public override EssType Type { get; } Property Value EssType Url Returns the abolute URL of the resource. public Uri Url { get; } Property Value Uri"
  },
  "api/EssSharp/EssSharp.EssUser.html": {
    "href": "api/EssSharp/EssSharp.EssUser.html",
    "title": "Class EssUser",
    "keywords": "Class EssUser Namespace EssSharp Assembly EssSharp.dll public class EssUser : EssObject, IEssUser, IEssObject Inheritance object EssObject EssUser Implements IEssUser IEssObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DisplayName Return the display name public string DisplayName { get; } Property Value string Email Return the user email public string Email { get; } Property Value string GroupNames public List<string> GroupNames { get; } Property Value List<string> Name The name of the thing. public override string Name { get; } Property Value string Role public string Role { get; } Property Value string Server Return the server associated with the user public IEssServer Server { get; } Property Value IEssServer Type The type of the thing. public override EssType Type { get; } Property Value EssType"
  },
  "api/EssSharp/EssSharp.EssUserSession.html": {
    "href": "api/EssSharp/EssSharp.EssUserSession.html",
    "title": "Class EssUserSession",
    "keywords": "Class EssUserSession Namespace EssSharp Assembly EssSharp.dll Represents a user session for a given server. public class EssUserSession : IEssUserSession Inheritance object EssUserSession Implements IEssUserSession Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Token Returns the token associated with this user session. public virtual string Token { get; } Property Value string Remarks The token is only available if explicitly captured. UserId Returns the user ID associated with this user session. public virtual string UserId { get; } Property Value string"
  },
  "api/EssSharp/EssSharp.EssUtility.html": {
    "href": "api/EssSharp/EssSharp.EssUtility.html",
    "title": "Class EssUtility",
    "keywords": "Class EssUtility Namespace EssSharp Assembly EssSharp.dll public class EssUtility : EssObject, IEssUtility, IEssObject Inheritance object EssObject EssUtility Implements IEssUtility IEssObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsDownloadable Returns whether the utility can be downloaded. public bool IsDownloadable { get; } Property Value bool A bool that represents whether the utility can be downloaded. Remarks Returns false if the links collection is null or empty. Name The name of the thing. public override string Name { get; } Property Value string Server Returns the server that contains this job. public IEssServer Server { get; } Property Value IEssServer The server that contains this job. Type The type of the thing. public override EssType Type { get; } Property Value EssType Url Returns a url from which the utility can be downloaded. public Uri Url { get; } Property Value Uri A Uri that represents the location of the utility. Remarks Returns the first href from the links collection or the external resource url. Methods Download() Downloads the utility. public Stream Download() Returns Stream A Stream containing the utility content. DownloadAsync(CancellationToken) Asynchronously downloads the utility. public Task<Stream> DownloadAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<Stream> A Stream containing the utility content."
  },
  "api/EssSharp/EssSharp.html": {
    "href": "api/EssSharp/EssSharp.html",
    "title": "Namespace EssSharp",
    "keywords": "Namespace EssSharp Classes EssAbout EssAboutInstance EssApplication EssApplicationConfiguration EssApplicationDatasource EssApplicationDatasourceConnection EssApplicationVariable Represents a variable that is specific to a particular application. EssCalcScript EssCube EssCubeVariable Represents a variable that is specific to a particular cube. EssDatasource EssDatasourceConnection EssDimension EssDrillthroughReport EssFile EssFolder EssGrid EssGroup EssJob EssLock EssLockBlock EssLockObject EssMaxlScript EssMdxScript EssObject EssReportScript EssScript EssServer EssServerFactory A factory for creating new EssServer instances. EssServerVariable Represents a variable that is specific to a particular server. EssSession EssUrl EssUser EssUserSession Represents a user session for a given server. EssUtility"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE.",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}