/*
 * The REST API for Oracle Essbase enables you to automate management of Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using EssSharp.Client;
using EssSharp.Api;
// uncomment below to import models
//using EssSharp.Model;

namespace EssSharp.Test.Api
{
    /// <summary>
    ///  Class for testing PropertiesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PropertiesApiTests : IDisposable
    {
        private PropertiesApi instance;

        public PropertiesApiTests()
        {
            instance = new PropertiesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PropertiesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PropertiesApi
            //Assert.IsType<PropertiesApi>(instance);
        }

        /// <summary>
        /// Test PropertiesAddProperty
        /// </summary>
        [Fact]
        public void PropertiesAddPropertyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PropertyEntry body = null;
            //var response = instance.PropertiesAddProperty(body);
            //Assert.IsType<PropertyEntry>(response);
        }

        /// <summary>
        /// Test PropertiesDeleteProperty
        /// </summary>
        [Fact]
        public void PropertiesDeletePropertyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string propertyName = null;
            //var response = instance.PropertiesDeleteProperty(propertyName);
            //Assert.IsType<PropertyEntry>(response);
        }

        /// <summary>
        /// Test PropertiesGetProperties
        /// </summary>
        [Fact]
        public void PropertiesGetPropertiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.PropertiesGetProperties();
            //Assert.IsType<List<PropertyList>>(response);
        }

        /// <summary>
        /// Test PropertiesGetProperty
        /// </summary>
        [Fact]
        public void PropertiesGetPropertyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string propertyName = null;
            //var response = instance.PropertiesGetProperty(propertyName);
            //Assert.IsType<PropertyEntry>(response);
        }

        /// <summary>
        /// Test PropertiesSetProperties
        /// </summary>
        [Fact]
        public void PropertiesSetPropertiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<PropertyEntry> body = null;
            //var response = instance.PropertiesSetProperties(body);
            //Assert.IsType<PropertyEntry>(response);
        }

        /// <summary>
        /// Test PropertiesSetProperty
        /// </summary>
        [Fact]
        public void PropertiesSetPropertyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string propertyName = null;
            //PropertyEntry body = null;
            //var response = instance.PropertiesSetProperty(propertyName, body);
            //Assert.IsType<PropertyEntry>(response);
        }
    }
}
