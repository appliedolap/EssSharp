/*
 * The REST API for Oracle Essbase enables you to automate management of Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using EssSharp.Client;
using EssSharp.Api;
// uncomment below to import models
//using EssSharp.Model;

namespace EssSharp.Test.Api
{
    /// <summary>
    ///  Class for testing ScenariosApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ScenariosApiTests : IDisposable
    {
        private ScenariosApi instance;

        public ScenariosApiTests()
        {
            instance = new ScenariosApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ScenariosApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ScenariosApi
            //Assert.IsType<ScenariosApi>(instance);
        }

        /// <summary>
        /// Test ScenariosAddApprover
        /// </summary>
        [Fact]
        public void ScenariosAddApproverTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long scenarioId = null;
            //ApproverBean body = null;
            //instance.ScenariosAddApprover(scenarioId, body);
        }

        /// <summary>
        /// Test ScenariosAddComment
        /// </summary>
        [Fact]
        public void ScenariosAddCommentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long scenarioId = null;
            //CommentBean body = null;
            //var response = instance.ScenariosAddComment(scenarioId, body);
            //Assert.IsType<CommentBean>(response);
        }

        /// <summary>
        /// Test ScenariosAddParticipant
        /// </summary>
        [Fact]
        public void ScenariosAddParticipantTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long scenarioId = null;
            //ParticipantBean body = null;
            //instance.ScenariosAddParticipant(scenarioId, body);
        }

        /// <summary>
        /// Test ScenariosCreate
        /// </summary>
        [Fact]
        public void ScenariosCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ScenarioBean body = null;
            //var response = instance.ScenariosCreate(body);
            //Assert.IsType<ScenarioBean>(response);
        }

        /// <summary>
        /// Test ScenariosDelete
        /// </summary>
        [Fact]
        public void ScenariosDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //instance.ScenariosDelete(id);
        }

        /// <summary>
        /// Test ScenariosDeleteApprover
        /// </summary>
        [Fact]
        public void ScenariosDeleteApproverTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long scenarioId = null;
            //string userId = null;
            //instance.ScenariosDeleteApprover(scenarioId, userId);
        }

        /// <summary>
        /// Test ScenariosDeleteComment
        /// </summary>
        [Fact]
        public void ScenariosDeleteCommentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long scenarioId = null;
            //long commentId = null;
            //instance.ScenariosDeleteComment(scenarioId, commentId);
        }

        /// <summary>
        /// Test ScenariosDeleteParticipant
        /// </summary>
        [Fact]
        public void ScenariosDeleteParticipantTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long scenarioId = null;
            //string userId = null;
            //instance.ScenariosDeleteParticipant(scenarioId, userId);
        }

        /// <summary>
        /// Test ScenariosGet
        /// </summary>
        [Fact]
        public void ScenariosGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //string expand = null;
            //var response = instance.ScenariosGet(id, expand);
            //Assert.IsType<ScenarioBean>(response);
        }

        /// <summary>
        /// Test ScenariosGetApprovers
        /// </summary>
        [Fact]
        public void ScenariosGetApproversTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long scenarioId = null;
            //var response = instance.ScenariosGetApprovers(scenarioId);
            //Assert.IsType<ApproverListResponse>(response);
        }

        /// <summary>
        /// Test ScenariosGetChangeData
        /// </summary>
        [Fact]
        public void ScenariosGetChangeDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //var response = instance.ScenariosGetChangeData(id);
            //Assert.IsType<ScenarioChangesListResponse>(response);
        }

        /// <summary>
        /// Test ScenariosGetComment
        /// </summary>
        [Fact]
        public void ScenariosGetCommentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long scenarioId = null;
            //long commentId = null;
            //var response = instance.ScenariosGetComment(scenarioId, commentId);
            //Assert.IsType<CommentBean>(response);
        }

        /// <summary>
        /// Test ScenariosGetComments
        /// </summary>
        [Fact]
        public void ScenariosGetCommentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long scenarioId = null;
            //var response = instance.ScenariosGetComments(scenarioId);
            //Assert.IsType<CommentListResponse>(response);
        }

        /// <summary>
        /// Test ScenariosGetParticipants
        /// </summary>
        [Fact]
        public void ScenariosGetParticipantsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long scenarioId = null;
            //var response = instance.ScenariosGetParticipants(scenarioId);
            //Assert.IsType<ParticipantListResponse>(response);
        }

        /// <summary>
        /// Test ScenariosGetRegisteredCubes
        /// </summary>
        [Fact]
        public void ScenariosGetRegisteredCubesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ScenariosGetRegisteredCubes();
            //Assert.IsType<ScenarioCubesList>(response);
        }

        /// <summary>
        /// Test ScenariosGetScenarios
        /// </summary>
        [Fact]
        public void ScenariosGetScenariosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //string role = null;
            //bool? overdue = null;
            //string state = null;
            //string application = null;
            //string database = null;
            //bool? approvalPending = null;
            //long? offset = null;
            //long? limit = null;
            //string orderBy = null;
            //bool? count = null;
            //var response = instance.ScenariosGetScenarios(filter, role, overdue, state, application, database, approvalPending, offset, limit, orderBy, count);
            //Assert.IsType<ScenarioCollectionResponse>(response);
        }

        /// <summary>
        /// Test ScenariosGetScripts
        /// </summary>
        [Fact]
        public void ScenariosGetScriptsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long scenarioId = null;
            //var response = instance.ScenariosGetScripts(scenarioId);
            //Assert.IsType<ScriptListResponse>(response);
        }

        /// <summary>
        /// Test ScenariosPatch
        /// </summary>
        [Fact]
        public void ScenariosPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //ScenarioEditBean body = null;
            //var response = instance.ScenariosPatch(id, body);
            //Assert.IsType<ScenarioBean>(response);
        }

        /// <summary>
        /// Test ScenariosPerformAction
        /// </summary>
        [Fact]
        public void ScenariosPerformActionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //string action = null;
            //bool? overwrite = null;
            //ScenarioActionPayload body = null;
            //var response = instance.ScenariosPerformAction(id, action, overwrite, body);
            //Assert.IsType<ScenarioBean>(response);
        }

        /// <summary>
        /// Test ScenariosUpdate
        /// </summary>
        [Fact]
        public void ScenariosUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //ScenarioBean body = null;
            //var response = instance.ScenariosUpdate(id, body);
            //Assert.IsType<ScenarioBean>(response);
        }

        /// <summary>
        /// Test ScenariosUpdateComment
        /// </summary>
        [Fact]
        public void ScenariosUpdateCommentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long scenarioId = null;
            //long commentId = null;
            //CommentBean body = null;
            //instance.ScenariosUpdateComment(scenarioId, commentId, body);
        }

        /// <summary>
        /// Test ScenariosUpdateScript
        /// </summary>
        [Fact]
        public void ScenariosUpdateScriptTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long scenarioId = null;
            //string scriptType = null;
            //ScriptBean body = null;
            //instance.ScenariosUpdateScript(scenarioId, scriptType, body);
        }
    }
}
