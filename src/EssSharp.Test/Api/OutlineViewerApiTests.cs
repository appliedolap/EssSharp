/*
 * The REST API for Oracle Essbase enables you to automate management of Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using EssSharp.Client;
using EssSharp.Api;
// uncomment below to import models
//using EssSharp.Model;

namespace EssSharp.Test.Api
{
    /// <summary>
    ///  Class for testing OutlineViewerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OutlineViewerApiTests : IDisposable
    {
        private OutlineViewerApi instance;

        public OutlineViewerApiTests()
        {
            instance = new OutlineViewerApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OutlineViewerApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' OutlineViewerApi
            //Assert.IsType<OutlineViewerApi>(instance);
        }

        /// <summary>
        /// Test OutlineGetAllSmartList
        /// </summary>
        [Fact]
        public void OutlineGetAllSmartListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string app = null;
            //string cube = null;
            //string connection = null;
            //string applicationNameForConnection = null;
            //string accept = null;
            //instance.OutlineGetAllSmartList(app, cube, connection, applicationNameForConnection, accept);
        }

        /// <summary>
        /// Test OutlineGetAncestorsMemberInfo
        /// </summary>
        [Fact]
        public void OutlineGetAncestorsMemberInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string app = null;
            //string cube = null;
            //string memberUniqueName = null;
            //string connection = null;
            //string applicationNameForConnection = null;
            //string fields = null;
            //var response = instance.OutlineGetAncestorsMemberInfo(app, cube, memberUniqueName, connection, applicationNameForConnection, fields);
            //Assert.IsType<MemberBean>(response);
        }

        /// <summary>
        /// Test OutlineGetDescendantsCount
        /// </summary>
        [Fact]
        public void OutlineGetDescendantsCountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string app = null;
            //string cube = null;
            //string memberUniqueName = null;
            //string connection = null;
            //string applicationNameForConnection = null;
            //var response = instance.OutlineGetDescendantsCount(app, cube, memberUniqueName, connection, applicationNameForConnection);
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test OutlineGetMemberInfo
        /// </summary>
        [Fact]
        public void OutlineGetMemberInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string app = null;
            //string cube = null;
            //string memberUniqueName = null;
            //string connection = null;
            //string applicationNameForConnection = null;
            //string fields = null;
            //var response = instance.OutlineGetMemberInfo(app, cube, memberUniqueName, connection, applicationNameForConnection, fields);
            //Assert.IsType<MemberBean>(response);
        }

        /// <summary>
        /// Test OutlineGetMembers
        /// </summary>
        [Fact]
        public void OutlineGetMembersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string app = null;
            //string cube = null;
            //string connection = null;
            //string applicationNameForConnection = null;
            //string keyword = null;
            //bool? matchWholeWord = null;
            //string parent = null;
            //string parentUniqueName = null;
            //string isMbrId = null;
            //string fields = null;
            //int? offset = null;
            //int? limit = null;
            //var response = instance.OutlineGetMembers(app, cube, connection, applicationNameForConnection, keyword, matchWholeWord, parent, parentUniqueName, isMbrId, fields, offset, limit);
            //Assert.IsType<MembersList>(response);
        }

        /// <summary>
        /// Test OutlineGetOutlineXML
        /// </summary>
        [Fact]
        public void OutlineGetOutlineXMLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string app = null;
            //string cube = null;
            //string connection = null;
            //string applicationNameForConnection = null;
            //ExportOptions body = null;
            //instance.OutlineGetOutlineXML(app, cube, connection, applicationNameForConnection, body);
        }
    }
}
