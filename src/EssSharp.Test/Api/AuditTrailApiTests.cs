/*
 * The REST API for Oracle Essbase enables you to automate management of Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using EssSharp.Client;
using EssSharp.Api;

namespace EssSharp.Test.Api
{
    /// <summary>
    ///  Class for testing AuditTrailApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AuditTrailApiTests : IDisposable
    {
        private AuditTrailApi instance;

        public AuditTrailApiTests()
        {
            instance = new AuditTrailApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AuditTrailApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AuditTrailApi
            //Assert.IsType<AuditTrailApi>(instance);
        }

        /// <summary>
        /// Test AuditTrailGetDataAudit
        /// </summary>
        [Fact]
        public void AuditTrailGetDataAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string application = null;
            //string database = null;
            //long? fetchCount = null;
            //var response = instance.AuditTrailGetDataAudit(application, database, fetchCount);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test AuditTrailPurge
        /// </summary>
        [Fact]
        public void AuditTrailPurgeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string application = null;
            //string database = null;
            //long? olderthan = null;
            //instance.AuditTrailPurge(application, database, olderthan);
        }
    }
}
