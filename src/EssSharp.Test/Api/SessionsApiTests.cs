/*
 * The REST API for Oracle Essbase enables you to automate management of Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using EssSharp.Client;
using EssSharp.Api;
// uncomment below to import models
//using EssSharp.Model;

namespace EssSharp.Test.Api
{
    /// <summary>
    ///  Class for testing SessionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SessionsApiTests : IDisposable
    {
        private SessionsApi instance;

        public SessionsApiTests()
        {
            instance = new SessionsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SessionsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SessionsApi
            //Assert.IsType<SessionsApi>(instance);
        }

        /// <summary>
        /// Test SessionsDeleteAllActiveSessions
        /// </summary>
        [Fact]
        public void SessionsDeleteAllActiveSessionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string application = null;
            //string database = null;
            //string userId = null;
            //bool? disconnect = null;
            //instance.SessionsDeleteAllActiveSessions(application, database, userId, disconnect);
        }

        /// <summary>
        /// Test SessionsDeleteSessionWithId
        /// </summary>
        [Fact]
        public void SessionsDeleteSessionWithIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long sessionId = null;
            //bool? disconnect = null;
            //instance.SessionsDeleteSessionWithId(sessionId, disconnect);
        }

        /// <summary>
        /// Test SessionsGetAllActiveSessions
        /// </summary>
        [Fact]
        public void SessionsGetAllActiveSessionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string application = null;
            //string database = null;
            //string userId = null;
            //var response = instance.SessionsGetAllActiveSessions(application, database, userId);
            //Assert.IsType<List<SessionAttributes>>(response);
        }
    }
}
