/*
 * The REST API for Oracle Essbase enables you to automate management of Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using EssSharp.Client;
using EssSharp.Api;
// uncomment below to import models
//using EssSharp.Model;

namespace EssSharp.Test.Api
{
    /// <summary>
    ///  Class for testing UsersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UsersApiTests : IDisposable
    {
        private UsersApi instance;

        public UsersApiTests()
        {
            instance = new UsersApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UsersApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' UsersApi
            //Assert.IsType<UsersApi>(instance);
        }

        /// <summary>
        /// Test UsersAdd
        /// </summary>
        [Fact]
        public void UsersAddTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserBean body = null;
            //var response = instance.UsersAdd(body);
            //Assert.IsType<UserBean>(response);
        }

        /// <summary>
        /// Test UsersDelete
        /// </summary>
        [Fact]
        public void UsersDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.UsersDelete(id);
        }

        /// <summary>
        /// Test UsersDeleteUsers
        /// </summary>
        [Fact]
        public void UsersDeleteUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UsersDeleteUsers();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UsersGet
        /// </summary>
        [Fact]
        public void UsersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.UsersGet(id);
            //Assert.IsType<UserBean>(response);
        }

        /// <summary>
        /// Test UsersPUT
        /// </summary>
        [Fact]
        public void UsersPUTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //UserBean body = null;
            //var response = instance.UsersPUT(id, body);
            //Assert.IsType<UserBean>(response);
        }

        /// <summary>
        /// Test UsersSearch
        /// </summary>
        [Fact]
        public void UsersSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? limit = null;
            //string expand = null;
            //var response = instance.UsersSearch(filter, limit, expand);
            //Assert.IsType<Users>(response);
        }
    }
}
