/*
 * The REST API for Oracle Essbase enables you to automate management of Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using EssSharp.Api;
using EssSharp.Model;
using EssSharp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace EssSharp.Test.Model
{
    /// <summary>
    ///  Class for testing CompactDesignation
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CompactDesignationTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CompactDesignation
        //private CompactDesignation instance;

        public CompactDesignationTests()
        {
            // TODO uncomment below to create an instance of CompactDesignation
            //instance = new CompactDesignation();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CompactDesignation
        /// </summary>
        [Fact]
        public void CompactDesignationInstanceTest()
        {
            // TODO uncomment below to test "IsType" CompactDesignation
            //Assert.IsType<CompactDesignation>(instance);
        }


        /// <summary>
        /// Test the property 'File'
        /// </summary>
        [Fact]
        public void FileTest()
        {
            // TODO unit test for the property 'File'
        }
        /// <summary>
        /// Test the property 'ExcelSheetName'
        /// </summary>
        [Fact]
        public void ExcelSheetNameTest()
        {
            // TODO unit test for the property 'ExcelSheetName'
        }
        /// <summary>
        /// Test the property 'ColumnOffset'
        /// </summary>
        [Fact]
        public void ColumnOffsetTest()
        {
            // TODO unit test for the property 'ColumnOffset'
        }
        /// <summary>
        /// Test the property 'BadRowListString'
        /// </summary>
        [Fact]
        public void BadRowListStringTest()
        {
            // TODO unit test for the property 'BadRowListString'
        }
        /// <summary>
        /// Test the property 'Nr'
        /// </summary>
        [Fact]
        public void NrTest()
        {
            // TODO unit test for the property 'Nr'
        }
        /// <summary>
        /// Test the property 'Nrh'
        /// </summary>
        [Fact]
        public void NrhTest()
        {
            // TODO unit test for the property 'Nrh'
        }
        /// <summary>
        /// Test the property 'CompactDesignationColumn'
        /// </summary>
        [Fact]
        public void CompactDesignationColumnTest()
        {
            // TODO unit test for the property 'CompactDesignationColumn'
        }
        /// <summary>
        /// Test the property 'BsoLimitsExceeded'
        /// </summary>
        [Fact]
        public void BsoLimitsExceededTest()
        {
            // TODO unit test for the property 'BsoLimitsExceeded'
        }
        /// <summary>
        /// Test the property 'FastAnalysis'
        /// </summary>
        [Fact]
        public void FastAnalysisTest()
        {
            // TODO unit test for the property 'FastAnalysis'
        }
        /// <summary>
        /// Test the property 'MeasureDimensionName'
        /// </summary>
        [Fact]
        public void MeasureDimensionNameTest()
        {
            // TODO unit test for the property 'MeasureDimensionName'
        }
        /// <summary>
        /// Test the property 'DimDesignationMode'
        /// </summary>
        [Fact]
        public void DimDesignationModeTest()
        {
            // TODO unit test for the property 'DimDesignationMode'
        }
        /// <summary>
        /// Test the property 'NamingPriority'
        /// </summary>
        [Fact]
        public void NamingPriorityTest()
        {
            // TODO unit test for the property 'NamingPriority'
        }
        /// <summary>
        /// Test the property 'DateColumnId'
        /// </summary>
        [Fact]
        public void DateColumnIdTest()
        {
            // TODO unit test for the property 'DateColumnId'
        }
        /// <summary>
        /// Test the property 'DateFormatString'
        /// </summary>
        [Fact]
        public void DateFormatStringTest()
        {
            // TODO unit test for the property 'DateFormatString'
        }
        /// <summary>
        /// Test the property 'DateDimString'
        /// </summary>
        [Fact]
        public void DateDimStringTest()
        {
            // TODO unit test for the property 'DateDimString'
        }
        /// <summary>
        /// Test the property 'DateDimensionLeaves'
        /// </summary>
        [Fact]
        public void DateDimensionLeavesTest()
        {
            // TODO unit test for the property 'DateDimensionLeaves'
        }
        /// <summary>
        /// Test the property 'MaxDate'
        /// </summary>
        [Fact]
        public void MaxDateTest()
        {
            // TODO unit test for the property 'MaxDate'
        }
        /// <summary>
        /// Test the property 'MinDate'
        /// </summary>
        [Fact]
        public void MinDateTest()
        {
            // TODO unit test for the property 'MinDate'
        }
        /// <summary>
        /// Test the property 'TableName'
        /// </summary>
        [Fact]
        public void TableNameTest()
        {
            // TODO unit test for the property 'TableName'
        }
        /// <summary>
        /// Test the property 'DimCompactDesignationList'
        /// </summary>
        [Fact]
        public void DimCompactDesignationListTest()
        {
            // TODO unit test for the property 'DimCompactDesignationList'
        }
        /// <summary>
        /// Test the property 'Query'
        /// </summary>
        [Fact]
        public void QueryTest()
        {
            // TODO unit test for the property 'Query'
        }
        /// <summary>
        /// Test the property 'ExcelRowCount'
        /// </summary>
        [Fact]
        public void ExcelRowCountTest()
        {
            // TODO unit test for the property 'ExcelRowCount'
        }

    }

}
