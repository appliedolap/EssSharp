/*
 * The REST API for Oracle Essbase enables you to automate management of Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using EssSharp.Model;
using EssSharp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace EssSharp.Test.Model
{
    /// <summary>
    ///  Class for testing RuntimeStatistics
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RuntimeStatisticsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for RuntimeStatistics
        //private RuntimeStatistics instance;

        public RuntimeStatisticsTests()
        {
            // TODO uncomment below to create an instance of RuntimeStatistics
            //instance = new RuntimeStatistics();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RuntimeStatistics
        /// </summary>
        [Fact]
        public void RuntimeStatisticsInstanceTest()
        {
            // TODO uncomment below to test "IsType" RuntimeStatistics
            //Assert.IsType<RuntimeStatistics>(instance);
        }


        /// <summary>
        /// Test the property 'CacheHitRatio'
        /// </summary>
        [Fact]
        public void CacheHitRatioTest()
        {
            // TODO unit test for the property 'CacheHitRatio'
        }
        /// <summary>
        /// Test the property 'CurrentCacheSize'
        /// </summary>
        [Fact]
        public void CurrentCacheSizeTest()
        {
            // TODO unit test for the property 'CurrentCacheSize'
        }
        /// <summary>
        /// Test the property 'CurrentCacheSizeLimit'
        /// </summary>
        [Fact]
        public void CurrentCacheSizeLimitTest()
        {
            // TODO unit test for the property 'CurrentCacheSizeLimit'
        }
        /// <summary>
        /// Test the property 'PageReadsSinceLastStartup'
        /// </summary>
        [Fact]
        public void PageReadsSinceLastStartupTest()
        {
            // TODO unit test for the property 'PageReadsSinceLastStartup'
        }
        /// <summary>
        /// Test the property 'PageWritesSinceLastStartup'
        /// </summary>
        [Fact]
        public void PageWritesSinceLastStartupTest()
        {
            // TODO unit test for the property 'PageWritesSinceLastStartup'
        }
        /// <summary>
        /// Test the property 'PageSize'
        /// </summary>
        [Fact]
        public void PageSizeTest()
        {
            // TODO unit test for the property 'PageSize'
        }
        /// <summary>
        /// Test the property 'DiskSpaceAllocatedForData'
        /// </summary>
        [Fact]
        public void DiskSpaceAllocatedForDataTest()
        {
            // TODO unit test for the property 'DiskSpaceAllocatedForData'
        }
        /// <summary>
        /// Test the property 'DiskSpaceUsedByData'
        /// </summary>
        [Fact]
        public void DiskSpaceUsedByDataTest()
        {
            // TODO unit test for the property 'DiskSpaceUsedByData'
        }
        /// <summary>
        /// Test the property 'TemporaryDiskSpaceAllocated'
        /// </summary>
        [Fact]
        public void TemporaryDiskSpaceAllocatedTest()
        {
            // TODO unit test for the property 'TemporaryDiskSpaceAllocated'
        }
        /// <summary>
        /// Test the property 'TemporaryDiskSpaceUsed'
        /// </summary>
        [Fact]
        public void TemporaryDiskSpaceUsedTest()
        {
            // TODO unit test for the property 'TemporaryDiskSpaceUsed'
        }
        /// <summary>
        /// Test the property 'HitRatioOnIndexCache'
        /// </summary>
        [Fact]
        public void HitRatioOnIndexCacheTest()
        {
            // TODO unit test for the property 'HitRatioOnIndexCache'
        }
        /// <summary>
        /// Test the property 'HitRatioOnDataCache'
        /// </summary>
        [Fact]
        public void HitRatioOnDataCacheTest()
        {
            // TODO unit test for the property 'HitRatioOnDataCache'
        }
        /// <summary>
        /// Test the property 'NumberOfIndexPageReads'
        /// </summary>
        [Fact]
        public void NumberOfIndexPageReadsTest()
        {
            // TODO unit test for the property 'NumberOfIndexPageReads'
        }
        /// <summary>
        /// Test the property 'NumberOfIndexPageWrites'
        /// </summary>
        [Fact]
        public void NumberOfIndexPageWritesTest()
        {
            // TODO unit test for the property 'NumberOfIndexPageWrites'
        }
        /// <summary>
        /// Test the property 'NumberOfDataBlockReads'
        /// </summary>
        [Fact]
        public void NumberOfDataBlockReadsTest()
        {
            // TODO unit test for the property 'NumberOfDataBlockReads'
        }
        /// <summary>
        /// Test the property 'NumberOfDataBlockWrites'
        /// </summary>
        [Fact]
        public void NumberOfDataBlockWritesTest()
        {
            // TODO unit test for the property 'NumberOfDataBlockWrites'
        }
        /// <summary>
        /// Test the property 'HitRatioOnDataFileCache'
        /// </summary>
        [Fact]
        public void HitRatioOnDataFileCacheTest()
        {
            // TODO unit test for the property 'HitRatioOnDataFileCache'
        }

    }

}
