/*
 * The REST API for Oracle Essbase enables you to automate management of Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using EssSharp.Model;
using EssSharp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace EssSharp.Test.Model
{
    /// <summary>
    ///  Class for testing NamedQueriesPreferences
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class NamedQueriesPreferencesTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for NamedQueriesPreferences
        //private NamedQueriesPreferences instance;

        public NamedQueriesPreferencesTests()
        {
            // TODO uncomment below to create an instance of NamedQueriesPreferences
            //instance = new NamedQueriesPreferences();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of NamedQueriesPreferences
        /// </summary>
        [Fact]
        public void NamedQueriesPreferencesInstanceTest()
        {
            // TODO uncomment below to test "IsType" NamedQueriesPreferences
            //Assert.IsType<NamedQueriesPreferences>(instance);
        }


        /// <summary>
        /// Test the property 'Dataless'
        /// </summary>
        [Fact]
        public void DatalessTest()
        {
            // TODO unit test for the property 'Dataless'
        }
        /// <summary>
        /// Test the property 'HideRestrictedData'
        /// </summary>
        [Fact]
        public void HideRestrictedDataTest()
        {
            // TODO unit test for the property 'HideRestrictedData'
        }
        /// <summary>
        /// Test the property 'CellAttributes'
        /// </summary>
        [Fact]
        public void CellAttributesTest()
        {
            // TODO unit test for the property 'CellAttributes'
        }
        /// <summary>
        /// Test the property 'FormatString'
        /// </summary>
        [Fact]
        public void FormatStringTest()
        {
            // TODO unit test for the property 'FormatString'
        }
        /// <summary>
        /// Test the property 'FormatValues'
        /// </summary>
        [Fact]
        public void FormatValuesTest()
        {
            // TODO unit test for the property 'FormatValues'
        }
        /// <summary>
        /// Test the property 'MeaninglessCells'
        /// </summary>
        [Fact]
        public void MeaninglessCellsTest()
        {
            // TODO unit test for the property 'MeaninglessCells'
        }
        /// <summary>
        /// Test the property 'TextList'
        /// </summary>
        [Fact]
        public void TextListTest()
        {
            // TODO unit test for the property 'TextList'
        }
        /// <summary>
        /// Test the property 'UrlDrillThrough'
        /// </summary>
        [Fact]
        public void UrlDrillThroughTest()
        {
            // TODO unit test for the property 'UrlDrillThrough'
        }
        /// <summary>
        /// Test the property 'MemberIdentifierType'
        /// </summary>
        [Fact]
        public void MemberIdentifierTypeTest()
        {
            // TODO unit test for the property 'MemberIdentifierType'
        }

    }

}
