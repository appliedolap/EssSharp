/*
 * The REST API for Oracle Essbase enables you to automate management of Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EssSharp.Client.OpenAPIDateConverter;

namespace EssSharp.Model
{
    /// <summary>
    /// CommitFilePartUploadResponse
    /// </summary>
    [DataContract(Name = "CommitFilePartUploadResponse")]
    public partial class CommitFilePartUploadResponse : IEquatable<CommitFilePartUploadResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CommitFilePartUploadResponse" /> class.
        /// </summary>
        /// <param name="opcRequestId">opcRequestId.</param>
        /// <param name="opcMultipartMd5">opcMultipartMd5.</param>
        /// <param name="versionId">versionId.</param>
        /// <param name="etag">etag.</param>
        /// <param name="lastModified">lastModified.</param>
        public CommitFilePartUploadResponse(string opcRequestId = default(string), string opcMultipartMd5 = default(string), string versionId = default(string), string etag = default(string), DateTime lastModified = default(DateTime))
        {
            this.OpcRequestId = opcRequestId;
            this.OpcMultipartMd5 = opcMultipartMd5;
            this.VersionId = versionId;
            this.Etag = etag;
            this.LastModified = lastModified;
        }

        /// <summary>
        /// Gets or Sets OpcRequestId
        /// </summary>
        [DataMember(Name = "opcRequestId", EmitDefaultValue = false)]
        public string OpcRequestId { get; set; }

        /// <summary>
        /// Gets or Sets OpcMultipartMd5
        /// </summary>
        [DataMember(Name = "opcMultipartMd5", EmitDefaultValue = false)]
        public string OpcMultipartMd5 { get; set; }

        /// <summary>
        /// Gets or Sets VersionId
        /// </summary>
        [DataMember(Name = "versionId", EmitDefaultValue = false)]
        public string VersionId { get; set; }

        /// <summary>
        /// Gets or Sets Etag
        /// </summary>
        [DataMember(Name = "etag", EmitDefaultValue = false)]
        public string Etag { get; set; }

        /// <summary>
        /// Gets or Sets LastModified
        /// </summary>
        [DataMember(Name = "lastModified", EmitDefaultValue = false)]
        public DateTime LastModified { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CommitFilePartUploadResponse {\n");
            sb.Append("  OpcRequestId: ").Append(OpcRequestId).Append("\n");
            sb.Append("  OpcMultipartMd5: ").Append(OpcMultipartMd5).Append("\n");
            sb.Append("  VersionId: ").Append(VersionId).Append("\n");
            sb.Append("  Etag: ").Append(Etag).Append("\n");
            sb.Append("  LastModified: ").Append(LastModified).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CommitFilePartUploadResponse);
        }

        /// <summary>
        /// Returns true if CommitFilePartUploadResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of CommitFilePartUploadResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CommitFilePartUploadResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.OpcRequestId == input.OpcRequestId ||
                    (this.OpcRequestId != null &&
                    this.OpcRequestId.Equals(input.OpcRequestId))
                ) && 
                (
                    this.OpcMultipartMd5 == input.OpcMultipartMd5 ||
                    (this.OpcMultipartMd5 != null &&
                    this.OpcMultipartMd5.Equals(input.OpcMultipartMd5))
                ) && 
                (
                    this.VersionId == input.VersionId ||
                    (this.VersionId != null &&
                    this.VersionId.Equals(input.VersionId))
                ) && 
                (
                    this.Etag == input.Etag ||
                    (this.Etag != null &&
                    this.Etag.Equals(input.Etag))
                ) && 
                (
                    this.LastModified == input.LastModified ||
                    (this.LastModified != null &&
                    this.LastModified.Equals(input.LastModified))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OpcRequestId != null)
                {
                    hashCode = (hashCode * 59) + this.OpcRequestId.GetHashCode();
                }
                if (this.OpcMultipartMd5 != null)
                {
                    hashCode = (hashCode * 59) + this.OpcMultipartMd5.GetHashCode();
                }
                if (this.VersionId != null)
                {
                    hashCode = (hashCode * 59) + this.VersionId.GetHashCode();
                }
                if (this.Etag != null)
                {
                    hashCode = (hashCode * 59) + this.Etag.GetHashCode();
                }
                if (this.LastModified != null)
                {
                    hashCode = (hashCode * 59) + this.LastModified.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
