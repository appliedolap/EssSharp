/*
 * The REST API for Oracle Essbase enables you to automate management of Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EssSharp.Client.OpenAPIDateConverter;

namespace EssSharp.Model
{
    /// <summary>
    /// ApplicationProvisionReportItem
    /// </summary>
    [DataContract(Name = "ApplicationProvisionReportItem")]
    public partial class ApplicationProvisionReportItem : IEquatable<ApplicationProvisionReportItem>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApplicationProvisionReportItem" /> class.
        /// </summary>
        /// <param name="name">name.</param>
        /// <param name="roles">roles.</param>
        /// <param name="filters">filters.</param>
        /// <param name="scripts">scripts.</param>
        public ApplicationProvisionReportItem(string name = default(string), ProvisionReportItemList roles = default(ProvisionReportItemList), DatabaseProvisionReportItemList filters = default(DatabaseProvisionReportItemList), DatabaseProvisionReportItemList scripts = default(DatabaseProvisionReportItemList))
        {
            this.Name = name;
            this.Roles = roles;
            this.Filters = filters;
            this.Scripts = scripts;
        }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Roles
        /// </summary>
        [DataMember(Name = "roles", EmitDefaultValue = false)]
        public ProvisionReportItemList Roles { get; set; }

        /// <summary>
        /// Gets or Sets Filters
        /// </summary>
        [DataMember(Name = "filters", EmitDefaultValue = false)]
        public DatabaseProvisionReportItemList Filters { get; set; }

        /// <summary>
        /// Gets or Sets Scripts
        /// </summary>
        [DataMember(Name = "scripts", EmitDefaultValue = false)]
        public DatabaseProvisionReportItemList Scripts { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ApplicationProvisionReportItem {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Roles: ").Append(Roles).Append("\n");
            sb.Append("  Filters: ").Append(Filters).Append("\n");
            sb.Append("  Scripts: ").Append(Scripts).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApplicationProvisionReportItem);
        }

        /// <summary>
        /// Returns true if ApplicationProvisionReportItem instances are equal
        /// </summary>
        /// <param name="input">Instance of ApplicationProvisionReportItem to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApplicationProvisionReportItem input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Roles == input.Roles ||
                    (this.Roles != null &&
                    this.Roles.Equals(input.Roles))
                ) && 
                (
                    this.Filters == input.Filters ||
                    (this.Filters != null &&
                    this.Filters.Equals(input.Filters))
                ) && 
                (
                    this.Scripts == input.Scripts ||
                    (this.Scripts != null &&
                    this.Scripts.Equals(input.Scripts))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.Roles != null)
                {
                    hashCode = (hashCode * 59) + this.Roles.GetHashCode();
                }
                if (this.Filters != null)
                {
                    hashCode = (hashCode * 59) + this.Filters.GetHashCode();
                }
                if (this.Scripts != null)
                {
                    hashCode = (hashCode * 59) + this.Scripts.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
