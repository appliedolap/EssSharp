/*
 * The REST API for Oracle Essbase enables you to automate management of Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EssSharp.Client.OpenAPIDateConverter;

namespace EssSharp.Model
{
    /// <summary>
    /// AppSecuritySettings
    /// </summary>
    [DataContract(Name = "AppSecuritySettings")]
    public partial class AppSecuritySettings : IEquatable<AppSecuritySettings>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AppSecuritySettings" /> class.
        /// </summary>
        /// <param name="allowCommands">allowCommands.</param>
        /// <param name="allowConnects">allowConnects.</param>
        /// <param name="allowUpdates">allowUpdates.</param>
        public AppSecuritySettings(bool allowCommands = default(bool), bool allowConnects = default(bool), bool allowUpdates = default(bool))
        {
            this.AllowCommands = allowCommands;
            this.AllowConnects = allowConnects;
            this.AllowUpdates = allowUpdates;
        }

        /// <summary>
        /// Gets or Sets AllowCommands
        /// </summary>
        [DataMember(Name = "allowCommands", EmitDefaultValue = true)]
        public bool AllowCommands { get; set; }

        /// <summary>
        /// Gets or Sets AllowConnects
        /// </summary>
        [DataMember(Name = "allowConnects", EmitDefaultValue = true)]
        public bool AllowConnects { get; set; }

        /// <summary>
        /// Gets or Sets AllowUpdates
        /// </summary>
        [DataMember(Name = "allowUpdates", EmitDefaultValue = true)]
        public bool AllowUpdates { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AppSecuritySettings {\n");
            sb.Append("  AllowCommands: ").Append(AllowCommands).Append("\n");
            sb.Append("  AllowConnects: ").Append(AllowConnects).Append("\n");
            sb.Append("  AllowUpdates: ").Append(AllowUpdates).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AppSecuritySettings);
        }

        /// <summary>
        /// Returns true if AppSecuritySettings instances are equal
        /// </summary>
        /// <param name="input">Instance of AppSecuritySettings to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AppSecuritySettings input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AllowCommands == input.AllowCommands ||
                    this.AllowCommands.Equals(input.AllowCommands)
                ) && 
                (
                    this.AllowConnects == input.AllowConnects ||
                    this.AllowConnects.Equals(input.AllowConnects)
                ) && 
                (
                    this.AllowUpdates == input.AllowUpdates ||
                    this.AllowUpdates.Equals(input.AllowUpdates)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.AllowCommands.GetHashCode();
                hashCode = (hashCode * 59) + this.AllowConnects.GetHashCode();
                hashCode = (hashCode * 59) + this.AllowUpdates.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
