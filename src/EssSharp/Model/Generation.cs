/*
 * The REST API for Oracle Essbase enables you to automate management of Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EssSharp.Client.OpenAPIDateConverter;

namespace EssSharp.Model
{
    /// <summary>
    /// Generation
    /// </summary>
    [DataContract(Name = "Generation")]
    public partial class Generation : IEquatable<Generation>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Generation" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Generation() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Generation" /> class.
        /// </summary>
        /// <param name="generationNumber">generationNumber (required).</param>
        /// <param name="columnName">columnName (required).</param>
        public Generation(int generationNumber = default(int), string columnName = default(string))
        {
            this.GenerationNumber = generationNumber;
            // to ensure "columnName" is required (not null)
            if (columnName == null)
            {
                throw new ArgumentNullException("columnName is a required property for Generation and cannot be null");
            }
            this.ColumnName = columnName;
        }

        /// <summary>
        /// Gets or Sets GenerationNumber
        /// </summary>
        [DataMember(Name = "generationNumber", IsRequired = true, EmitDefaultValue = true)]
        public int GenerationNumber { get; set; }

        /// <summary>
        /// Gets or Sets ColumnName
        /// </summary>
        [DataMember(Name = "columnName", IsRequired = true, EmitDefaultValue = true)]
        public string ColumnName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Generation {\n");
            sb.Append("  GenerationNumber: ").Append(GenerationNumber).Append("\n");
            sb.Append("  ColumnName: ").Append(ColumnName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Generation);
        }

        /// <summary>
        /// Returns true if Generation instances are equal
        /// </summary>
        /// <param name="input">Instance of Generation to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Generation input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.GenerationNumber == input.GenerationNumber ||
                    this.GenerationNumber.Equals(input.GenerationNumber)
                ) && 
                (
                    this.ColumnName == input.ColumnName ||
                    (this.ColumnName != null &&
                    this.ColumnName.Equals(input.ColumnName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.GenerationNumber.GetHashCode();
                if (this.ColumnName != null)
                {
                    hashCode = (hashCode * 59) + this.ColumnName.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
