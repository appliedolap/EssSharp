/*
 * The REST API for Oracle Essbase enables you to automate management of Essbase resources and operations. All requests and responses are communicated over secured HTTP.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EssSharp.Client.OpenAPIDateConverter;

namespace EssSharp.Model
{
    /// <summary>
    /// OtlEditMain
    /// </summary>
    [DataContract(Name = "OtlEditMain")]
    public partial class OtlEditMain : IEquatable<OtlEditMain>, IValidatableObject
    {
        /// <summary>
        /// Defines RestructOption
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RestructOptionEnum
        {
            /// <summary>
            /// Enum ALLDATA for value: ALL_DATA
            /// </summary>
            [EnumMember(Value = "ALL_DATA")]
            ALLDATA = 1,

            /// <summary>
            /// Enum NODATA for value: NO_DATA
            /// </summary>
            [EnumMember(Value = "NO_DATA")]
            NODATA = 2,

            /// <summary>
            /// Enum LOWDATA for value: LOW_DATA
            /// </summary>
            [EnumMember(Value = "LOW_DATA")]
            LOWDATA = 3,

            /// <summary>
            /// Enum INDATA for value: IN_DATA
            /// </summary>
            [EnumMember(Value = "IN_DATA")]
            INDATA = 4

        }


        /// <summary>
        /// Gets or Sets RestructOption
        /// </summary>
        [DataMember(Name = "restructOption", EmitDefaultValue = false)]
        public RestructOptionEnum? RestructOption { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="OtlEditMain" /> class.
        /// </summary>
        /// <param name="editActions">editActions.</param>
        /// <param name="otlVersion">otlVersion.</param>
        /// <param name="validate">validate.</param>
        /// <param name="validateFormulas">validateFormulas.</param>
        /// <param name="keepTransaction">keepTransaction.</param>
        /// <param name="restructOption">restructOption.</param>
        /// <param name="jsonformatLog">jsonformatLog.</param>
        public OtlEditMain(List<JAXBElementObject> editActions = default(List<JAXBElementObject>), int otlVersion = default(int), bool validate = default(bool), bool validateFormulas = default(bool), bool keepTransaction = default(bool), RestructOptionEnum? restructOption = default(RestructOptionEnum?), bool jsonformatLog = default(bool))
        {
            this.EditActions = editActions;
            this.OtlVersion = otlVersion;
            this.Validate = validate;
            this.ValidateFormulas = validateFormulas;
            this.KeepTransaction = keepTransaction;
            this.RestructOption = restructOption;
            this.JsonformatLog = jsonformatLog;
        }

        /// <summary>
        /// Gets or Sets EditActions
        /// </summary>
        [DataMember(Name = "editActions", EmitDefaultValue = false)]
        public List<JAXBElementObject> EditActions { get; set; }

        /// <summary>
        /// Gets or Sets OtlVersion
        /// </summary>
        [DataMember(Name = "otlVersion", EmitDefaultValue = false)]
        public int OtlVersion { get; set; }

        /// <summary>
        /// Gets or Sets Validate
        /// </summary>
        [DataMember(Name = "validate", EmitDefaultValue = true)]
        public bool Validate { get; set; }

        /// <summary>
        /// Gets or Sets ValidateFormulas
        /// </summary>
        [DataMember(Name = "validateFormulas", EmitDefaultValue = true)]
        public bool ValidateFormulas { get; set; }

        /// <summary>
        /// Gets or Sets KeepTransaction
        /// </summary>
        [DataMember(Name = "keepTransaction", EmitDefaultValue = true)]
        public bool KeepTransaction { get; set; }

        /// <summary>
        /// Gets or Sets JsonformatLog
        /// </summary>
        [DataMember(Name = "jsonformatLog", EmitDefaultValue = true)]
        public bool JsonformatLog { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OtlEditMain {\n");
            sb.Append("  EditActions: ").Append(EditActions).Append("\n");
            sb.Append("  OtlVersion: ").Append(OtlVersion).Append("\n");
            sb.Append("  Validate: ").Append(Validate).Append("\n");
            sb.Append("  ValidateFormulas: ").Append(ValidateFormulas).Append("\n");
            sb.Append("  KeepTransaction: ").Append(KeepTransaction).Append("\n");
            sb.Append("  RestructOption: ").Append(RestructOption).Append("\n");
            sb.Append("  JsonformatLog: ").Append(JsonformatLog).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OtlEditMain);
        }

        /// <summary>
        /// Returns true if OtlEditMain instances are equal
        /// </summary>
        /// <param name="input">Instance of OtlEditMain to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OtlEditMain input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.EditActions == input.EditActions ||
                    this.EditActions != null &&
                    input.EditActions != null &&
                    this.EditActions.SequenceEqual(input.EditActions)
                ) && 
                (
                    this.OtlVersion == input.OtlVersion ||
                    this.OtlVersion.Equals(input.OtlVersion)
                ) && 
                (
                    this.Validate == input.Validate ||
                    this.Validate.Equals(input.Validate)
                ) && 
                (
                    this.ValidateFormulas == input.ValidateFormulas ||
                    this.ValidateFormulas.Equals(input.ValidateFormulas)
                ) && 
                (
                    this.KeepTransaction == input.KeepTransaction ||
                    this.KeepTransaction.Equals(input.KeepTransaction)
                ) && 
                (
                    this.RestructOption == input.RestructOption ||
                    this.RestructOption.Equals(input.RestructOption)
                ) && 
                (
                    this.JsonformatLog == input.JsonformatLog ||
                    this.JsonformatLog.Equals(input.JsonformatLog)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EditActions != null)
                {
                    hashCode = (hashCode * 59) + this.EditActions.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.OtlVersion.GetHashCode();
                hashCode = (hashCode * 59) + this.Validate.GetHashCode();
                hashCode = (hashCode * 59) + this.ValidateFormulas.GetHashCode();
                hashCode = (hashCode * 59) + this.KeepTransaction.GetHashCode();
                hashCode = (hashCode * 59) + this.RestructOption.GetHashCode();
                hashCode = (hashCode * 59) + this.JsonformatLog.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
